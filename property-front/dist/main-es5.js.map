{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_helpers/customValidators.ts","webpack:///src/app/_helpers/error.interceptor.ts","webpack:///src/app/_helpers/fake-backend.ts","webpack:///src/app/_helpers/index.ts","webpack:///src/app/_helpers/jwt.interceptor.ts","webpack:///src/app/_helpers/truncate-text.pipe.ts","webpack:///src/app/_mockServices/my-in-memory.service.ts","webpack:///src/app/_models/advert.ts","webpack:///src/app/_models/user.ts","webpack:///src/app/_services/advert.service.ts","webpack:///src/app/_services/authentication.service.ts","webpack:///src/app/_services/index.ts","webpack:///src/app/_services/location.service.ts","webpack:///src/app/_services/user.service.ts","webpack:///src/app/accounts/accounts.module.ts","webpack:///src/app/accounts/my-account/my-account.component.ts","webpack:///src/app/accounts/my-account/my-account.component.html","webpack:///src/app/accounts/password-dialog/password-dialog.component.ts","webpack:///src/app/accounts/password-dialog/password-dialog.component.html","webpack:///src/app/adverts/advert-detail/advert-detail.component.ts","webpack:///src/app/adverts/advert-detail/advert-detail.component.html","webpack:///src/app/adverts/adverts.module.ts","webpack:///src/app/adverts/all-adverts/all-adverts.component.ts","webpack:///src/app/adverts/all-adverts/all-adverts.component.html","webpack:///src/app/adverts/dialogs/contact-seller-dialog/contact-seller-dialog.component.ts","webpack:///src/app/adverts/dialogs/contact-seller-dialog/contact-seller-dialog.component.html","webpack:///src/app/adverts/dialogs/delete-dialog/delete-dialog.component.ts","webpack:///src/app/adverts/dialogs/delete-dialog/delete-dialog.component.html","webpack:///src/app/adverts/dialogs/search-dialog/search-dialog.component.ts","webpack:///src/app/adverts/dialogs/search-dialog/search-dialog.component.html","webpack:///src/app/adverts/dialogs/unsaved-changes-dialog/unsaved-changes-dialog.component.ts","webpack:///src/app/adverts/dialogs/unsaved-changes-dialog/unsaved-changes-dialog.component.html","webpack:///src/app/adverts/edit-advert/edit-advert.component.ts","webpack:///src/app/adverts/edit-advert/edit-advert.component.html","webpack:///src/app/adverts/favourite-adverts/favourite-adverts.component.ts","webpack:///src/app/adverts/favourite-adverts/favourite-adverts.component.html","webpack:///src/app/adverts/myadverts/index.ts","webpack:///src/app/adverts/myadverts/myadverts.component.ts","webpack:///src/app/adverts/myadverts/myadverts.component.html","webpack:///src/app/adverts/unsaved.guard.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/authentication/auth.guard.ts","webpack:///src/app/authentication/authentication.module.ts","webpack:///src/app/authentication/login/index.ts","webpack:///src/app/authentication/login/login.component.ts","webpack:///src/app/authentication/login/login.component.html","webpack:///src/app/authentication/not.auth.guard.ts","webpack:///src/app/authentication/registration/registration.component.ts","webpack:///src/app/authentication/registration/registration.component.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/shared/advert-actions/advert-actions.component.ts","webpack:///src/app/shared/advert-actions/advert-actions.component.html","webpack:///src/app/shared/advert-card-large/advert-card-large.component.ts","webpack:///src/app/shared/advert-card-large/advert-card-large.component.html","webpack:///src/app/shared/contact-form/contact-form.component.ts","webpack:///src/app/shared/contact-form/contact-form.component.html","webpack:///src/app/shared/mobile-nav/mobile-nav.component.ts","webpack:///src/app/shared/mobile-nav/mobile-nav.component.html","webpack:///src/app/shared/ng-material/ng-material.module.ts","webpack:///src/app/shared/search/search.component.ts","webpack:///src/app/shared/search/search.component.html","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/utils.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","CustomValidators","control","test","value","password","get","confirmPass","pristine","ErrorInterceptor","authenticationService","request","next","handle","pipe","err","status","error","message","statusText","users","email","firstName","lastName","contactNumber","favourites","FakeBackendInterceptor","url","method","headers","body","handleRoute","endsWith","authenticate","getUsers","updateUser","includes","getUser","updatePassword","createUser","user","find","x","ok","token","isLoggedIn","unauthorized","startPoint","lastIndexOf","endPoint","length","userId","slice","currentPassword","numberOfUsers","push","fakeBackendProvider","provide","useClass","multi","JwtInterceptor","currentUser","currentUserValue","isApiUrl","startsWith","apiUrl","clone","setHeaders","Authorization","TruncateTextPipe","biggestWord","elipses","truncatedText","lastSpace","replace","name","MyInMemoryService","adverts","title","province","city","details","price","bedrooms","bathrooms","parkingSpaces","images","headlineImage","cities","Advert","User","AdvertService","_http","apiEndpoint","initializeAd","filter","ad","advert","post","put","providedIn","AuthenticationService","currentUserSubject","JSON","parse","localStorage","getItem","asObservable","setItem","stringify","removeItem","LocationService","UserService","AccountsModule","declarations","imports","MyAccountComponent","_formBuilder","_userService","_router","authService","matDialog","matSnackBar","validationMessage","successMessage","manageAccountForm","group","required","minLength","maxLength","multipleSpaceValidator","noSpecialChars","noNumbers","noSpaceValidator","onlyNumbers","sub","valueChanges","subscribe","getAuthUser","authUser","displayUser","patchValue","userToUpdate","trim","open","duration","navigateByUrl","skipLocationChange","navigate","data","passwords","markAsPristine","markAsUntouched","unsubscribe","openDialog","selector","templateUrl","styleUrls","PasswordDialogComponent","dialogRef","fieldTextType","buildForm","editPasswordForm","passwordNumber","passwordUpperCase","validator","passwordCompare","setErrors","valid","markAllAsTouched","passwordToUpdate","updateUserPassword","close","toggleFieldTextType","closeDialog","AdvertDetailComponent","_route","_advertService","userService","headlineImgIndex","isLoading","add","paramMap","params","getAdvert","img","newIndex","findIndex","image","splice","unshift","determineFavourite","imagesLoaded","authUserId","isFavourite","newFavourites","element","AdvertsModule","AllAdvertsComponent","route","orderBy","advertsToSend","loading","queryParamMap","preFilledTerms","hasParams","Object","advertSubscription","getSearchedAdverts","getAllAdverts","filterAdverts","choice","isAscending","sort","compare","order","innerSort","a","b","advertA","advertB","comparison","searchTerms","hasKeyword","hasOwnProperty","hasProvince","hasCity","hasMinPrice","hasMaxPrice","keyword","forEach","filterSomeMore","minPrice","maxPrice","openSearchModal","orderChoice","ContactSellerDialogComponent","event","DeleteDialogComponent","advertService","router","deleteAdvert","SearchDialogComponent","UnsavedChangesDialogComponent","choose","EditAdvertComponent","_locationService","locations","isConfirm","alertMessage","canExit$","editAdvertForm","min","max","getCities","afterClosed","list","displayAdvert","advertDetails","addBreaksToAdvertDetails","randomHeadlineImage","createAdvert","afterSave","randomNum","Math","floor","random","updatedAdvert","updateAdvert","setTimeout","arr","split","i","str","join","onSave","FavouriteAdvertsComponent","filtered","ads","adToRemove","MyAdvertsComponent","_authService","getUserAdverts","UnsavedGuard","state","component","currentRoute","currentState","nextState","dirty","unsavedChanges","routes","path","canActivate","canDeactivate","redirectTo","AppRoutingModule","forRoot","AppComponent","AppModule","providers","bootstrap","AuthGuard","AuthenticationModule","LoginComponent","_authenticationService","submitted","loginForm","returnUrl","snapshot","queryParams","invalid","login","f","controls","onSubmit","NotAuthGuard","routeConfig","RegistrationComponent","invalidSubmit","passRequirements","registrationForm","saveUser","showPassRequirements","FooterComponent","HeaderComponent","home","logout","HomeComponent","openMobileNavModal","AdvertActionsComponent","openDeleteDialog","AdvertCardLargeComponent","advertIdEvent","displayActions","emit","ContactFormComponent","formBuilder","closeDialogEvent","contactSellerForm","reset","contactClick","MobileNavComponent","NgMaterialModule","SearchComponent","provinces","prices","searchForm","setValue","map","assignClass","generatePrices","count","onSearch","resetClick","SharedModule","invalidInputs","formgroup","messages","input","errors","messageKey","validationMessages","nestedGroupMessages","assign","touched","minlength","maxlength","noSpecialChar","match","environment","production","bootstrapModule","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { AbstractControl } from '@angular/forms';\r\n\r\nexport class CustomValidators {\r\n\r\n  static noSpaceValidator(\r\n    control: AbstractControl\r\n    ): { [key: string]: boolean } | null {\r\n      if (/[\\s]/.test(control.value)) {\r\n        return { 'noSpaceValidator': true };\r\n      }\r\n      return null;\r\n    }\r\n\r\n    static multipleSpaceValidator(\r\n      control: AbstractControl\r\n      ): { [key: string]: boolean } | null {\r\n        if (/[\\s][\\s]/.test(control.value)) {\r\n          return { 'multipleSpaceValidator': true };\r\n        }\r\n        return null;\r\n      }\r\n\r\n    static noSpecialChars (control: AbstractControl): { [key: string]: boolean } | null {\r\n      if (/[!@#$%^&*(),.?\":{}|<>±§_+~`=\\/]/g.test(control.value)) {\r\n        return { 'noSpecialChar' : true }\r\n      }\r\n      return null;\r\n    }\r\n\r\n    static noNumbers(control: AbstractControl): { [key: string]: boolean } | null {\r\n      if (/[0-9]/.test(control.value)) {\r\n        return { 'noNumbers' : true }\r\n      }\r\n      return null;\r\n    }\r\n\r\n    static onlyNumbers(control: AbstractControl): { [key: string]: boolean } | null {\r\n      // if (!/[0-9]/.test(control.value)) {\r\n      if (/[A-Za-z!@#$%^&*(),.?\":{}|<>±§_+~`=\\/]/.test(control.value)) {\r\n        return { 'onlyNumbers' : true }\r\n      }\r\n      return null;\r\n    }\r\n\r\n    static passwordNumber(control: AbstractControl): { [key:  string]: boolean } | null {\r\n      if (!/[0-9]/.test(control.value)) {\r\n        return { 'passwordNumber' : true };\r\n      }\r\n      return null;\r\n    }\r\n\r\n    static passwordUpperCase(control: AbstractControl): { [key: string]: boolean } | null {\r\n      if (!/[A-Z]/.test(control.value)) {\r\n        return { 'passwordUpperCase': true }\r\n      }\r\n      return null;\r\n    }\r\n\r\n    static passwordCompare(\r\n      control: AbstractControl\r\n    ): { [key: string]: boolean } | null {\r\n      let password = control.get('password');\r\n      let confirmPass = control.get('confirmPass');\r\n    \r\n      if (password.pristine || confirmPass.pristine) {\r\n        return null;\r\n      }\r\n    \r\n      if (password.value !== confirmPass.value) {\r\n        return { 'match' : true }\r\n      }\r\n      return null;\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '@app/_services';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                // this.authenticationService.logout();\r\n                // location.reload();\r\n            }\r\n\r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  HttpRequest,\r\n  HttpResponse,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HTTP_INTERCEPTORS,\r\n} from \"@angular/common/http\";\r\nimport { Observable, of, throwError } from \"rxjs\";\r\nimport { delay, mergeMap, materialize, dematerialize } from \"rxjs/operators\";\r\n\r\nimport { User } from \"@app/_models\";\r\n\r\nconst users: User[] = [\r\n  {\r\n    id: 1,\r\n    email: \"test@test\",\r\n    password: \"test\",\r\n    firstName: \"Test\",\r\n    lastName: \"User\",\r\n    // password: \"test\",\r\n    contactNumber: \"0765698964\",\r\n    favourites: [1]\r\n  },\r\n  {\r\n    id: 2,\r\n    email: \"test2@test\",\r\n    password: \"test2\",\r\n    firstName: \"Test2\",\r\n    lastName: \"Test2Suranme\",\r\n    // confirmPass: \"test2\",\r\n    contactNumber: \"0824593652\",\r\n    favourites: []\r\n  },\r\n];\r\n\r\n@Injectable()\r\nexport class FakeBackendInterceptor implements HttpInterceptor {\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const { url, method, headers, body } = request;\r\n\r\n    // wrap in delayed observable to simulate server api call\r\n    return of(null)\r\n      .pipe(mergeMap(handleRoute))\r\n      .pipe(materialize()) // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\r\n      .pipe(delay(500))\r\n      .pipe(dematerialize());\r\n\r\n    function handleRoute() {\r\n \r\n      switch (true) {\r\n        case url.endsWith(\"/users/authenticate\") && method === \"POST\":\r\n          return authenticate();\r\n        case url.endsWith(\"/users\") && method === \"GET\":\r\n          return getUsers();\r\n        case url.endsWith(\"/users\") && method === \"PUT\":\r\n          return updateUser();\r\n        case url.includes(\"/users\") && !url.endsWith(\"/users\") && method === \"GET\":\r\n          return getUser(url);\r\n        case url.endsWith(\"/users/password\") && method === \"PUT\":\r\n          return updatePassword();\r\n        case url.endsWith(\"/users\") && method === \"POST\":\r\n          return createUser();\r\n        default:\r\n          // pass through any requests not handled above\r\n          return next.handle(request);\r\n      }\r\n    }\r\n\r\n    // route functions\r\n\r\n    function authenticate() {\r\n      const { email, password } = body;\r\n      const user = users.find(\r\n        (x) => x.email === email && x.password === password\r\n      );\r\n      if (!user) return error(\"Username or password is incorrect\");\r\n\r\n      return ok({\r\n        id: user.id,\r\n        email: user.email,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        contactNumber: user.contactNumber,\r\n        token: \"fake-jwt-token\",\r\n        favourites: user.favourites\r\n      });\r\n    }\r\n\r\n    function getUsers() {\r\n      if (!isLoggedIn()) return unauthorized();\r\n      return ok(users);\r\n    }\r\n\r\n    function getUser(url) {\r\n      if (!isLoggedIn()) return unauthorized();\r\n      const startPoint = url.lastIndexOf(\"/\") + 1;\r\n      const endPoint = url.length;\r\n      const userId = url.slice(startPoint, endPoint);\r\n\r\n      const user = users.find(user => user.id === +userId);\r\n      return ok(user);\r\n    }\r\n\r\n    function updateUser() {\r\n      /** @TODO: Change the value stored in localstorage as well..? */\r\n      const { email, firstName, lastName, contactNumber, id } = body;\r\n      const user = users.find((x) => x.id === id);\r\n\r\n      user.firstName = firstName;\r\n      user.lastName = lastName;\r\n      user.email = email;\r\n      user.contactNumber = contactNumber;\r\n\r\n      return ok({\r\n        id: user.id,\r\n        email: email,\r\n        firstName: firstName,\r\n        lastName: lastName,\r\n        contactNumber: contactNumber,\r\n        token: \"fake-jwt-token\",\r\n      });\r\n    }\r\n\r\n    function updatePassword() {\r\n      const { currentPassword, password, confirmPass } = body;\r\n      /** @ TODO: Change this - we might have two users with the same password */\r\n      const user = users.find((x) => x.password === currentPassword);\r\n      if (!user) return error(\"Current password is incorrect\");\r\n      user.password = password;\r\n      return ok({\r\n        password: password,\r\n        confirmPass: confirmPass,\r\n      });\r\n    }\r\n\r\n    function createUser() {\r\n      let user = body;\r\n\r\n      const numberOfUsers = users.length;\r\n      user.id = numberOfUsers + 1;\r\n\r\n      users.push(user);\r\n\r\n      return ok({\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        email: user.email,\r\n        password: user.password\r\n      })\r\n    }\r\n\r\n    // helper functions\r\n\r\n    function ok(body?) {\r\n      return of(new HttpResponse({ status: 200, body }));\r\n    }\r\n\r\n    function error(message) {\r\n      return throwError({ error: { message } });\r\n    }\r\n\r\n    function unauthorized() {\r\n      return throwError({ status: 401, error: { message: \"Unauthorised\" } });\r\n    }\r\n\r\n    function isLoggedIn() {\r\n      return headers.get(\"Authorization\") === \"Bearer fake-jwt-token\";\r\n    }\r\n  }\r\n}\r\n\r\nexport let fakeBackendProvider = {\r\n  // use fake backend in place of Http service for backend-less development\r\n  provide: HTTP_INTERCEPTORS,\r\n  useClass: FakeBackendInterceptor,\r\n  multi: true,\r\n};\r\n","export * from '../authentication/not.auth.guard';\r\nexport * from './error.interceptor';\r\nexport * from './fake-backend';\r\nexport * from './jwt.interceptor';","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { environment } from '@environments/environment';\r\nimport { AuthenticationService } from '@app/_services';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add auth header with jwt if user is logged in and request is to the api url\r\n        const currentUser = this.authenticationService.currentUserValue;\r\n        const isLoggedIn = currentUser && currentUser.token;\r\n        const isApiUrl = request.url.startsWith(environment.apiUrl);\r\n        if (isLoggedIn && isApiUrl) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${currentUser.token}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'truncateText'\r\n})\r\nexport class TruncateTextPipe implements PipeTransform {\r\n\r\n  transform(value: string, length: number): string {\r\n\r\n    const biggestWord = 50;\r\n    const elipses = \"...\";\r\n\r\n    if(typeof value === \"undefined\") return value;\r\n    if(value.length <= length) return value;\r\n\r\n    //.. truncate to about correct length\r\n    let truncatedText = value.slice(0, length + biggestWord);\r\n\r\n    //.. now nibble ends till correct length\r\n    while (truncatedText.length > length - elipses.length) {\r\n        let lastSpace = truncatedText.lastIndexOf(\" \");\r\n        if(lastSpace === -1) break;\r\n        truncatedText = truncatedText.slice(0, lastSpace).replace(/[!,.?;:]$/, '');\r\n    };\r\n\r\n   return truncatedText + elipses;\r\n  }\r\n\r\n}\r\n","import { InMemoryDbService } from \"angular-in-memory-web-api\";\r\nimport { RequestInfo } from \"angular-in-memory-web-api/interfaces\";\r\n\r\nexport class MyInMemoryService implements InMemoryDbService {\r\n  createDb() {\r\n  \r\n    const adverts = [\r\n      {\r\n        id: 3,\r\n        userId: 2,\r\n        title: \"2 Bedroom Apartment\",\r\n        province: \"Western Cape\",\r\n        city: \"Jeffries Bay\",\r\n        details:\r\n          \"2 bedrooms with the main leading out to garden with french doors, unit has a beautiful full bathroom. Generous sized living area open plan lounge/ dining and kitchen with sliding doors leading out on to the private  garden and covered patio area. Complex offers tennis court 3 pools active club house fiber and 24 hour security, access control, Douglasdale village shopping center a walk away.<br><br> The unit comes with one covered parking with plenty of visitors parking for your guests. Complex has 24 hour security and a beautiful pool area with braai facilities for those hot summer days. <br><br> This is a ground floor apartment, parking is close to the unit one is covered and second one is not. In a well maintained complex, which is close to schools, shops and transport. Apartment has modern finishes. Unit is fibre ready. Kitchen has space for two under counter appliances. Main bathroom has a shower. The second bathroom has a shower and separate bath. Complex has play areas for the kids. Easy access to the highway to get to work.\",\r\n        price: 940000,\r\n        status: \"Live\",\r\n        bedrooms: 2,\r\n        bathrooms: 2,\r\n        parkingSpaces: 1,\r\n        images: [\r\n          '../../../assets/image-1.jpg',\r\n          '../../../assets/image-2.jpg',\r\n          '../../../assets/image-3.jpg',\r\n          '../../../assets/image-4.jpg',\r\n          '../../../assets/image-5.jpg',\r\n          '../../../assets/image-6.jpg',\r\n        ],\r\n        headlineImage: '../../../assets/image-1.jpg'\r\n      \r\n      },\r\n      {\r\n        id: 1,\r\n        userId: 1,\r\n        title: \"3 Bedroom House\",\r\n        province: \"Gauteng\",\r\n        city: \"Johannesburg\",\r\n        details:\r\n          \"Enjoy the warm and inviting viking family lifestyle of this popular complex where mothers meet and enjoy a glass of wine, whilst the children play and ride their bikes in the street. 3/4 sunlit bedrooms with wood laminated floors (main bedroom with air-conditioner), 2 full modern bathrooms with blinds (main with double vanities). Functional modern, open plan kitchen with granite tops, scullery and lots of storage.\",\r\n        price: 2400000,\r\n        status: \"Live\",\r\n        bedrooms: 3,\r\n        bathrooms: 2,\r\n        parkingSpaces: 2,\r\n        images: [\r\n          '../../../assets/image-1.jpg',\r\n          '../../../assets/image-2.jpg',\r\n          '../../../assets/image-3.jpg',\r\n          '../../../assets/image-4.jpg',\r\n          '../../../assets/image-5.jpg',\r\n          '../../../assets/image-6.jpg',\r\n        ],\r\n        headlineImage: '../../../assets/image-2.jpg'\r\n      \r\n      },\r\n      {\r\n        id: 2,\r\n        userId: 1,\r\n        title: \"2 Bedroom House\",\r\n        province: \"Gauteng\",\r\n        city: \"Johannesburg\",\r\n        details:\r\n          \"The property has a generous novik floor space of 91m2, your open plan kitchen with plenty of granite counter top and cupboard space will cater for the aspiring cook. The kitchen is open plan, leading into the generous living area, which flows seamlessly onto the private covered patio. The well sized bedrooms have been lovingly maintained, the main bedroom is en-suite with a shower, and the second bedroom is serviced by the second bathroom with bath and overhead shower. This unit provides 2 carports, one covered and one open, and the added benefits of what the lifestyle estate offers, swimming pool, clubhouse, tennis courts, 24 hour security, manicured communal gardens, ample visitors parking, and so much more. It really is a must view.\",\r\n        price: 1300000,\r\n        status: \"Live\",\r\n        bedrooms: 2,\r\n        bathrooms: 1,\r\n        parkingSpaces: 2,\r\n        images: [\r\n          '../../../assets/image-1.jpg',\r\n          '../../../assets/image-2.jpg',\r\n          '../../../assets/image-3.jpg',\r\n          '../../../assets/image-4.jpg',\r\n          '../../../assets/image-5.jpg',\r\n          '../../../assets/image-6.jpg',\r\n        ],\r\n        headlineImage: '../../../assets/image-5.jpg' \r\n      },\r\n    ];\r\n\r\n\r\n    const cities = [\r\n      { name: \"Johannesburg\", province: \"Gauteng\"},\r\n      { name: \"Pretoria\", province: \"Gauteng\"},\r\n      { name: \"Port Elizabeth\", province: \"Eastern Cape\"},\r\n      { name: \"East London\", province: \"Eastern Cape\"},\r\n      { name: \"Cape Town\", province: \"Western Cape\"},\r\n      { name: \"Jeffries Bay\", province: \"Western Cape\"},\r\n      { name: \"Kimberley\", province: \"Northern Cape\"},\r\n      { name: \"Upington\", province: \"Northern Cape\"},\r\n      { name: \"Bloemfontein\", province: \"Free State\"},\r\n      { name: \"Welkom\", province: \"Free State\"},\r\n      { name: \"Mahikeng\", province: \"North West\"},\r\n      { name: \"Klerksdop\", province: \"North West\"},\r\n      { name: \"Polokwane\", province: \"Limpopo\"},\r\n      { name: \"Mokopane\", province: \"Limpopo\"},\r\n      { name: \"Mbombela\", province: \"Mpumalanga\"},\r\n      { name: \"Hazyview\", province: \"Mpumalanga\"},\r\n      { name: \"Durban\", province: \"Kwazulu-Natal\"},\r\n      { name: \"Pietermaritzburg\", province: \"Kwazulu-Natal\"}\r\n    ];\r\n\r\n    return { adverts, cities };\r\n  }\r\n}\r\n","import { IAdvert } from './IAdvert';\r\n\r\n\r\nexport class Advert implements IAdvert {\r\n\r\n  constructor(\r\n    public title: string,\r\n    public province: string,\r\n    public city: string,\r\n    public price: number,\r\n    public details: string,\r\n    public bedrooms: number,\r\n    public bathrooms: number,\r\n    public parkingSpaces: number,\r\n    public images: string[],\r\n    public headlineImage: string,\r\n    public status?: string,\r\n    /** @Note: shouldnt need this once the userId gets assigned via the API */\r\n    public userId?: number,\r\n    public id?: number\r\n  ) {}\r\n}\r\n","import { IUser } from './IUser';\r\n\r\nexport class User implements IUser {\r\n\r\n    constructor(\r\n        public firstName: string,\r\n        public lastName: string,\r\n        public email: string,\r\n        public contactNumber?: string,\r\n        public password?: string,\r\n        public token?: string,\r\n        public id?: number,\r\n        public favourites?: number[]\r\n    ){}\r\n}","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { IAdvert } from '@app/_models/IAdvert';\r\nimport { environment } from '@environments/environment';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdvertService {\r\n\r\n  apiEndpoint = 'api/adverts';\r\n\r\n  constructor(private _http: HttpClient) {}\r\n\r\n  getAdvert(id: number): Observable<IAdvert> {\r\n    if (id === 0) {\r\n      return of(this.initializeAd());\r\n    }\r\n    \r\n    return this._http.get<IAdvert>(`${environment.apiUrl}/${this.apiEndpoint}/${id}`);\r\n  }\r\n\r\n  getAllAdverts(): Observable<any> {\r\n    return this._http.get<any>(`${environment.apiUrl}/${this.apiEndpoint}`)\r\n    /** @NOTE: Filtering for advert status would be handled by the API */\r\n      .pipe(\r\n        map(adverts => {\r\n          return adverts.filter(ad => ad.status == \"Live\");\r\n        })\r\n      );\r\n  }\r\n\r\n  getSearchedAdverts(): Observable<IAdvert[]> {\r\n    return this._http.get<IAdvert[]>(`${environment.apiUrl}/${this.apiEndpoint}`)\r\n  }\r\n\r\n  getUserAdverts(id: number): Observable<any> {\r\n    return this._http.get<IAdvert[]>(`${environment.apiUrl}/${this.apiEndpoint}`)\r\n    /** @Note: This would be removed and handled by the API when there is one */\r\n      .pipe(\r\n        map(x => {\r\n          return x.filter(advert => advert.userId === id)\r\n        })\r\n      );\r\n  }\r\n\r\n  createAdvert(advert: IAdvert): Observable<IAdvert> {\r\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n    return this._http.post<IAdvert>(`${environment.apiUrl}/${this.apiEndpoint}`, advert, { headers });\r\n  }\r\n\r\n  /** @TODO: Pass the advert ID and request body seperatley here so i'm not using advert.id as the param */\r\n  updateAdvert(advert: IAdvert): Observable<IAdvert> {\r\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n    return this._http.put<IAdvert>(`${environment.apiUrl}/${this.apiEndpoint}/${advert.id}`, advert, { headers });\r\n  }\r\n\r\n  deleteAdvert(id: number): Observable<any> {\r\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json'});\r\n    return this._http.delete<IAdvert>(`${environment.apiUrl}/${this.apiEndpoint}/${id}`, { headers });\r\n  }\r\n\r\n  initializeAd(): IAdvert {\r\n    return {  \r\n      title: '',\r\n      province: '',\r\n      city: '',\r\n      details: '',\r\n      price: null,\r\n      status: '',\r\n      bedrooms: null,\r\n      bathrooms: null,\r\n      parkingSpaces: null,\r\n      images: [],\r\n      headlineImage: ''\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { environment } from '@environments/environment';\r\nimport { User } from '@app/_models';\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n    private currentUserSubject: BehaviorSubject<User>;\r\n    public currentUser: Observable<User>;\r\n\r\n    constructor(private _http: HttpClient) {\r\n        this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\r\n        this.currentUser = this.currentUserSubject.asObservable();\r\n    }\r\n\r\n    public get currentUserValue(): User {\r\n        return this.currentUserSubject.value;\r\n    }\r\n\r\n    public get decodedToken(): any {\r\n        /** @NOTE: Won't work with the in memory API as a fake token is being assigned */\r\n        const token = this.currentUserSubject.value.token;\r\n        return jwt_decode(token);\r\n    }\r\n\r\n    login(email: string, password: string) {\r\n        /** @TODO: The api url that needs to be used when connected to the Node API is: `${environment.apiUrl}/users/login` - need to change this so they are the same */\r\n        return this._http.post<any>(`${environment.apiUrl}/users/authenticate`, { email, password })\r\n            .pipe(map(user => {\r\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                localStorage.setItem('currentUser', JSON.stringify(user));\r\n                this.currentUserSubject.next(user);\r\n                return user;\r\n            }));\r\n    }\r\n\r\n    logout() {\r\n        // remove user from local storage to log user out\r\n        localStorage.removeItem('currentUser');\r\n        this.currentUserSubject.next(null);\r\n    }\r\n}","export * from './authentication.service';\r\nexport * from './user.service';","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ILocation } from '@app/_models/ILocation';\r\nimport { environment } from '@environments/environment';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocationService {\r\n\r\n  apiEndpoint = 'api/cities';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  list(): Observable<any> {\r\n    return this._http.get<any>(`${environment.apiUrl}/${this.apiEndpoint}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { environment } from '@environments/environment';\r\nimport { User } from '@app/_models';\r\nimport { IUser } from '@app/_models/IUser';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserService {\r\n\r\n    apiEndpoint = 'api/users';\r\n\r\n    constructor(private _http: HttpClient) { }\r\n\r\n    getAll(): Observable<IUser[]> {\r\n        return this._http.get<IUser[]>(`${environment.apiUrl}/${this.apiEndpoint}`);\r\n    }\r\n\r\n    getUser(id: number): Observable<any> {\r\n        return this._http.get<any>(`${environment.apiUrl}/${this.apiEndpoint}/${id}`)\r\n    }\r\n\r\n    saveUser(user: User): Observable<User> {\r\n        /** @TODO: This call the save the user isn't saving the user correctly - or, it's maybe saving the user to the users array on the in mem service, not the fake-backend */\r\n        const headers = new HttpHeaders({ 'Content-Type' : 'application/json' })\r\n        return this._http.post<User>(`${environment.apiUrl}/${this.apiEndpoint}`, user, { headers : headers });\r\n      }\r\n\r\n    getAuthUser(): Observable<IUser> {\r\n        /** TODO: Fix - this is returning null at the moment */\r\n        return this._http.get<IUser>(`${environment.apiUrl}/${this.apiEndpoint}/auth`);\r\n    }\r\n\r\n    createUser(body: IUser): Observable<IUser> {\r\n        return this._http.post<IUser>(`${environment.apiUrl}/${this.apiEndpoint}/register`, body);\r\n    }\r\n\r\n    updateUser(body: IUser): Observable<IUser> {\r\n        return this._http.put<IUser>(`${environment.apiUrl}/${this.apiEndpoint}`, body);\r\n    }\r\n\r\n    updateUserPassword(body: {}): Observable<IUser> {\r\n        return this._http.put<IUser>(`${environment.apiUrl}/${this.apiEndpoint}/password`, body);\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MyAccountComponent } from './my-account/my-account.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { PasswordDialogComponent } from './password-dialog/password-dialog.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [ MyAccountComponent, PasswordDialogComponent ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\n\r\nexport class AccountsModule { }\r\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Router } from \"@angular/router\";\r\nimport { CustomValidators } from \"@app/_helpers/customValidators\";\r\nimport { IUser } from '@app/_models/IUser';\r\nimport { AuthenticationService, UserService } from \"@app/_services\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { debounceTime } from \"rxjs/operators\";\r\nimport { PasswordDialogComponent } from \"../password-dialog/password-dialog.component\";\r\nimport { invalidInputs } from \"@app/shared/utils\";\r\n\r\n@Component({\r\n  selector: \"app-my-account\",\r\n  templateUrl: \"./my-account.component.html\",\r\n  styleUrls: [\"./my-account.component.scss\"],\r\n})\r\n\r\nexport class MyAccountComponent implements OnInit, OnDestroy {\r\n  manageAccountForm: FormGroup;\r\n  validationMessage: { [key: string]: string } = {};\r\n  sub: Subscription;\r\n  authUser: IUser;\r\n  error: string = '';\r\n  successMessage: string = '';\r\n\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private _userService: UserService,\r\n    private _router: Router,\r\n    private authService: AuthenticationService,\r\n    private matDialog: MatDialog,\r\n    private matSnackBar: MatSnackBar) {}\r\n\r\n  ngOnInit(): void {\r\n    this.manageAccountForm = this._formBuilder.group({\r\n      firstName: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(1),\r\n          Validators.maxLength(100),\r\n          CustomValidators.multipleSpaceValidator,\r\n          CustomValidators.noSpecialChars,\r\n          CustomValidators.noNumbers,\r\n        ],\r\n      ],\r\n      lastName: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(100),\r\n          CustomValidators.multipleSpaceValidator,\r\n          CustomValidators.noSpecialChars,\r\n          CustomValidators.noNumbers,\r\n        ],\r\n      ],\r\n      email: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.email,\r\n          Validators.minLength(6),\r\n          Validators.maxLength(100),\r\n          CustomValidators.noSpaceValidator,\r\n        ],\r\n      ],\r\n      contactNumber: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          CustomValidators.onlyNumbers\r\n        ]\r\n      ]\r\n    });\r\n\r\n    this.sub = this.manageAccountForm.valueChanges\r\n      .pipe(debounceTime(600))\r\n      .subscribe(\r\n        (value) => (this.validationMessage = invalidInputs(this.manageAccountForm))\r\n      );\r\n\r\n    this.getAuthUser();\r\n  }\r\n\r\n  getAuthUser(): void {\r\n    const userId = this.authService.currentUserValue.id;\r\n\r\n    this._userService.getUser(userId)\r\n      .subscribe((user) => {\r\n        this.authUser = user;\r\n\r\n        this.displayUser();\r\n      })\r\n  }\r\n\r\n  displayUser(): void {\r\n    this.manageAccountForm.patchValue({\r\n      firstName: this.authUser.firstName,\r\n      lastName: this.authUser.lastName,\r\n      email: this.authUser.email,\r\n      contactNumber: this.authUser.contactNumber\r\n    });\r\n  }\r\n\r\n  updateUser(): void {\r\n\r\n    /** TODO: Change the way this updates */\r\n    const userToUpdate: IUser = { \r\n      id: this.authUser.id,\r\n      firstName: this.manageAccountForm.get(\"firstName\").value.trim(),\r\n      lastName: this.manageAccountForm.get(\"lastName\").value.trim(),\r\n      email: this.manageAccountForm.get(\"email\").value.trim(),\r\n      contactNumber: this.manageAccountForm.get(\"contactNumber\").value.trim(),\r\n    };\r\n\r\n    if (this.authUser.firstName === userToUpdate.firstName &&\r\n        this.authUser.lastName === userToUpdate.lastName && \r\n        this.authUser.email === userToUpdate.email && \r\n        this.authUser.contactNumber === userToUpdate.contactNumber ) {\r\n          this.matSnackBar.open(\"No changes were detected\", \"Close\", {\r\n            duration: 2000\r\n          })\r\n          return;\r\n        }\r\n\r\n    this._userService.updateUser(userToUpdate)\r\n      .subscribe((user) => {\r\n        this._router\r\n          .navigateByUrl(\"/RefreshComponent\", { skipLocationChange: true })\r\n          .then(() => {\r\n            this._router.navigate([\"/myaccount\"]);\r\n            this.matSnackBar.open(\"You profile has been updated\", \"Close\", {\r\n              duration: 2000\r\n            })\r\n          });\r\n      });\r\n  }\r\n\r\n  openDialog() {\r\n    this.matDialog.open(PasswordDialogComponent, {\r\n      data: {\r\n        user: this.authUser\r\n      }\r\n    })\r\n  }\r\n\r\n  afterSave(): void {\r\n    this.manageAccountForm.patchValue({\r\n      currentPassword: '',\r\n      passwords: { password: '', confirmPass: ''},\r\n    });\r\n    this.manageAccountForm.markAsPristine();\r\n    this.manageAccountForm.markAsUntouched();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.sub) this.sub.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"container\">\r\n \r\n  <div id=\"login-row\" class=\"row justify-content-center align-items-center\">\r\n    <div id=\"login-column\" class=\"col-md-6\">\r\n      <div id=\"login-box\" class=\"col-md-12\">\r\n        <form\r\n          id=\"login-form\"\r\n          class=\"form\"\r\n          novalidate\r\n          [formGroup]=\"manageAccountForm\"\r\n        >\r\n  \r\n          <h1 class=\"text-center my-4 h3\">Manage my account</h1>\r\n          <div class=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              id=\"firstName\"\r\n              class=\"form-control\"\r\n              formControlName=\"firstName\"\r\n              placeholder=\"First Name\"\r\n              autocomplete=\"off\"\r\n              [ngClass]=\"{\r\n                'is-invalid': validationMessage && validationMessage.firstName\r\n              }\"\r\n            />\r\n            <span class=\"invalid-feedback\">\r\n              <span>\r\n                {{ validationMessage.firstName }}\r\n              </span>\r\n            </span>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              id=\"lastName\"\r\n              class=\"form-control\"\r\n              formControlName=\"lastName\"\r\n              placeholder=\"Last Name\"\r\n              autocomplete=\"off\"\r\n              [ngClass]=\"{\r\n                'is-invalid': validationMessage && validationMessage.lastName\r\n              }\"\r\n            />\r\n            <span class=\"invalid-feedback\">\r\n              {{ validationMessage.lastName }}\r\n            </span>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              class=\"form-control\"\r\n              formControlName=\"email\"\r\n              placeholder=\"Email\"\r\n              autocomplete=\"off\"\r\n              [ngClass]=\"{\r\n                'is-invalid': validationMessage && validationMessage.email\r\n              }\"\r\n            />\r\n            <span class=\"invalid-feedback\">\r\n              <span>\r\n                {{ validationMessage.email }}\r\n              </span>\r\n            </span>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"contactNumber\"\r\n              id=\"contactNumber\"\r\n              class=\"form-control\"\r\n              formControlName=\"contactNumber\"\r\n              placeholder=\"Contact Number\"\r\n              autocomplete=\"off\"\r\n              [ngClass]=\"{\r\n                'is-invalid': validationMessage && validationMessage.contactNumber\r\n              }\"\r\n            />\r\n            <span class=\"invalid-feedback\">\r\n              <span>\r\n                {{ validationMessage.contactNumber }}\r\n              </span>\r\n            </span>\r\n          </div>\r\n\r\n          <a\r\n          class=\"btn btn-outline-secondary btn-lg btn-block\"\r\n          (click)=\"openDialog()\"\r\n        >\r\n          Change password\r\n        </a>\r\n          <button\r\n            type=\"submit\"\r\n            name=\"submit\"\r\n            class=\"btn btn-outline-success btn-lg btn-block\"\r\n            (click)=\"updateUser()\"\r\n            [disabled]=\"!manageAccountForm.touched\"\r\n          >\r\n            Save changes\r\n          </button>\r\n          <a\r\n            class=\"btn btn-outline-danger btn-lg btn-block\"\r\n            routerLink=\"/myadverts\"\r\n          >\r\n            Cancel\r\n          </a>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CustomValidators } from '@app/_helpers/customValidators';\nimport { UserService } from '@app/_services';\nimport { debounceTime, delay } from 'rxjs/operators';\nimport { invalidInputs } from '@app/shared/utils';\n\n@Component({\n  selector: 'app-password-dialog',\n  templateUrl: './password-dialog.component.html',\n  styleUrls: ['./password-dialog.component.scss']\n})\nexport class PasswordDialogComponent implements OnInit {\n\n  editPasswordForm: FormGroup;\n  fieldTextType: boolean = false;\n  validationMessage: { [key: string]: string } = {};\n\n  constructor(private _formBuilder: FormBuilder,\n              @Inject(MAT_DIALOG_DATA) public data: any,\n              public dialogRef: MatDialogRef<PasswordDialogComponent>,\n              private _userService: UserService,\n              private matSnackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.buildForm();\n  }\n\n  buildForm() {\n    this.editPasswordForm = this._formBuilder.group({\n      currentPassword: [\"\", Validators.required],\n      passwords: this._formBuilder.group({\n        password: [\"\", [  Validators.required, \n                          Validators.minLength(8), \n                          Validators.maxLength(100),\n                          CustomValidators.noSpaceValidator,\n                          CustomValidators.passwordNumber,\n                          CustomValidators.passwordUpperCase ]],\n        confirmPass: [\"\", Validators.required]\n      }, { validator: CustomValidators.passwordCompare } )\n    })\n\n    this.editPasswordForm.valueChanges\n      .pipe(debounceTime(800))\n      .subscribe(() => {\n        this.validationMessage = invalidInputs(this.editPasswordForm);\n      })\n  }\n\n  updatePassword() {\n    const currentPassword = this.editPasswordForm.get(\"currentPassword\").value;\n\n    this.editPasswordForm.get(\"currentPassword\").setErrors(null);\n    this.validationMessage = {};\n\n    if (currentPassword !== this.data.user.password) {\n      this.editPasswordForm.get(\"currentPassword\").setErrors({ currentPassword: true });\n      this.validationMessage = { currentPassword: \"Password is not right, it is so not right\"}\n      return;\n    } \n\n    if (!this.editPasswordForm.valid) {\n      this.editPasswordForm.markAllAsTouched();\n      this.validationMessage = invalidInputs(this.editPasswordForm);\n      return;\n    }\n\n    const passwordToUpdate: {} = { \n        id: this.data.user.id,\n        currentPassword: this.editPasswordForm.get(\"currentPassword\").value,\n        password: this.editPasswordForm.get(\"passwords.password\").value,\n        confirmPass: this.editPasswordForm.get(\"passwords.confirmPass\").value\n    };\n      \n    this._userService.updateUserPassword(passwordToUpdate)\n      .subscribe((user) => {\n        this.dialogRef.close();\n        this.matSnackBar.open(\"Your password has been updated\", 'Close', { \n          duration: 2000\n         });\n      });\n  }\n\n  toggleFieldTextType(): void {\n    this.fieldTextType = !this.fieldTextType;\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n}\n","<div class=\"container\">\n  <form action=\"\" [formGroup]=\"editPasswordForm\">\n    <h2>Change your password</h2>\n      <div class=\"form-group\">\n          <div class=\"input-group\">\n              <input\n              [type]=\"fieldTextType ? 'text' : 'password'\"\n              name=\"currentPassword\"\n              id=\"currentPassword\"\n              class=\"form-control\"\n              formControlName=\"currentPassword\"\n              placeholder=\"Current Password\"\n              autocomplete=\"off\"\n              [ngClass]=\"{\n              'is-invalid': validationMessage && validationMessage.currentPassword\n              }\"\n              />\n              <div class=\"input-group-append\">\n                  <span class=\"input-group-text\">\n                    <a\n                      ><i\n                        (click)=\"toggleFieldTextType()\"\n                        class=\"fa\"\n                        [ngClass]=\"{\n                          'fa-eye-slash': !fieldTextType,\n                          'fa-eye': fieldTextType\n                        }\"\n                      ></i\n                    ></a>\n                  </span>\n              </div>\n              <span class=\"invalid-feedback\">\n                <span>\n                {{ validationMessage.currentPassword }}\n                </span>\n            </span>\n          </div>\n          \n          </div>\n          \n          <div formGroupName=\"passwords\">\n          <div class=\"form-group\">\n              <div class=\"input-group\">\n              <input\n              [type]=\"fieldTextType ? 'text' : 'password'\"\n              name=\"password\"\n              id=\"password\"\n              class=\"form-control\"\n              formControlName=\"password\"\n              placeholder=\"Password\"\n              autocomplete=\"off\"\n              [ngClass]=\"{\n                  'is-invalid': validationMessage && validationMessage.password\n              }\"\n              />\n                  <div class=\"input-group-append\">\n                      <span class=\"input-group-text\">\n                        <a\n                          ><i\n                            (click)=\"toggleFieldTextType()\"\n                            class=\"fa\"\n                            [ngClass]=\"{\n                              'fa-eye-slash': !fieldTextType,\n                              'fa-eye': fieldTextType\n                            }\"\n                          ></i\n                        ></a>\n                      </span>\n                  </div>\n                  <span class=\"invalid-feedback\">\n                    <span>\n                        {{ validationMessage.password }}\n                    </span>\n                  </span>\n              </div>\n          </div>\n      \n          <div class=\"form-group\">\n              <div class=\"input-group\">\n                  <input\n                  [type]=\"fieldTextType ? 'text' : 'password'\"\n                  name=\"confirmPass\"\n                  id=\"confirmPass\"\n                  class=\"form-control\"\n                  formControlName=\"confirmPass\"\n                  placeholder=\"Confirm Password\"\n                  autocomplete=\"off\"\n                  [ngClass]=\"{\n                      'is-invalid': validationMessage && validationMessage.confirmPass || validationMessage.passwords\n                  }\"\n                  />\n                  <div class=\"input-group-append\">\n                      <span class=\"input-group-text\">\n                        <a\n                          ><i\n                            (click)=\"toggleFieldTextType()\"\n                            class=\"fa\"\n                            [ngClass]=\"{\n                              'fa-eye-slash': !fieldTextType,\n                              'fa-eye': fieldTextType\n                            }\"\n                          ></i\n                        ></a>\n                      </span>\n                  </div>\n                  <span class=\"invalid-feedback\">\n                    <span>\n                        {{ validationMessage.confirmPass }}\n                    </span>\n                    <span>\n                      {{ validationMessage.passwords }}\n                  </span>\n                  </span>\n              </div>\n              \n          </div>\n      </div>\n  \n      <div class=\"action-container\">\n        <button\n        type=\"submit\"\n        name=\"submit\"\n        class=\"btn btn-outline-success btn-md btn-block\"\n        (click)=\"updatePassword()\"\n        >\n          Save changes\n        </button>\n        <a\n          class=\"btn btn-outline-danger btn-md btn-block\"\n          (click)=\"closeDialog()\"\n        >\n          Cancel\n        </a>\n      </div>\n      \n  </form>\n</div>    ","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { IAdvert } from '@app/_models/IAdvert';\r\nimport { IUser } from '@app/_models/IUser';\r\nimport { AuthenticationService, UserService } from '@app/_services';\r\nimport { AdvertService } from '@app/_services/advert.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { ContactSellerDialogComponent } from '../dialogs/contact-seller-dialog/contact-seller-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-advert-detail',\r\n  templateUrl: './advert-detail.component.html',\r\n  styleUrls: ['./advert-detail.component.scss']\r\n})\r\nexport class AdvertDetailComponent implements OnInit, OnDestroy {\r\n\r\n  headlineImage;\r\n  headlineImgIndex = 0;\r\n\r\n  sub: Subscription = new Subscription();\r\n  id: number;\r\n  advert: IAdvert;\r\n  authUser: IUser;\r\n  isFavourite: boolean;\r\n  imagesLoaded: boolean;\r\n  isLoading: boolean = true;\r\n\r\n  constructor(private _route: ActivatedRoute,\r\n              private _advertService: AdvertService,\r\n              private matSnackBar: MatSnackBar,\r\n              private authService: AuthenticationService,\r\n              private userService: UserService,\r\n              private matDialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    this.sub.add(\r\n      this._route.paramMap.subscribe((params) => {\r\n        this.id = +params.get(\"id\");\r\n        this.getAdvert(this.id);\r\n      })\r\n    );\r\n}\r\n\r\n  cycleForward(): void {\r\n    this.headlineImgIndex++;\r\n    if (this.headlineImgIndex < this.advert.images.length) {\r\n      this.advert.headlineImage = this.advert.images[this.headlineImgIndex];\r\n    } else {\r\n      this.advert.headlineImage = this.advert.images[0];\r\n      this.headlineImgIndex = 0;\r\n    }\r\n  }\r\n\r\n  cycleBackward(): void {\r\n    this.headlineImgIndex--;\r\n    if (this.headlineImgIndex < this.advert.images.length && this.headlineImgIndex >= 0) {\r\n      this.advert.headlineImage = this.advert.images[this.headlineImgIndex];\r\n    } else {\r\n      this.advert.headlineImage = this.advert.images[this.advert.images.length - 1];\r\n      this.headlineImgIndex = this.advert.images.length - 1;\r\n    }\r\n  }\r\n\r\n  getClass(img): string {\r\n    if (this.advert.headlineImage == img) {\r\n      return;\r\n    } else {\r\n      return 'overlay';\r\n    }\r\n  }\r\n\r\n  selectImage(img): void {\r\n    const newIndex = this.advert.images.findIndex(image => image === img );\r\n    this.headlineImgIndex = newIndex;\r\n    this.advert.headlineImage = img;\r\n  }\r\n\r\n  getAdvert(id: number): void {\r\n    this._advertService  \r\n    .getAdvert(id)\r\n    .pipe(\r\n      tap(advert => {\r\n        const headlineImgIndex = advert.images.findIndex(image => image == advert.headlineImage);\r\n        advert.images.splice(headlineImgIndex, 1);\r\n        advert.images.unshift(advert.headlineImage);\r\n      })\r\n    )\r\n    .subscribe((advert => {\r\n        this.advert = advert;\r\n        this.determineFavourite();\r\n        this.imagesLoaded = true;\r\n      }))\r\n  }\r\n\r\n  determineFavourite(): void {\r\n    const authUserId = this.authService.currentUserValue?.id;\r\n\r\n    if (!authUserId) {\r\n      this.isLoading = false;\r\n      return;\r\n    } \r\n\r\n    this.userService.getUser(authUserId)\r\n      .subscribe(user => {\r\n        this.authUser = user;\r\n        if (this.authUser.favourites.includes(this.advert.id)) this.isFavourite = true;\r\n        this.isLoading = false;\r\n      });\r\n  }\r\n\r\n  \r\n  openContactDialog() {\r\n    this.matDialog.open(ContactSellerDialogComponent);\r\n  }\r\n\r\n  toggleFavourite(): void {\r\n    const authUserId = this.authService.currentUserValue.id;\r\n\r\n    this.userService.getUser(authUserId).subscribe(user => {\r\n\r\n      if (!this.isFavourite) {\r\n        user.favourites.push(this.advert.id);\r\n        this.isFavourite = true;\r\n      } else {\r\n        const newFavourites = user.favourites.filter(element => element !== this.advert.id);\r\n        this.isFavourite = false;\r\n        user.favourites = newFavourites;\r\n      }\r\n\r\n      this.userService.updateUser(user).subscribe();\r\n      this.matSnackBar.open(`${this.isFavourite ? \"Added to\" : \"Removed from\"} your favourites`, \"Close\", {\r\n        duration: 2000\r\n      })\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.sub) this.sub.unsubscribe();\r\n  }\r\n}","<div class=\"container grid-container mt-4\" *ngIf=\"advert\">\r\n\r\n  <div *ngIf=\"imagesLoaded\">\r\n    <div class=\"img-container\">\r\n      <a><i class=\"fas fa-chevron-left mr-5\" (click)=\"cycleBackward()\"></i></a>\r\n      <img [src]='advert.headlineImage' alt=\"\" />\r\n      <a><i class=\"fas fa-chevron-right ml-5\" (click)=\"cycleForward()\"></i></a>\r\n    </div>\r\n  \r\n    <div class=\"img-preview-container\">\r\n      <div *ngFor=\"let img of advert.images\" class=\"img-preview\" (click)=\"selectImage(img)\"><div [ngClass]=\"getClass(img)\"></div><img [src]=\"img\"/></div>\r\n    </div>\r\n  </div>\r\n  \r\n\r\n  <div *ngIf=\"!isLoading\" class=\"content-container\">\r\n    <div class=\"detail-container\">\r\n      <div class=\"top-part\">\r\n        <div>\r\n          <h2>{{ advert.title }}</h2>\r\n          <h1>{{ advert.price | currency: \"ZAR\":\"symbol-narrow\" }}</h1>\r\n          <p class=\"\">{{ advert.province }}, {{ advert.city }}</p>\r\n  \r\n          <div class=\"icons\">\r\n            <div class=\"icon-container\">\r\n              <i class=\"fa fa-solid fa-bed\"></i>\r\n              <span>{{ advert.bedrooms }}</span>\r\n            </div>\r\n            <div class=\"icon-container\">\r\n              <i class=\"fa fa-solid fa-toilet\"></i>\r\n              <span>{{ advert.bathrooms }}</span>\r\n            </div>\r\n            <div class=\"icon-container\">\r\n              <i class=\"fa fa-solid fa-car\"></i>\r\n              <span>{{ advert.parkingSpaces }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button *ngIf=\"authUser\" class=\"btn btn-outline-info btn-sm\" (click)=\"toggleFavourite()\">{{ isFavourite ? \"Remove from favourites\" : \"Add to favourites\" }}\r\n          <mat-icon>{{ isFavourite ? \"favorite\" : \"favorite_border\"}}</mat-icon>\r\n        </button>\r\n        <button class=\"btn btn-outline-info btn-sm contact-btn\" (click)=\"openContactDialog()\">Contact seller</button>\r\n      </div>\r\n      \r\n      <mat-divider></mat-divider>\r\n\r\n      <div class=\"advert-details\">\r\n          <p style=\"white-space: pre-line\" [innerHtml]=\"advert.details\"></p>\r\n      </div>\r\n    </div>\r\n\r\n    <app-contact-form></app-contact-form>\r\n\r\n  </div>\r\n</div>","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { MyAdvertsComponent } from \"./myadverts\";\r\nimport { EditAdvertComponent } from \"./edit-advert/edit-advert.component\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { AllAdvertsComponent } from \"./all-adverts/all-adverts.component\";\r\nimport { AdvertDetailComponent } from \"./advert-detail/advert-detail.component\";\r\nimport { SharedModule } from \"@app/shared/shared.module\";\r\nimport { FavouriteAdvertsComponent } from './favourite-adverts/favourite-adverts.component';\r\nimport { DeleteDialogComponent } from './dialogs/delete-dialog/delete-dialog.component';\r\nimport { UnsavedChangesDialogComponent } from './dialogs/unsaved-changes-dialog/unsaved-changes-dialog.component';\nimport { SearchDialogComponent } from './dialogs/search-dialog/search-dialog.component';\nimport { ContactSellerDialogComponent } from './dialogs/contact-seller-dialog/contact-seller-dialog.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MyAdvertsComponent,\r\n    EditAdvertComponent,\r\n    AllAdvertsComponent,\r\n    AdvertDetailComponent,\r\n    FavouriteAdvertsComponent,\r\n    DeleteDialogComponent,\r\n    UnsavedChangesDialogComponent,\r\n    SearchDialogComponent,\r\n    ContactSellerDialogComponent\r\n  ],\r\n  imports: [\r\n    CommonModule, \r\n    RouterModule, \r\n    ReactiveFormsModule, \r\n    FormsModule,\r\n    SharedModule\r\n  ],\r\n})\r\nexport class AdvertsModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { SearchComponent } from '@app/shared/search/search.component';\r\nimport { IAdvert } from '@app/_models/IAdvert';\r\nimport { AdvertService } from '@app/_services/advert.service';\r\nimport { SearchDialogComponent } from '../dialogs/search-dialog/search-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './all-adverts.component.html',\r\n  styleUrls: ['./all-adverts.component.scss']\r\n})\r\nexport class AllAdvertsComponent implements OnInit {\r\n\r\n  adverts: IAdvert[] = [];\r\n  isAscending: boolean;\r\n  orderBy: string = 'None';\r\n  preFilledTerms: any;\r\n  advertsToSend: IAdvert[] = [];\r\n  loading: boolean = true;\r\n\r\n  constructor(private _advertService: AdvertService,\r\n              private route: ActivatedRoute,\r\n              private matDialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n  \r\n    this.route.queryParamMap\r\n      .subscribe((params) => {\r\n        this.preFilledTerms = params;\r\n\r\n        const hasParams = Object.keys(this.preFilledTerms.params).length > 0;\r\n        const advertSubscription = hasParams ? this._advertService.getSearchedAdverts() : this._advertService.getAllAdverts();\r\n\r\n        advertSubscription.subscribe(adverts => {\r\n          if (hasParams) {\r\n            this.adverts = this.filterAdverts(adverts, this.preFilledTerms.params);\r\n            this.loading = false;\r\n          } else {\r\n            this.adverts = adverts;\r\n            this.loading = false;\r\n          }\r\n        })\r\n      })\r\n\r\n  }\r\n\r\n  orderChoice(choice: string): void {\r\n    if (choice === 'Ascending') {\r\n      this.isAscending = true;\r\n      this.orderBy = 'Price | Low-to-High'\r\n      this.adverts.sort(this.compare('asc'));\r\n    }\r\n \r\n    if (choice === 'Descending') {\r\n      this.isAscending = false;\r\n      this.orderBy = 'Price | High-to-Low'\r\n      this.adverts.sort(this.compare('desc'));\r\n    }\r\n  }\r\n\r\n  compare(order: string): (a: IAdvert, b: IAdvert) => number {\r\n\r\n    return function innerSort(a: IAdvert, b: IAdvert): number {\r\n\r\n      const advertA: number = a.price;\r\n      const advertB: number = b.price;\r\n\r\n      let comparison: number = 0;\r\n      if (advertA > advertB) {\r\n        comparison = 1;\r\n      } else if (advertA < advertB) {\r\n        comparison = -1;\r\n      }\r\n      \r\n      return (order === 'desc') ? (comparison * -1) : comparison;\r\n    }\r\n  }\r\n\r\n  openSearchModal() {\r\n    this.matDialog.open(SearchDialogComponent);\r\n  }\r\n\r\n  filterAdverts(adverts, searchTerms): IAdvert[] {\r\n    /** @Note: If there was an API, this would be done there.  */\r\n\r\n    const hasKeyword = searchTerms.hasOwnProperty(\"keyword\");\r\n    const hasProvince = searchTerms.hasOwnProperty(\"province\");\r\n    const hasCity = searchTerms.hasOwnProperty(\"city\");\r\n    const hasMinPrice = searchTerms.hasOwnProperty(\"minPrice\");\r\n    const hasMaxPrice = searchTerms.hasOwnProperty(\"maxPrice\");\r\n    const { keyword } = searchTerms;\r\n\r\n    this.advertsToSend = [];\r\n\r\n    adverts.forEach(advert => {\r\n      \r\n      if (hasKeyword && ( !hasCity && !hasProvince && !hasMinPrice && !hasMaxPrice)) {\r\n       if (advert.details.includes(keyword)) this.advertsToSend.push(advert);\r\n      } else if (hasKeyword && ( hasCity || hasProvince || hasMinPrice || hasMaxPrice) ) {\r\n        if (advert.details.includes(keyword)) {\r\n          this.filterSomeMore(advert, searchTerms);\r\n        } else {\r\n          return;\r\n        }\r\n      } else {\r\n        this.filterSomeMore(advert, searchTerms);\r\n      }\r\n    });\r\n\r\n    return this.advertsToSend;\r\n  }\r\n\r\n  filterSomeMore(advert, searchTerms) {\r\n\r\n    const hasProvince = searchTerms.hasOwnProperty(\"province\");\r\n    const hasCity = searchTerms.hasOwnProperty(\"city\");\r\n    const hasMinPrice = searchTerms.hasOwnProperty(\"minPrice\");\r\n    const hasMaxPrice = searchTerms.hasOwnProperty(\"maxPrice\");\r\n\r\n    if (hasProvince && hasCity && hasMinPrice && hasMaxPrice) {\r\n\r\n      const { province, city, minPrice, maxPrice, keyword } = searchTerms;   \r\n\r\n      if (advert.province == province &&\r\n          advert.city == city && \r\n          advert.price >= minPrice &&\r\n          advert.price <= maxPrice) \r\n          {\r\n            this.advertsToSend.push(advert);\r\n          }\r\n      return;\r\n    }\r\n\r\n    if (hasProvince && hasCity && hasMinPrice) {\r\n      const { province, city, minPrice, keyword } = searchTerms;   \r\n\r\n      if (advert.province == province &&\r\n          advert.city == city && \r\n          advert.price >= minPrice) \r\n          {\r\n            this.advertsToSend.push(advert);\r\n          }\r\n      return;\r\n    }\r\n\r\n    if (hasProvince && hasCity) {\r\n      const { province, city, keyword } = searchTerms;   \r\n\r\n      if (advert.province == province &&\r\n          advert.city == city) \r\n          {\r\n            this.advertsToSend.push(advert);\r\n          }\r\n      return;\r\n    }\r\n\r\n    if (hasProvince && hasMaxPrice && !hasCity && !hasMinPrice) {\r\n      const { province, maxPrice } = searchTerms;   \r\n\r\n      if (advert.province == province &&\r\n          advert.price <= maxPrice) \r\n          {\r\n            this.advertsToSend.push(advert);\r\n          }\r\n      return;\r\n    }\r\n\r\n    if (hasProvince && hasMinPrice) {\r\n      const { province, minPrice, keyword } = searchTerms;   \r\n\r\n      if (advert.province == province &&\r\n          advert.price >= minPrice) \r\n          {\r\n            this.advertsToSend.push(advert);\r\n          }\r\n      return;\r\n    }\r\n\r\n    if (hasCity && hasMinPrice) {\r\n      const { city, minPrice, keyword } = searchTerms;   \r\n\r\n      if (advert.city == city &&\r\n          advert.price >= minPrice) \r\n          {\r\n            this.advertsToSend.push(advert);\r\n          }\r\n      return;\r\n    }\r\n\r\n    if (hasCity && hasMaxPrice) {\r\n      const { city, maxPrice, keyword } = searchTerms;   \r\n\r\n      if (advert.city == city &&\r\n          advert.price <= maxPrice) \r\n          {\r\n            this.advertsToSend.push(advert);\r\n          }\r\n      return;\r\n    }\r\n\r\n    if (hasCity && hasMaxPrice && hasMinPrice) {\r\n      const { city, maxPrice, minPrice, keyword } = searchTerms;   \r\n\r\n      if (advert.city == city &&\r\n          advert.price <= maxPrice &&\r\n          advert.price >= minPrice) \r\n          {\r\n            this.advertsToSend.push(advert);\r\n          }\r\n      return;\r\n    }\r\n\r\n    if (hasProvince && hasMaxPrice && hasMinPrice) {\r\n      const { province, maxPrice, minPrice, keyword } = searchTerms;   \r\n\r\n      if (advert.province == province &&\r\n          advert.price <= maxPrice &&\r\n          advert.price >= minPrice) \r\n          {\r\n            this.advertsToSend.push(advert);\r\n          }\r\n      return;\r\n    }\r\n\r\n    if (hasMaxPrice && hasMinPrice) {\r\n      const { maxPrice, minPrice, keyword } = searchTerms;   \r\n\r\n      if (advert.price <= maxPrice &&\r\n          advert.price >= minPrice) \r\n          {\r\n            this.advertsToSend.push(advert);\r\n          }\r\n      return;\r\n    }\r\n\r\n    if (hasProvince) {\r\n      const { province, keyword } = searchTerms;   \r\n\r\n      if (advert.province == province) \r\n          {\r\n            this.advertsToSend.push(advert);\r\n          }\r\n      return;\r\n    }\r\n\r\n    if (hasCity) {\r\n      const { city, keyword } = searchTerms;   \r\n\r\n      if (advert.city == city) \r\n          {\r\n            this.advertsToSend.push(advert);\r\n          }\r\n      return;\r\n    }\r\n\r\n    if (hasMaxPrice) {\r\n      const { maxPrice, keyword } = searchTerms;   \r\n\r\n      if (advert.price <= maxPrice) \r\n          {\r\n            this.advertsToSend.push(advert);\r\n          }\r\n      return;\r\n    }\r\n\r\n    if (hasMinPrice) {\r\n      const { minPrice, keyword } = searchTerms;   \r\n\r\n      if (advert.price >= minPrice) \r\n          {\r\n            this.advertsToSend.push(advert);\r\n          }\r\n      return;\r\n    }\r\n  }\r\n\r\n}","<div class=\"container\">\r\n  <div class=\"mt-4\">\r\n    <h1>All Adverts</h1>\r\n    \r\n    <app-search class=\"search-bar\"></app-search>\r\n\r\n    <div class=\"d-flex flex-column align-items-end\">\r\n      <div class=\"btn-group\">\r\n        <button class=\"btn btn-info search-button\" (click)=\"openSearchModal()\">Search</button>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-info dropdown-toggle sort-button\"\r\n          data-toggle=\"dropdown\"\r\n          aria-haspopup=\"true\"\r\n          aria-expanded=\"false\"\r\n        >\r\n          Order-by : {{ orderBy }}\r\n        </button>\r\n        <div class=\"dropdown-menu\">\r\n          <a\r\n            class=\"dropdown-item\"\r\n            (click)=\"orderChoice('Descending')\"\r\n            [ngClass]=\"{ active: isAscending === false }\"\r\n            >Price: High-to-Low</a\r\n          >\r\n          <a\r\n            class=\"dropdown-item\"\r\n            (click)=\"orderChoice('Ascending')\"\r\n            [ngClass]=\"{ active: isAscending === true }\"\r\n            >Price: Low-to-High</a\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    \r\n    <div class=\"no-adverts\" *ngIf=\"adverts.length == 0\">\r\n      <h2 *ngIf=\"loading\">Finding adverts...</h2>\r\n      <h2 *ngIf=\"!loading\">There aren't any adverts that meet your search criteria.</h2>\r\n    </div>\r\n\r\n    <div class=\"mb-3\" *ngIf=\"adverts && adverts.length > 0\">\r\n      <app-advert-card-large *ngFor=\"let advert of adverts\" [advert]=\"advert\"></app-advert-card-large>\r\n    </div>\r\n    \r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-contact-seller-dialog',\n  templateUrl: './contact-seller-dialog.component.html',\n  styleUrls: ['./contact-seller-dialog.component.scss']\n})\nexport class ContactSellerDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<ContactSellerDialogComponent>) { }\n\n  ngOnInit(): void {\n  }\n\n  closeDialog(event) {\n    if (event) this.dialogRef.close();\n  }\n\n}\n","<app-contact-form (closeDialogEvent)=\"closeDialog($event)\"></app-contact-form>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { AdvertService } from '@app/_services/advert.service';\n\n@Component({\n  selector: 'app-delete-dialog',\n  templateUrl: './delete-dialog.component.html',\n  styleUrls: ['./delete-dialog.component.scss']\n})\nexport class DeleteDialogComponent implements OnInit {\n\n  constructor(private advertService: AdvertService,\n              private router: Router,\n              public dialogRef: MatDialogRef<DeleteDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public advert: any) { }\n\n  ngOnInit(): void {\n  }\n\n  deleteAdvert(): void {\n    this.advertService\n    .deleteAdvert(this.advert.id)\n    .subscribe(() => {\n      this.router\n        .navigateByUrl(\"/RefreshComponent\", { skipLocationChange: true })\n        .then(() => {\n          this.router.navigate([\"/myadverts\"]);\n        });\n\n        this.dialogRef.close();\n    });\n  }\n\n}\n\n\n","<div class=\"container\">\n    <div class=\"titles\">\n        <h2>Are you sure you want to delete this advert?</h2>\n        <p>(This is permanent and not even Odin can bring it back!)</p>\n    </div>\n    \n    <div class=\"actions\">\n        <button class=\"btn btn-success btn-sm\" (click)=\"deleteAdvert()\">Yes, delete!</button>\n        <button class=\"btn btn-danger btn-sm\" mat-dialog-close >Actually, no!</button>\n    </div>\n</div>","import { Component, OnInit, Output } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-search-dialog',\n  templateUrl: './search-dialog.component.html',\n  styleUrls: ['./search-dialog.component.scss']\n})\nexport class SearchDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<SearchDialogComponent>) { }\n\n  ngOnInit(): void {\n  }\n\n  closeDialog(event) {\n    if (event) this.dialogRef.close();\n  }\n\n}\n","<app-search (closeDialogEvent)=\"closeDialog($event)\"></app-search>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-unsaved-changes-dialog',\n  templateUrl: './unsaved-changes-dialog.component.html',\n  styleUrls: ['./unsaved-changes-dialog.component.scss']\n})\nexport class UnsavedChangesDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<UnsavedChangesDialogComponent>) { }\n\n  ngOnInit(): void {\n    \n  }\n\n  choose(choice: boolean) {\n    this.dialogRef.close(choice);\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"headings\">\n        <h2>Are you sure you want to exit, you're going to lose your changes!</h2>\n        <p>(Think of how much effort you put into this, don't throw it away now!)</p>\n    </div>\n    \n    <div class=\"actions\">\n        <button class=\"btn btn-primary btn-sm\" mat-dialog-close (click)=\"choose(true)\">Yeah, I'm over it!</button>\n        <button class=\"btn btn-danger btn-sm\" mat-dialog-close (click)=\"choose(false)\">Actually no, I'll keep it!</button>\n    </div>\n</div>","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { IAdvert } from \"@app/_models/IAdvert\";\r\nimport { Subject, Subscription } from \"rxjs\";\r\nimport { Advert } from \"@app/_models/advert\";\r\nimport { debounceTime } from \"rxjs/operators\";\r\nimport { AdvertService } from \"@app/_services/advert.service\";\r\nimport { LocationService } from \"@app/_services/location.service\";\r\nimport { CustomValidators } from '@app/_helpers/customValidators';\r\nimport { AuthenticationService } from \"@app/_services\";\r\nimport { invalidInputs } from \"@app/shared/utils\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { UnsavedChangesDialogComponent } from \"../dialogs/unsaved-changes-dialog/unsaved-changes-dialog.component\";\r\n\r\n@Component({\r\n  selector: \"app-edit-advert\",\r\n  templateUrl: \"./edit-advert.component.html\",\r\n  styleUrls: [\"./edit-advert.component.scss\"],\r\n})\r\nexport class EditAdvertComponent implements OnInit, OnDestroy {\r\n  locations = ['Gauteng', 'North West', 'Northern Cape', 'Western Cape', 'Eastern Cape', 'Limpopo', 'Free State', 'Mpumalanga', 'KwaZulu-Natal'];\r\n  editAdvertForm: FormGroup;\r\n  sub: Subscription = new Subscription();\r\n  province: string;\r\n  cities: String[] = [];\r\n  id: number;\r\n  advert: IAdvert;\r\n  isConfirm: boolean = false;\r\n  validationMessage: {\r\n    [key: string]: string;\r\n  } = {};\r\n  alertMessage: string = \"\";\r\n  canExit$: Subject<boolean> = new Subject<boolean>(); \r\n\r\n  images = [\r\n    '../../../assets/image-1.jpg',\r\n    '../../../assets/image-2.jpg',\r\n    '../../../assets/image-3.jpg',\r\n    '../../../assets/image-4.jpg',\r\n    '../../../assets/image-5.jpg',\r\n    '../../../assets/image-6.jpg'\r\n  ];\r\n\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private _route: ActivatedRoute,\r\n    private _router: Router,\r\n    private _advertService: AdvertService,\r\n    private _locationService: LocationService,\r\n    private authenticationService: AuthenticationService,\r\n    private matDialog: MatDialog\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.editAdvertForm = this._formBuilder.group({\r\n      title: [\r\n        this.advert?.title,\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(10),\r\n          Validators.maxLength(100),\r\n          CustomValidators.multipleSpaceValidator\r\n        ],\r\n      ],\r\n      province: [this.advert?.province, [Validators.required]],\r\n      city: [this.advert?.city, [Validators.required]],\r\n      details: [\r\n        this.advert?.details,\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(10),\r\n          Validators.maxLength(1000),\r\n          CustomValidators.multipleSpaceValidator\r\n        ],\r\n      ],\r\n      price: [\r\n        this.advert?.price,\r\n        [Validators.required, Validators.min(10000), Validators.max(100000000), CustomValidators.noSpaceValidator, CustomValidators.onlyNumbers],\r\n      ],\r\n      bedrooms: [\r\n        this.advert?.bedrooms,\r\n        [Validators.required, Validators.min(0)]\r\n      ],\r\n      bathrooms: [\r\n        this.advert?.bathrooms,\r\n        [Validators.required, Validators.min(0)]\r\n      ],\r\n      parkingSpaces: [\r\n        this.advert?.parkingSpaces,\r\n        [Validators.required, Validators.min(0)]\r\n      ]\r\n    });\r\n\r\n    this.sub.add(\r\n      this.editAdvertForm.get(\"province\").valueChanges.subscribe((value) => {\r\n        this.province = value;\r\n        this.getCities();\r\n      })\r\n    );\r\n\r\n    // Get the advert ID from the route parameter\r\n    this.sub.add(\r\n      this._route.paramMap.subscribe((params) => {\r\n        this.id = +params.get('id');\r\n        this.getAdvert(this.id);\r\n      })\r\n    );\r\n\r\n    this.sub.add(\r\n      this.editAdvertForm.valueChanges\r\n        .pipe(debounceTime(600))\r\n        .subscribe(\r\n          (value) =>\r\n            (this.validationMessage = invalidInputs(this.editAdvertForm))\r\n        )\r\n    );\r\n  }\r\n\r\n  unsavedChanges(){\r\n   const dialogRef = this.matDialog.open(UnsavedChangesDialogComponent, {});\r\n\r\n   dialogRef.afterClosed()\r\n    .subscribe(choice => {\r\n      this.canExit$.next(choice);\r\n   })\r\n  }\r\n\r\n  getCities(): void {\r\n    this.cities = [];\r\n    this._locationService.list().subscribe(cities => {\r\n      /** @Note: Can replace this at some stage with a query param sent to the API */\r\n      cities.forEach(city => {\r\n        if (this.province === city.province) {\r\n          this.cities?.push(city.name);\r\n        }\r\n      })\r\n    });\r\n  }\r\n\r\n  getAdvert(id: number): void {\r\n    this._advertService\r\n    .getAdvert(id).subscribe((advert) => {\r\n      this.advert = advert;\r\n      this.displayAdvert();\r\n    });\r\n  }\r\n\r\n  displayAdvert(): void {\r\n\r\n    this.editAdvertForm.patchValue({\r\n      title: this.advert.title,\r\n      province: this.advert.province,\r\n      city: this.advert.city,\r\n      details: this.advert.details,\r\n      price: this.advert.price,\r\n      bedrooms: this.advert.bedrooms,\r\n      bathrooms: this.advert.bathrooms,\r\n      parkingSpaces: this.advert.parkingSpaces\r\n    });\r\n  }\r\n\r\n  createAdvert(): void {\r\n    /** @TODO: Hack for now - need to move this userId to the API at some stage */\r\n    const currentUser = this.authenticationService.currentUserValue;\r\n    const advertDetails = this.addBreaksToAdvertDetails(this.editAdvertForm.get(\"details\").value.trim());\r\n\r\n    const advert = new Advert(\r\n      this.editAdvertForm.get(\"title\").value.trim(),\r\n      this.editAdvertForm.get(\"province\").value.trim(),\r\n      this.editAdvertForm.get(\"city\").value.trim(),\r\n      this.editAdvertForm.get(\"price\").value.trim(),\r\n      advertDetails,\r\n      this.editAdvertForm.get(\"bedrooms\").value,\r\n      this.editAdvertForm.get(\"bathrooms\").value,\r\n      this.editAdvertForm.get(\"parkingSpaces\").value,\r\n      this.images,    \r\n      this.randomHeadlineImage(),\r\n      'Live',\r\n      currentUser.id,\r\n    );\r\n\r\n    this._advertService\r\n    .createAdvert(advert).subscribe({\r\n      next: () => this.afterSave(),\r\n    });\r\n  }\r\n\r\n  randomHeadlineImage(): string {\r\n    const randomNum = Math.floor(Math.random() * 5);\r\n    return this.images[randomNum];\r\n  }\r\n\r\n  updateAdvert(): void {\r\n    const updatedAdvert = {\r\n      ...this.advert,\r\n      ...this.editAdvertForm.value,\r\n    };\r\n\r\n    this._advertService\r\n    .updateAdvert(updatedAdvert).subscribe({\r\n      next: () => this.afterSave(),\r\n    });\r\n  }\r\n\r\n  onSave(): void {\r\n    if (this.editAdvertForm.valid) {\r\n      if (this.id == 0) {\r\n        this.createAdvert();\r\n        return;\r\n      }\r\n\r\n      if (this.id > 0) {\r\n        this.updateAdvert();\r\n        return;\r\n      }\r\n    } else {\r\n      this.alertMessage = \"Please ensure the form is valid.\";\r\n      this.editAdvertForm.markAllAsTouched();\r\n      this.validationMessage = invalidInputs(this.editAdvertForm);\r\n      setTimeout(() => {\r\n        this.alertMessage = \"\";\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  afterSave(): void {\r\n    this.editAdvertForm.markAsPristine();\r\n    this.editAdvertForm.markAsUntouched();\r\n    this._router.navigate([\"/myadverts\"]);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.sub) this.sub.unsubscribe();\r\n  }\r\n\r\n  addBreaksToAdvertDetails(advertDetails: string): string {\r\n    const arr = advertDetails.split(/[\\s][\\s]/);\r\n\r\n    for (let i = 1; i < arr.length; i+=2) {\r\n      arr.splice(i, 0, '<br><br>')\r\n    }\r\n\r\n    const str = arr.join(' ');\r\n\r\n    return str;\r\n  }\r\n}","<div class=\"container\">\r\n \r\n  <div id=\"login-row\" class=\"row justify-content-center align-items-center\">\r\n    <div id=\"login-column\" class=\"col-md-6\">\r\n      <div id=\"login-box\" class=\"col-md-12\">\r\n        <form\r\n          id=\"login-form\"\r\n          class=\"form\"\r\n          novalidate\r\n          [formGroup]=\"editAdvertForm\"\r\n        >\r\n  \r\n          <h1 class=\"text-center my-4 h3\">{{ id > 0 ? 'Edit Advert' : 'Create New Advert' }}</h1>\r\n          <div class=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              id=\"title\"\r\n              class=\"form-control\"\r\n              formControlName=\"title\"\r\n              placeholder=\"Title\"\r\n              autocomplete=\"off\"\r\n              [ngClass]=\"{\r\n                'is-invalid': validationMessage && validationMessage.title\r\n              }\"\r\n            />\r\n            <span class=\"invalid-feedback\">\r\n              <span>\r\n                {{ validationMessage.title }}\r\n              </span>\r\n            </span>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <select\r\n              class=\"custom-select\"\r\n              formControlName=\"province\"\r\n              [ngClass]=\"{\r\n                'is-invalid': validationMessage && validationMessage.province\r\n              }\"\r\n            >\r\n              <option value=\"\" disabled>Choose your province</option>\r\n              <option *ngFor=\"let location of locations\"> {{ location }}</option>\r\n            </select>\r\n            <span class=\"invalid-feedback\">\r\n              {{ validationMessage.province }}\r\n            </span>\r\n          </div>\r\n\r\n    \r\n          <div class=\"form-group\">\r\n            <select\r\n              class=\"custom-select\"\r\n              formControlName=\"city\"\r\n              [ngClass]=\"{\r\n                'is-invalid': validationMessage && validationMessage.city\r\n              }\"\r\n              *ngIf=\"cities.length > 0\"\r\n            >\r\n              <option value=\"\" disabled>Choose your city</option>\r\n              <option *ngFor=\"let city of cities\"> {{ city }}</option>\r\n            </select>\r\n            <span class=\"invalid-feedback\">\r\n              <span> {{ validationMessage.city }} </span>\r\n            </span>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <textarea\r\n              class=\"form-control\"\r\n              id=\"exampleFormControlTextarea1\"\r\n              placeholder=\"Advert Details\"\r\n              rows=\"3\"\r\n              formControlName=\"details\"\r\n              [ngClass]=\"{\r\n                'is-invalid':\r\n                  validationMessage && validationMessage.details\r\n              }\"\r\n            ></textarea>\r\n            <span class=\"invalid-feedback\">\r\n              <span> {{ validationMessage.details }} </span>\r\n            </span>\r\n          </div>\r\n\r\n          <div class=\"form-group-container\">\r\n            <div class=\"form-group\">\r\n              <input type=\"number\" \r\n                     name=\"bedrooms\"    \r\n                     formControlName=\"bedrooms\" \r\n                     class=\"form-control\" \r\n                     autocomplete=\"off\" \r\n                     id=\"bedrooms\" \r\n                     placeholder=\"Bedrooms\"\r\n                     min=\"0\"\r\n                     [ngClass]=\"{\r\n                      'is-invalid': validationMessage && validationMessage.bedrooms\r\n                    }\" />\r\n              <span class=\"invalid-feedback\">\r\n                <span>{{ validationMessage.bedrooms }}</span>\r\n              </span>\r\n            </div>\r\n          \r\n            <div class=\"form-group\">\r\n              <input type=\"number\" \r\n                     name=\"bathrooms\" \r\n                     formControlName=\"bathrooms\" \r\n                     class=\"form-control\" \r\n                     autocomplete=\"off\" \r\n                     id=\"bathrooms\" \r\n                     min=\"0\"\r\n                     placeholder=\"Bathrooms\"\r\n                     [ngClass]=\"{\r\n                      'is-invalid': validationMessage && validationMessage.bathrooms\r\n                    }\"/>\r\n              <span class=\"invalid-feedback\">\r\n                <span>{{ validationMessage.bathrooms }}</span>\r\n              </span>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <input type=\"number\" \r\n                     name=\"parkingSpaces\" \r\n                     formControlName=\"parkingSpaces\" \r\n                     class=\"form-control\" \r\n                     autocomplete=\"off\" \r\n                     id=\"parkingSpaces\" \r\n                     min=\"0\"\r\n                     placeholder=\"Parkings\"\r\n                     [ngClass]=\"{\r\n                      'is-invalid': validationMessage && validationMessage.parkingSpaces\r\n                    }\"/>\r\n              <span class=\"invalid-feedback\">\r\n                <span>{{ validationMessage.parkingSpaces }}</span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"price\"\r\n              id=\"price\"\r\n              formControlName=\"price\"\r\n              class=\"form-control\"\r\n              placeholder=\"Price\"\r\n              autocomplete=\"off\"\r\n              [ngClass]=\"{\r\n                'is-invalid': validationMessage && validationMessage.price\r\n              }\"\r\n            />\r\n            <span class=\"invalid-feedback\">\r\n              <span>{{ validationMessage.price }}</span>\r\n            </span>\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            name=\"submit\"\r\n            class=\"btn btn-outline-success btn-lg btn-block\"\r\n            (click)=\"onSave()\"\r\n          >\r\n            Publish {{ id > 0 ? 'Changes' : 'Advert' }}\r\n          </button>\r\n          <a\r\n            class=\"btn btn-outline-danger btn-lg btn-block\"\r\n            routerLink=\"/myadverts\"\r\n          >\r\n            Cancel\r\n          </a>\r\n\r\n          <div\r\n            class=\"alert alert-warning text-center mt-3\"\r\n            *ngIf=\"alertMessage && alertMessage.length > 0\"\r\n          >\r\n            <div>{{ alertMessage }}</div>\r\n            <div class=\"mt-2\">\r\n            </div>\r\n          </div>\r\n\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { IAdvert } from '@app/_models/IAdvert';\nimport { AuthenticationService, UserService } from '@app/_services';\nimport { AdvertService } from '@app/_services/advert.service';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-favourite-adverts',\n  templateUrl: './favourite-adverts.component.html',\n  styleUrls: ['./favourite-adverts.component.scss']\n})\nexport class FavouriteAdvertsComponent implements OnInit {\n\n  adverts: IAdvert[] = [];\n  isLoading = true;\n\n  constructor(private authService: AuthenticationService,\n              private advertService: AdvertService,\n              private userService: UserService) { }\n\n  ngOnInit(): void {\n\n    const authUserId = this.authService.currentUserValue.id;\n\n    this.userService.getUser(authUserId)\n      .subscribe(user => {\n\n        this.advertService.getAllAdverts()\n          .pipe(\n            map(adverts => {\n              const filtered = adverts.filter(ad => {\n                if (user.favourites.includes(ad.id)) {\n                  return ad;\n                }\n              })\n\n              return filtered;\n            })\n          )\n          .subscribe(ads => {\n            this.adverts = ads;\n            this.isLoading = false;\n          });\n      })\n  }\n\n  removeUnfavouritedAd(id) {\n    const adToRemove = this.adverts.findIndex(advert => advert.id === id);\n    this.adverts.splice(adToRemove, 1);\n  }\n\n}\n","<div  *ngIf=\"adverts\" class=\"container\">\n    <h1>Your favourite adverts</h1>\n\n    <div class=\"no-adverts\" *ngIf=\"adverts.length == 0\">\n      <h2 *ngIf=\"isLoading\">Finding your favourtites...</h2> \n      <h2 *ngIf=\"!isLoading\">You currently have no favourites.</h2>\n      <button *ngIf=\"!isLoading\" class=\"btn btn-info\" [routerLink]=\"['/alladverts']\">Browse adverts</button>\n    </div>\n\n    <div class=\"adverts-container\">\n        <div class=\"mb-3\" *ngIf=\"adverts && adverts.length > 0\">\n            <div *ngFor=\"let advert of adverts\">\n              <app-advert-card-large [advert]=\"advert\" (advertIdEvent)=\"removeUnfavouritedAd($event)\"></app-advert-card-large>\n            </div>\n          </div>\n    </div>\n</div>\n","export * from './myadverts.component';","import { Component, OnInit } from \"@angular/core\";\r\n\r\nimport { AuthenticationService } from \"@app/_services\";\r\n\r\nimport { IAdvert } from \"@app/_models/IAdvert\";\r\nimport { AdvertService } from \"@app/_services/advert.service\";\r\nimport { IUser } from \"@app/_models/IUser\";\r\n\r\n@Component({\r\n  templateUrl: \"myadverts.component.html\",\r\n  styleUrls: [\"./myadverts.component.scss\"],\r\n})\r\nexport class MyAdvertsComponent implements OnInit {\r\n  loading: boolean = false;\r\n  adverts: IAdvert[] = [];\r\n  currentUser: IUser;\r\n\r\n  constructor(private _advertService: AdvertService,\r\n              private _authService: AuthenticationService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.loading = true;\r\n    this.currentUser = this._authService.currentUserValue;\r\n    this._advertService.getUserAdverts(this.currentUser.id)\r\n    .subscribe((adverts) => {\r\n      this.loading = false;\r\n      this.adverts = adverts\r\n    });\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"mt-4\">\r\n    <h1>My Adverts</h1>\r\n\r\n    <div class=\"no-adverts\" *ngIf=\"adverts.length == 0\">\r\n      <h2 *ngIf=\"loading\">Finding your adverts...</h2>\r\n      <h2 *ngIf=\"!loading\">You currently have no adverts listed.</h2>\r\n      <button *ngIf=\"adverts.length == 0\" class=\"btn btn-info\" [routerLink]=\"['/editadvert', 0]\">Create New Advert</button>\r\n    </div>\r\n    \r\n    <div class=\"mb-3\" *ngIf=\"adverts\">\r\n      <app-advert-card-large *ngFor=\"let advert of adverts\" [advert]=\"advert\"></app-advert-card-large>\r\n      <button *ngIf=\"adverts.length > 0\" class=\"btn btn-info\" [routerLink]=\"['/editadvert', 0]\">Create New Advert</button>\r\n    </div>\r\n    \r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { EditAdvertComponent } from './edit-advert/edit-advert.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UnsavedGuard implements CanActivate, CanDeactivate<unknown> {\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    return true;\r\n  }\r\n  canDeactivate(\r\n    component: EditAdvertComponent,\r\n    currentRoute: ActivatedRouteSnapshot,\r\n    currentState: RouterStateSnapshot,\r\n    nextState?: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n      if (component.editAdvertForm.dirty) {\r\n        component.unsavedChanges();\r\n        return component.canExit$;\r\n      }\r\n      return true;\r\n  }\r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MyAdvertsComponent } from './adverts/myadverts/myadverts.component';\r\nimport { LoginComponent } from './authentication/login/login.component';\r\nimport { NotAuthGuard } from './_helpers';\r\nimport { AllAdvertsComponent } from './adverts/all-adverts/all-adverts.component';\r\nimport { RegistrationComponent } from './authentication/registration/registration.component';\r\nimport { AuthGuard } from './authentication/auth.guard';\r\nimport { EditAdvertComponent } from './adverts/edit-advert/edit-advert.component';\r\nimport { UnsavedGuard } from './adverts/unsaved.guard';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AdvertDetailComponent } from './adverts/advert-detail/advert-detail.component';\r\nimport { MyAccountComponent } from './accounts/my-account/my-account.component';\r\nimport { FavouriteAdvertsComponent } from './adverts/favourite-adverts/favourite-adverts.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: HomeComponent },\r\n    { path: 'login', component: LoginComponent, canActivate: [AuthGuard] },\r\n    { path: 'home',  component: HomeComponent },\r\n    { path: 'registration', component: RegistrationComponent, canActivate: [AuthGuard] },\r\n    { path: 'myadverts', component: MyAdvertsComponent, canActivate: [NotAuthGuard] },\r\n    { path: 'editadvert/:id', component: EditAdvertComponent, canActivate: [NotAuthGuard], canDeactivate: [UnsavedGuard] },\r\n    { path: 'alladverts', component: AllAdvertsComponent },\r\n    { path: 'advertdetail/:id', component: AdvertDetailComponent },\r\n    { path: 'myaccount', component: MyAccountComponent, canActivate: [ NotAuthGuard ] },\r\n    { path: 'favourites', component: FavouriteAdvertsComponent, canActivate: [ NotAuthGuard ] },\r\n\r\n    // otherwise redirect to home\r\n    { path: '**', redirectTo: '' }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n\r\n\r\n","import { AfterContentChecked, Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({ selector: 'app', templateUrl: 'app.component.html' })\r\nexport class AppComponent implements AfterContentChecked {\r\n\r\n    class: string;\r\n\r\n    constructor(private router: Router) {}\r\n\r\n    ngAfterContentChecked(): void {\r\n        const url = this.router.url;\r\n\r\n        if (url === \"/\" || url === \"/home\") {\r\n            return;\r\n        } else {\r\n            this.class = \"mt-auto\"\r\n            return;\r\n        }\r\n    }\r\n}","<!-- nav -->\r\n<app-header></app-header>\r\n\r\n<!-- main app container -->\r\n<router-outlet></router-outlet>\r\n\r\n\r\n<!-- credits -->\r\n<app-footer [ngClass]=\"class\"></app-footer>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\n// used to create fake backend\r\nimport { fakeBackendProvider } from './_helpers';\r\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\r\nimport { MyInMemoryService } from './_mockServices/my-in-memory.service';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { JwtInterceptor, ErrorInterceptor } from './_helpers';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { AuthenticationModule } from './authentication/authentication.module';\r\nimport { AdvertsModule } from './adverts/adverts.module';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AccountsModule } from './accounts/accounts.module';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { NgMaterialModule } from './shared/ng-material/ng-material.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n@NgModule({\r\n    imports: [\r\n        AppRoutingModule,\r\n        BrowserModule,\r\n        ReactiveFormsModule,\r\n        AuthenticationModule,\r\n        AdvertsModule,\r\n        AccountsModule,\r\n        HttpClientModule,\r\n        HttpClientInMemoryWebApiModule.forRoot(MyInMemoryService),\r\n        SharedModule,\r\n        NgMaterialModule,\r\n        BrowserAnimationsModule\r\n    ],\r\n    declarations: [\r\n        AppComponent,\r\n        FooterComponent,\r\n        HeaderComponent,\r\n        HomeComponent\r\n    ],\r\n    providers: [\r\n        { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n        { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n\r\n        // // provider used to create fake backend\r\n        fakeBackendProvider\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { AuthenticationService } from \"@app/_services\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private _authService: AuthenticationService,\r\n              private _router: Router) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot) {\r\n    \r\n      const currentUser = this._authService.currentUserValue;\r\n      if (currentUser) {\r\n        this._router.navigate([\"/myadverts\"]);\r\n        return false;\r\n      }\r\n      return true;\r\n  }\r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AppRoutingModule } from '@app/app-routing.module';\r\nimport { LoginComponent } from './login';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent, RegistrationComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    AppRoutingModule\r\n  ]\r\n})\r\nexport class AuthenticationModule { }\r\n","export * from './login.component';","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { debounceTime, first } from \"rxjs/operators\";\r\nimport { AuthenticationService } from \"@app/_services\";\r\nimport { CustomValidators } from \"@app/_helpers/customValidators\";\r\nimport { invalidInputs } from \"@app/shared/utils\";\r\n\r\n@Component({\r\n  templateUrl: \"login.component.html\",\r\n  styleUrls: [\"./login.component.scss\"],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  error: string = \"\";\r\n  message: { [key: string]: string } = {};\r\n  fieldTextType: boolean = false;\r\n\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private _route: ActivatedRoute,\r\n    private _router: Router,\r\n    private _authenticationService: AuthenticationService\r\n  ) {\r\n    // redirect to home if already logged in\r\n    if (this._authenticationService.currentUserValue) {\r\n      this._router.navigate([\"/\"]);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this._formBuilder.group({\r\n      email: [\r\n        \"\",\r\n        [Validators.required,\r\n        Validators.email,\r\n        Validators.minLength(6),\r\n        Validators.maxLength(100),\r\n        CustomValidators.noSpaceValidator\r\n    ],\r\n      ],\r\n      password: [\"\", Validators.required],\r\n    });\r\n\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this._route.snapshot.queryParams[\"returnUrl\"] || \"/\";\r\n\r\n    this.loginForm.valueChanges\r\n      .pipe(debounceTime(600))\r\n      .subscribe(value => {\r\n        this.message = invalidInputs(this.loginForm)\r\n      }\r\n      );\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this._authenticationService\r\n      .login(this.f.email.value, this.f.password.value)\r\n      .pipe(first())\r\n      .subscribe(\r\n        (data) => {\r\n          this._router.navigate([\"myadverts\"]);\r\n        },\r\n        (error) => {\r\n          this.error = error;\r\n          setTimeout (() => {\r\n            this.error = '';\r\n         }, 1800);\r\n          this.loading = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  toggleFieldTextType(): void {\r\n    this.fieldTextType = !this.fieldTextType;\r\n  }\r\n}\r\n","<div class=\"col-md-6 offset-md-3 mt-5\">\r\n  <h4 class=\"text-center\">Login</h4>\r\n\r\n  <div>\r\n    <div class=\"card-body\">\r\n      \r\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"form-group\">\r\n          <input\r\n            type=\"email\"\r\n            formControlName=\"email\"\r\n            class=\"form-control\"\r\n            [ngClass]=\"{ 'is-invalid': message && message.email }\"\r\n            placeholder=\"Email\"\r\n          />\r\n          <div class=\"invalid-feedback\">\r\n            <div>{{ message.email }}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <div class=\"input-group\">\r\n            <input\r\n              [type]=\"fieldTextType ? 'text' : 'password'\"\r\n              formControlName=\"password\"\r\n              class=\"form-control\"\r\n              [ngClass]=\"{ 'is-invalid': message && message.password }\"\r\n              placeholder=\"Password\"\r\n            />\r\n            <div class=\"input-group-append\">\r\n              <span class=\"input-group-text\">\r\n                <a\r\n                  ><i\r\n                    (click)=\"toggleFieldTextType()\"\r\n                    class=\"fa\"\r\n                    [ngClass]=\"{\r\n                      'fa-eye-slash': !fieldTextType,\r\n                      'fa-eye': fieldTextType\r\n                    }\"\r\n                  ></i\r\n                ></a>\r\n              </span>\r\n            </div>\r\n            <div class=\"invalid-feedback\">\r\n              <div>{{ message.password }}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <button [disabled]=\"loading\" class=\"btn btn-secondary\">\r\n          <span\r\n            *ngIf=\"loading\"\r\n            class=\"spinner-border spinner-border-sm mr-1\"\r\n          ></span>\r\n          Login\r\n        </button>\r\n\r\n        <div *ngIf=\"error\" class=\"alert alert-danger mt-3\">\r\n          {{ error }}\r\n        </div>\r\n      </form>\r\n\r\n      <div class=\"mt-3\">\r\n        <a class=\"text-dark\" routerLink=\"/registration\">Register Instead</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  Router,\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n} from \"@angular/router\";\r\n\r\nimport { AuthenticationService } from \"@app/_services\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class NotAuthGuard implements CanActivate {\r\n  constructor(\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService\r\n  ) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    const currentUser = this.authenticationService.currentUserValue;\r\n    if (currentUser) {\r\n      // logged in so return true\r\n      return true;\r\n    }\r\n    \r\n    if (route.routeConfig.path === 'editadvert/:id' || route.routeConfig.path === 'editadvert') {\r\n      this.router.navigate([\"/registration\"]);\r\n      return false;\r\n    }\r\n\r\n    // not logged in so redirect to login page with the return url\r\n    this.router.navigate([\"/login\"]);\r\n    return false;\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { CustomValidators } from \"@app/_helpers/customValidators\";\r\nimport { User } from \"@app/_models/user\";\r\nimport { AuthenticationService, UserService } from \"@app/_services\";\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime } from \"rxjs/operators\";\r\nimport { invalidInputs } from \"@app/shared/utils\";\r\n\r\n@Component({\r\n  templateUrl: \"./registration.component.html\",\r\n  styleUrls: [\"./registration.component.scss\"],\r\n})\r\nexport class RegistrationComponent implements OnInit, OnDestroy {\r\n  registrationForm: FormGroup;\r\n  message: { [key: string]: string } = {};\r\n  invalidSubmit: boolean = false;\r\n  loading: boolean = false;\r\n  error: string = \"\";\r\n  passRequirements: boolean = false;\r\n  fieldTextType: boolean = false;\r\n  sub: Subscription;\r\n\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private _userService: UserService,\r\n    private _router: Router,\r\n    private _authenticationService: AuthenticationService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.registrationForm = this._formBuilder.group({\r\n      firstName: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(1),\r\n          Validators.maxLength(100),\r\n          CustomValidators.multipleSpaceValidator,\r\n          CustomValidators.noSpecialChars,\r\n          CustomValidators.noNumbers,\r\n        ],\r\n      ],\r\n      lastName: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(100),\r\n          CustomValidators.multipleSpaceValidator,\r\n          CustomValidators.noSpecialChars,\r\n          CustomValidators.noNumbers,\r\n        ],\r\n      ],\r\n      email: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.email,\r\n          Validators.minLength(6),\r\n          Validators.maxLength(100),\r\n          CustomValidators.noSpaceValidator,\r\n        ],\r\n      ],\r\n      contactNumber: [\r\n        \"\", \r\n        [\r\n          Validators.required,\r\n          CustomValidators.onlyNumbers,\r\n        ]\r\n      ],\r\n      passwords: this._formBuilder.group(\r\n        {\r\n          password: [\r\n            \"\",\r\n            [\r\n              Validators.required,\r\n              Validators.minLength(8),\r\n              Validators.maxLength(100),\r\n              CustomValidators.noSpaceValidator,\r\n              CustomValidators.passwordNumber,\r\n              CustomValidators.passwordUpperCase,\r\n            ],\r\n          ],\r\n          confirmPass: [\"\", Validators.required],\r\n        },\r\n        { validator: CustomValidators.passwordCompare }\r\n      ),\r\n    });\r\n\r\n    this.sub = this.registrationForm.valueChanges\r\n      .pipe(debounceTime(600))\r\n      .subscribe(\r\n        (value) => (this.message = invalidInputs(this.registrationForm))\r\n      );\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.loading = true;\r\n\r\n    if (!this.registrationForm.valid) {\r\n      this.invalidSubmit = true;\r\n      setTimeout (() => {\r\n        this.invalidSubmit = false;\r\n     }, 1800);\r\n      this.loading = false;\r\n      return;\r\n    }\r\n\r\n    const user = new User(\r\n      this.registrationForm.get(\"firstName\").value.trim(),\r\n      this.registrationForm.get(\"lastName\").value.trim(),\r\n      this.registrationForm.get(\"email\").value.trim(),\r\n      this.registrationForm.get(\"contactNumber\").value.trim(),\r\n      this.registrationForm.get(\"passwords.password\").value.trim(),\r\n      this.registrationForm.get(\"passwords.confirmPass\").value.trim(),\r\n    );\r\n\r\n    user.favourites = [];\r\n\r\n    this._userService\r\n      .saveUser(user)\r\n      .subscribe();\r\n\r\n    setTimeout (() => {\r\n      this._authenticationService\r\n      .login(user.email, user.password) \r\n      .subscribe(\r\n        (data) => {\r\n          this._router.navigate([\"myadverts\"]);\r\n          this.loading = false;\r\n        },\r\n        (error) => {\r\n          this.error = error;\r\n          this.loading = false;\r\n        }\r\n      );\r\n   }, 3000);\r\n  }\r\n\r\n  showPassRequirements(): void {\r\n      this.passRequirements = !this.passRequirements;\r\n  }\r\n\r\n  toggleFieldTextType(): void {\r\n    this.fieldTextType = !this.fieldTextType;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.sub) this.sub.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"col-md-6 offset-md-3 mt-5\">\r\n  <h4 class=\"text-center\">Register</h4>\r\n\r\n  <div>\r\n    <div class=\"card-body\">\r\n      <form [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"firstName\"\r\n            formControlName=\"firstName\"\r\n            class=\"form-control\"\r\n            placeholder=\"First Name\"\r\n            autocomplete=\"off\"\r\n            [ngClass]=\"{ 'is-invalid': message && message.firstName }\"\r\n          />\r\n          <span class=\"invalid-feedback\">\r\n            <span>\r\n              {{ message.firstName }}\r\n            </span>\r\n          </span>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"lastName\"\r\n            formControlName=\"lastName\"\r\n            class=\"form-control\"\r\n            placeholder=\"Last Name\"\r\n            autocomplete=\"off\"\r\n            [ngClass]=\"{ 'is-invalid': message && message.lastName }\"\r\n          />\r\n          <span class=\"invalid-feedback\">\r\n            <span>\r\n              {{ message.lastName }}\r\n            </span>\r\n          </span>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            formControlName=\"email\"\r\n            class=\"form-control\"\r\n            placeholder=\"Email\"\r\n            autocomplete=\"off\"\r\n            [ngClass]=\"{ 'is-invalid': message && message.email }\"\r\n          />\r\n          <span class=\"invalid-feedback\">\r\n            <span>\r\n              {{ message.email }}\r\n            </span>\r\n          </span>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"contactNumber\"\r\n            formControlName=\"contactNumber\"\r\n            class=\"form-control\"\r\n            placeholder=\"Contact Number\"\r\n            autocomplete=\"off\"\r\n            [ngClass]=\"{ 'is-invalid': message && message.contactNumber }\"\r\n          />\r\n          <span class=\"invalid-feedback\">\r\n            <span>\r\n              {{ message.contactNumber }}\r\n            </span>\r\n          </span>\r\n        </div>\r\n\r\n        <div formGroupName=\"passwords\">\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <input\r\n                [type]=\"fieldTextType ? 'text' : 'password'\"\r\n                name=\"password\"\r\n                formControlName=\"password\"\r\n                class=\"form-control\"\r\n                placeholder=\"Password\"\r\n                autocomplete=\"off\"\r\n                [ngClass]=\"{ 'is-invalid': message && message.password }\"\r\n              />\r\n              <div class=\"input-group-append\">\r\n                <span class=\"input-group-text\">\r\n                  <a\r\n                    ><i\r\n                      (click)=\"toggleFieldTextType()\"\r\n                      class=\"fa\"\r\n                      [ngClass]=\"{\r\n                        'fa-eye-slash': !fieldTextType,\r\n                        'fa-eye': fieldTextType\r\n                      }\"\r\n                    ></i\r\n                  ></a>\r\n                </span>\r\n              </div>\r\n              <span class=\"invalid-feedback\">\r\n                <span>\r\n                  {{ message.password }}\r\n                </span>\r\n              </span>\r\n            </div>\r\n\r\n            <a class=\"form-text text-muted\" (click)=\"showPassRequirements()\"\r\n              ><small>\r\n                {{ passRequirements ? \"Hide\" : \"View\" }} password requirements.\r\n              </small></a\r\n            >\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <input\r\n                [type]=\"fieldTextType ? 'text' : 'password'\"\r\n                name=\"confirmPass\"\r\n                formControlName=\"confirmPass\"\r\n                class=\"form-control\"\r\n                placeholder=\"Confirm Password\"\r\n                autocomplete=\"off\"\r\n                [ngClass]=\"{ 'is-invalid': message && message.passwords }\"\r\n              />\r\n              <div class=\"input-group-append\">\r\n                <span class=\"input-group-text\">\r\n                  <a\r\n                    ><i\r\n                      (click)=\"toggleFieldTextType()\"\r\n                      class=\"fa\"\r\n                      [ngClass]=\"{\r\n                        'fa-eye-slash': !fieldTextType,\r\n                        'fa-eye': fieldTextType\r\n                      }\"\r\n                    ></i\r\n                  ></a>\r\n                </span>\r\n              </div>\r\n              <span class=\"invalid-feedback\">\r\n                <span>\r\n                  {{ message.passwords }}\r\n                </span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" name=\"submit\" class=\"btn btn-secondary\">\r\n          <span\r\n            *ngIf=\"loading\"\r\n            class=\"spinner-border spinner-border-sm mr-1\"\r\n          ></span>\r\n          {{ loading ? \"Registering\" : \"Register\" }}\r\n        </button>\r\n\r\n        <div class=\"alert alert-danger mt-3\" *ngIf=\"invalidSubmit\">\r\n          Please ensure all fields are completed correctly.\r\n        </div>\r\n      </form>\r\n\r\n      <div class=\"mt-3\">\r\n        <a class=\"mt-3 text-dark\" routerLink=\"/login\">Login Instead</a>\r\n      </div>\r\n\r\n      <div class=\"alert alert-info mt-4\" *ngIf=\"passRequirements\">\r\n        <ul>\r\n          <li>\r\n            <small\r\n              >Your password needs to be between 8 and 100 characters in\r\n              length.</small\r\n            >\r\n          </li>\r\n          <li><small>Your password cannot contain spaces.</small></li>\r\n          <li>\r\n            <small>Your password must contain at least one number.</small>\r\n          </li>\r\n          <li>\r\n            <small\r\n              >Your password must contain at leat one uppercase\r\n              character.</small\r\n            >\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<footer class=\"bg-dark text-white py-2 text-center\"><small>\r\n  All Rights Reserved. Copyright. 2020. \r\n</small>\r\n</footer>","import { AfterContentChecked, Component } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { Router } from \"@angular/router\";\r\nimport { MobileNavComponent } from \"@app/shared/mobile-nav/mobile-nav.component\";\r\nimport { User } from \"@app/_models/user\";\r\nimport { AuthenticationService } from \"@app/_services\";\r\n\r\n@Component({\r\n  selector: \"app-header\",\r\n  templateUrl: \"./header.component.html\",\r\n  styleUrls: [\"./header.component.scss\"],\r\n})\r\nexport class HeaderComponent implements AfterContentChecked {\r\n  currentUser: User;  \r\n\r\n  home: boolean;\r\n\r\n  constructor(\r\n    private _router: Router,\r\n    private _authenticationService: AuthenticationService,\r\n    private router: Router,\r\n    private matDialog: MatDialog\r\n  ) {\r\n    this._authenticationService.currentUser.subscribe(\r\n      (x) => (this.currentUser = x)\r\n    );\r\n\r\n\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    if (this.router.url == \"/\" || this.router.url == \"/home\") {\r\n      this.home = true;\r\n    } else {\r\n      this.home = false;\r\n    }\r\n  }\r\n\r\n  openMobileNavModal() {\r\n    this.matDialog.open(MobileNavComponent, {\r\n      data: this.currentUser\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    this._authenticationService.logout();\r\n    this._router.navigate([\"/login\"]);\r\n  }\r\n\r\n}\r\n","<nav *ngIf=\"!home\" class=\"navbar navbar-expand navbar-light bg-light text-primary\">\r\n  <img src=\"../../assets/logo-small.png\" routerLink=\"/home\" alt=\"\">\r\n  <mat-icon class=\"hamburger\" (click)=\"openMobileNavModal()\">view_headline</mat-icon>\r\n  <div class=\"navbar-nav\">\r\n      <a class=\"nav-item nav-link text-dark\" routerLink=\"/home\">Home</a>\r\n      <a class=\"nav-item nav-link text-dark\" routerLink=\"/alladverts\">Homes for sale</a>\r\n      <a class=\"nav-item nav-link text-dark\" routerLink=\"/myadverts\" *ngIf=\"currentUser\">My Ads</a>\r\n      <a class=\"nav-item nav-link text-dark\" routerLink=\"/myaccount\" *ngIf=\"currentUser\">My Profile</a>\r\n      <a class=\"nav-item nav-link text-dark\" [routerLink]=\"['/editadvert', 0]\" *ngIf=\"currentUser\">Create Ad</a>\r\n      <a class=\"nav-item nav-link text-dark\" routerLink=\"/favourites\" *ngIf=\"currentUser\">Favourites</a>\r\n      <a class=\"nav-item nav-link text-dark\" routerLink=\"/login\" *ngIf=\"!currentUser\">Login</a>\r\n      <a class=\"nav-item nav-link text-dark\" routerLink=\"/registration\" *ngIf=\"!currentUser\">Register</a>\r\n      <a class=\"nav-item nav-link text-dark\" (click)=\"logout()\" *ngIf=\"currentUser\">Logout</a>\r\n  </div>\r\n</nav>\r\n\r\n<!-- @TODO: Implement this when admin code is done -->\r\n<!-- <nav class=\"navbar navbar-expand navbar-light bg-light\" *ngIf=\"currentUser\">\r\n  <div class=\"navbar-nav\">\r\n      <a class=\"nav-item nav-link text-dark\" routerLink=\"/home\">User Management</a>\r\n      <a class=\"nav-item nav-link text-dark\" routerLink=\"/\">Advert Management</a>\r\n  </div>\r\n</nav> -->","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { MobileNavComponent } from '@app/shared/mobile-nav/mobile-nav.component';\r\nimport { IUser } from '@app/_models/IUser';\r\nimport { AuthenticationService } from '@app/_services';\r\nimport { AdvertService } from '@app/_services/advert.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  currentUser: IUser;\r\n\r\n  constructor(private authService: AuthenticationService,\r\n              private router: Router,\r\n              private matDialog: MatDialog) {\r\n    this.authService.currentUser.subscribe(\r\n      (x) => (this.currentUser = x)\r\n    );\r\n   }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n    this.router.navigate([\"/login\"]);\r\n  }\r\n\r\n  openMobileNavModal() {\r\n    this.matDialog.open(MobileNavComponent, {\r\n      data: this.currentUser\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"hero-container\">\r\n  <div class=\"overlay\">\r\n    <nav class=\"navbar navbar-expand navbar-light\">\r\n      <img src=\"../../assets/logo-small.png\" routerLink=\"/home\" alt=\"\">\r\n      <mat-icon class=\"hamburger\" (click)=\"openMobileNavModal()\">view_headline</mat-icon>\r\n      <div class=\"navbar-nav\">\r\n          <a class=\"nav-item nav-link\" routerLink=\"/home\">Home</a>\r\n          <a class=\"nav-item nav-link\" routerLink=\"/alladverts\">Homes for sale</a>\r\n          <a class=\"nav-item nav-link\" routerLink=\"/myadverts\" *ngIf=\"currentUser\">My Ads</a>\r\n          <a class=\"nav-item nav-link\" routerLink=\"/myaccount\" *ngIf=\"currentUser\">My Profile</a>\r\n          <a class=\"nav-item nav-link\" [routerLink]=\"['/editadvert', 0]\" *ngIf=\"currentUser\">Create Ad</a>\r\n          <a class=\"nav-item nav-link\" routerLink=\"/favourites\" *ngIf=\"currentUser\">Favourites</a>\r\n          <a class=\"nav-item nav-link\" routerLink=\"/login\" *ngIf=\"!currentUser\">Login</a>\r\n          <a class=\"nav-item nav-link\" routerLink=\"/registration\" *ngIf=\"!currentUser\">Register</a>\r\n          <a class=\"nav-item nav-link\" (click)=\"logout()\" *ngIf=\"currentUser\">Logout</a>\r\n      </div>\r\n    </nav>\r\n    <h1>Find your dream mountain home</h1>\r\n    <div class=\"search\">\r\n      <app-search></app-search>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DeleteDialogComponent } from '@app/adverts/dialogs/delete-dialog/delete-dialog.component';\nimport { IAdvert } from '@app/_models/IAdvert';\nimport { IUser } from '@app/_models/IUser';\nimport { AuthenticationService } from '@app/_services';\nimport { AdvertService } from '@app/_services/advert.service';\n\n@Component({\n  selector: 'app-advert-actions',\n  templateUrl: './advert-actions.component.html',\n  styleUrls: ['./advert-actions.component.scss']\n})\nexport class AdvertActionsComponent implements OnInit {\n\n  loading: boolean;\n  @Input() advert: IAdvert;\n\n  adverts: IAdvert[];\n  currentUser: IUser;\n\n  constructor(private advertService: AdvertService,\n              private authService: AuthenticationService,\n              private matDialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.currentUser = this.authService.currentUserValue;\n  }\n\n  changeStatus(): void {\n      this.advert.status = this.advert.status == \"Live\" ? \"Hidden\" : \"Live\";\n\n      const updatedAdvert = { ...this.advert };\n\n      this.advertService\n        .updateAdvert(updatedAdvert)\n        .subscribe();\n  }\n\n  openDeleteDialog(): void {\n    this.matDialog.open(DeleteDialogComponent, {\n      data: this.advert\n    })\n  }\n}\n","<div class=\"container\">\n    <span\n      class=\"badge py-2 px-3\"\n      [ngClass]=\"{\n        'badge-success': advert.status == 'Live',\n        'badge-warning': advert.status == 'Hidden'\n      }\"\n      >{{ advert.status }}</span>\n    <div class=\"dropdown\">\n      <button\n        class=\"btn btn-info btn-sm dropdown-toggle\"\n        type=\"button\"\n        id=\"dropdownMenuButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n      >\n        Actions\n      </button>\n\n      <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n        <a\n          *ngIf=\"advert.status == 'Live'\"\n          class=\"dropdown-item small\"\n          (click)=\"changeStatus()\"\n          >Hide Advert</a\n        >\n        <a\n          *ngIf=\"advert.status == 'Hidden'\"\n          class=\"dropdown-item small\"\n          (click)=\"changeStatus()\"\n          >Unhide Advert</a\n        >\n        <div class=\"dropdown-divider\"></div>\n        <a\n          class=\"dropdown-item small\"\n          [routerLink]=\"['/editadvert', advert.id]\"\n          >Edit Advert</a\n        >\n        <a class=\"dropdown-item small\" (click)=\"openDeleteDialog()\">Delete Advert</a>\n      </div>\n    </div>\n  </div> ","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { IUser } from '@app/_models/IUser';\nimport { AuthenticationService, UserService } from '@app/_services';\n\n@Component({\n  selector: 'app-advert-card-large',\n  templateUrl: './advert-card-large.component.html',\n  styleUrls: ['./advert-card-large.component.scss']\n})\nexport class AdvertCardLargeComponent implements OnInit {\n\n  @Input() advert;\n  @Output() advertIdEvent = new EventEmitter<number>();\n\n  authUser: IUser;\n  isFavourite: boolean;\n  displayActions: boolean;\n  isLoading: boolean = true;\n\n  constructor(private authService: AuthenticationService,\n              private userService: UserService,\n              private matSnackBar: MatSnackBar,\n              private router: Router) { }\n\n  ngOnInit(): void {\n\n    const authUserId = this.authService.currentUserValue?.id;\n\n    if (!authUserId) {\n      return;\n    }\n\n    this.userService.getUser(authUserId)\n      .subscribe(user => {\n        this.authUser = user;\n        this.authUser.favourites.includes(this.advert.id) ? this.isFavourite = true : this.isFavourite = false;\n        this.router.url === '/myadverts' ? this.displayActions = true : this.displayActions = false;\n        this.isLoading  = false;\n      });\n  }\n\n  toggleFavourite(id: number): void {\n    const authUserId = this.authService.currentUserValue.id;\n\n    this.userService.getUser(authUserId).subscribe(user => {\n\n      if (!this.isFavourite) {\n        user.favourites.push(this.advert.id);\n        this.isFavourite = true;\n      } else {\n        const newFavourites = user.favourites.filter(element => element !== this.advert.id);\n        this.isFavourite = false;\n        user.favourites = newFavourites;\n        this.advertIdEvent.emit(id);\n      }\n\n      this.userService.updateUser(user).subscribe();\n      this.matSnackBar.open(`${this.isFavourite ? \"Added to\" : \"Removed from\"} your favourites`, \"Close\", {\n        duration: 2000\n      })\n    })\n  }\n}\n","<div class=\"mb-3\">\n    <div class=\"card my-4 box-link\">\n        <div class=\"row no-gutters\">\n            <div class=\"col-md-4\">\n                <div class=\"bd-placeholder-img\">\n                    <a [routerLink]=\"['/advertdetail', advert.id]\"><img [src]=\"advert.headlineImage\" alt=\"\" /></a>\n                </div>\n            </div>\n            <div [ngClass]=\"displayActions ? 'col-md-6' : 'col-md-8'\">\n                <div class=\"card-body\">\n                <h1 class=\"card-title h4\">{{ advert.price | currency: \"ZAR\":\"symbol-narrow\" }}</h1>\n                <a class=\"card-text h5\" [routerLink]=\"['/advertdetail', advert.id]\">{{ advert.title }}</a>\n                <p class=\"card-text\" [innerHtml]=\"advert.details | truncateText: 275\" ></p>\n                <p>{{ advert.province }}, {{ advert.city}}</p>\n                <div class=\"icon-cont-max\">\n                    <div class=\"icons\">\n                        <div class=\"icon-container\">\n                            <i class=\"fa fa-solid fa-bed\"></i>\n                            <span>{{ advert.bedrooms }}</span>\n                        </div>\n                        <div class=\"icon-container\">\n                            <i class=\"fa fa-solid fa-toilet\"></i>\n                            <span>{{ advert.bathrooms }}</span>\n                        </div>\n                        <div class=\"icon-container\">\n                            <i class=\"fa fa-solid fa-car\"></i>\n                            <span>{{ advert.parkingSpaces }}</span>\n                        </div>\n                    </div>\n                    <mat-icon *ngIf=\"!isLoading\" (click)=\"toggleFavourite(advert.id)\">{{ isFavourite ? \"favorite\" : \"favorite_border\"}}</mat-icon>\n                </div>\n                </div>\n            </div>  \n\n            <div *ngIf=\"displayActions\" class=\"col-md-2\">\n                <app-advert-actions [advert]=\"advert\"></app-advert-actions>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { CustomValidators } from '@app/_helpers/customValidators';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { invalidInputs } from '@app/shared/utils';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-contact-form',\r\n  templateUrl: './contact-form.component.html',\r\n  styleUrls: ['./contact-form.component.scss']\r\n})\r\nexport class ContactFormComponent implements OnInit {\r\n\r\n  @Output() closeDialogEvent = new EventEmitter<boolean>();\r\n\r\n  contactSellerForm: FormGroup; \r\n  validationMessage: { [key: string]: string } = {};\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private matSnackBar: MatSnackBar) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.contactSellerForm = this.formBuilder.group({\r\n      name: [\"\", Validators.required],\r\n      email: [\"\", [Validators.required, Validators.email]],\r\n      contactNumber: [\"\", [Validators.required, CustomValidators.onlyNumbers]],\r\n      message: [\"\", [Validators.required]]\r\n    })\r\n\r\n    this.contactSellerForm.valueChanges\r\n    .pipe(debounceTime(500))\r\n    .subscribe(x => {\r\n      this.validationMessage = invalidInputs(this.contactSellerForm);\r\n    })\r\n\r\n  }\r\n  \r\n  contactClick(): void {\r\n    if (!this.contactSellerForm.valid) {\r\n      this.contactSellerForm.markAllAsTouched();\r\n      this.validationMessage = invalidInputs(this.contactSellerForm);\r\n      return;\r\n    }\r\n\r\n    if (this.contactSellerForm.valid) {\r\n      this.matSnackBar.open(\"Your message has been sent\", 'Close', {\r\n        duration: 2000\r\n      });\r\n      \r\n      this.closeDialogEvent.emit(true);\r\n      this.contactSellerForm.reset();\r\n      return;\r\n    }\r\n    \r\n  }\r\n\r\n}\r\n","<div class=\"contact-card\">\n    <h5 class=\"\">Contact Seller</h5>\n    <form action=\"\" [formGroup]=\"contactSellerForm\">\n      <div class=\"form-group\">\n        <input formControlName=\"name\" \n             placeholder=\"Your name\" \n             class=\"form-control\" \n             type=\"text\" \n             [ngClass]=\"{ 'is-invalid': validationMessage && validationMessage.name }\">\n        <span class=\"invalid-feedback\">\n          {{ validationMessage.name }}\n        </span>\n      </div>\n      <div class=\"form-group\">\n        <input formControlName=\"email\" \n                placeholder=\"Your email\" \n                class=\"form-control\" \n                type=\"text\" \n                [ngClass]=\"{ 'is-invalid': validationMessage && validationMessage.email }\">\n        <span class=\"invalid-feedback\">\n          {{ validationMessage.email }}\n        </span>\n      </div>\n      <div class=\"form-group\">\n        <input formControlName=\"contactNumber\" \n                placeholder=\"Your cell number\" \n                class=\"form-control\" \n                type=\"text\"\n                [ngClass]=\"{ 'is-invalid': validationMessage && validationMessage.contactNumber }\">\n        <span class=\"invalid-feedback\">\n          {{ validationMessage.contactNumber }}\n        </span>\n      </div>\n      <div class=\"form-group\">\n        <textarea formControlName=\"message\" \n                  placeholder=\"Your message\" \n                  class=\"form-control\"\n                  [ngClass]=\"{ 'is-invalid': validationMessage && validationMessage.message }\">\n        </textarea>\n        <span class=\"invalid-feedback\">\n          {{ validationMessage.message }}\n        </span>\n      </div>\n      \n      \n      <button class=\"btn btn-outline-dark btn-sm btn-block\" (click)=\"contactClick()\">Send</button>\n    </form>\n  </div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { IUser } from '@app/_models/IUser';\nimport { AuthenticationService } from '@app/_services';\n\n@Component({\n  selector: 'app-mobile-nav',\n  templateUrl: './mobile-nav.component.html',\n  styleUrls: ['./mobile-nav.component.scss']\n})\nexport class MobileNavComponent implements OnInit {\n\n  currentUser: IUser;\n  \n  constructor(@Inject(MAT_DIALOG_DATA) private data: any,\n              private authService: AuthenticationService,\n              private router: Router\n              ) { }\n\n  ngOnInit(): void {\n    this.currentUser = this.data;\n  }\n\n  logout() {\n    this.authService.logout();\n    this.router.navigate([\"/login\"]);\n  }\n\n}\n","<nav class=\"navbar-container\">\n    <mat-icon mat-dialog-close class=\"close\">close</mat-icon>\n    <div class=\"navbar-items\">\n        <a mat-dialog-close class=\"nav-item nav-link\" routerLink=\"/home\">Home</a>\n        <a mat-dialog-close class=\"nav-item nav-link\" routerLink=\"/alladverts\">Homes for sale</a>\n        <a mat-dialog-close class=\"nav-item nav-link\" routerLink=\"/myadverts\" *ngIf=\"currentUser\">My Ads</a>\n        <a mat-dialog-close class=\"nav-item nav-link\" routerLink=\"/myaccount\" *ngIf=\"currentUser\">My Profile</a>\n        <a mat-dialog-close class=\"nav-item nav-link\" [routerLink]=\"['/editadvert', 0]\" *ngIf=\"currentUser\">Create Ad</a>\n        <a mat-dialog-close class=\"nav-item nav-link\" routerLink=\"/favourites\" *ngIf=\"currentUser\">Favourites</a>\n        <a mat-dialog-close class=\"nav-item nav-link\" routerLink=\"/login\" *ngIf=\"!currentUser\">Login</a>\n        <a mat-dialog-close class=\"nav-item nav-link\" routerLink=\"/registration\" *ngIf=\"!currentUser\">Register</a>\n        <a mat-dialog-close class=\"nav-item nav-link\" (click)=\"logout()\" *ngIf=\"currentUser\">Logout</a>\n    </div>\n  </nav>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatCardModule} from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDividerModule } from '@angular/material/divider';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatSortModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatInputModule,\n    MatIconModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatCardModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatDividerModule\n  ],\n  exports: [\n    CommonModule,\n    MatTableModule,\n    MatSortModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatInputModule,\n    MatIconModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatCardModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatDividerModule\n  ]\n})\nexport class NgMaterialModule { }\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LocationService } from '@app/_services/location.service';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.scss']\r\n})\r\nexport class SearchComponent implements OnInit {\r\n\r\n  @Output() closeDialogEvent = new EventEmitter<boolean>();\r\n\r\n  provinces = ['Gauteng', 'North West', 'Northern Cape', 'Western Cape', 'Eastern Cape', 'Limpopo', 'Free State', 'Mpumalanga', 'KwaZulu-Natal'];\r\n  searchForm: FormGroup;\r\n  cities: string[] = [];\r\n  prices = [];\r\n\r\n\r\n  constructor(private _formBuilder: FormBuilder,\r\n              private _locationService: LocationService,\r\n              private router: Router,\r\n              private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void { \r\n\r\n    this.searchForm = this._formBuilder.group({\r\n      province: [\"\", []],\r\n      city: [\"\", []],\r\n      minPrice: [\"\", []],\r\n      maxPrice: [\"\", []],\r\n      keyword: [\"\", []]\r\n    })\r\n\r\n    this.route.queryParamMap\r\n      .subscribe((params: any) => {\r\n        const queryParams = params.params;\r\n        \r\n        this.searchForm.setValue({\r\n          province: queryParams.province ? queryParams.province : \"\",\r\n          city: queryParams.city ? queryParams.city : \"\",\r\n          minPrice: +queryParams.minPrice ? +queryParams.minPrice : null,\r\n          maxPrice: +queryParams.maxPrice ? +queryParams.maxPrice : null,\r\n          keyword: queryParams.keyword ? queryParams.keyword : \"\"\r\n        })\r\n\r\n        if (queryParams.city) {\r\n          this._locationService.list()\r\n            .pipe(\r\n              map(x => {\r\n                const cities = x.filter(x => x.name === queryParams.city);\r\n                return cities.map(city => city.name);\r\n              })\r\n            )\r\n            .subscribe(cities => {\r\n              this.cities = cities;\r\n              this.searchForm.get(\"city\").patchValue(cities[0]);\r\n            })\r\n        }\r\n      })\r\n\r\n    this.searchForm.get(\"province\").valueChanges\r\n      .subscribe(value => {\r\n        this._locationService.list()\r\n        .pipe(\r\n          map(x => {\r\n            const cities = x.filter(x => x.province === value);\r\n            return cities.map(city => city.name);\r\n          })\r\n        )\r\n        .subscribe(cities => {\r\n          this.cities = cities;\r\n        })\r\n      })\r\n\r\n      this.assignClass();\r\n      this.generatePrices();\r\n  }\r\n\r\n  onSearch(): void {\r\n\r\n    let queryParams: any = {};\r\n  \r\n    if (this.searchForm.get(\"province\").value) queryParams.province = this.searchForm.get(\"province\").value;\r\n    if (this.searchForm.get(\"city\").value) queryParams.city = this.searchForm.get(\"city\").value;\r\n    if (this.searchForm.get(\"minPrice\").value) queryParams.minPrice = this.searchForm.get(\"minPrice\").value;\r\n    if (this.searchForm.get(\"maxPrice\").value) queryParams.maxPrice = this.searchForm.get(\"maxPrice\").value;\r\n    if (this.searchForm.get(\"keyword\").value) queryParams.keyword = this.searchForm.get(\"keyword\").value;\r\n    \r\n    this.closeDialogEvent.emit(true);\r\n        this.router.navigate(\r\n          ['/alladverts'],\r\n          { queryParams }\r\n        )\r\n  }\r\n\r\n  resetClick(): void {\r\n    if (this.router.url == '/home') {\r\n      this.searchForm.reset();\r\n      this.searchForm.patchValue({\r\n        province: \"\",\r\n        city: \"\",\r\n        minPrice: \"\",\r\n        maxPrice: \"\"\r\n      })\r\n\r\n      return;\r\n    }\r\n\r\n    this.searchForm.reset();\r\n    this.router.navigate(\r\n      ['/alladverts']\r\n    )\r\n  }\r\n\r\n  assignClass() {\r\n    const url = this.router.url;\r\n    if (url == \"/home\") {\r\n      return 'class1';\r\n    } else {\r\n      return 'class2';\r\n    }\r\n  }\r\n\r\n  generatePrices() {\r\n    let price = 500000;\r\n    let count = 0;\r\n\r\n    for (let i = 0; count < 16; i++) {\r\n      this.prices.push(price);\r\n      price += 500000;\r\n      count++;\r\n    }\r\n  }\r\n\r\n}\r\n","<div [ngClass]=\"assignClass()\">\r\n\r\n    <form action=\"\" class=\"form\" (ngSubmit)=\"onSearch()\" [formGroup]=\"searchForm\">\r\n      <div class=\"filters\">\r\n        <mat-form-field>\r\n          <mat-select name=\"province\" id=\"\" placeholder=\"Province\" formControlName=\"province\">\r\n            <mat-option [value]=\"prov\" *ngFor=\"let prov of provinces\">{{ prov }}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field>\r\n          <mat-select placeholder=\"City\" name=\"city\" id=\"\" formControlName=\"city\" >\r\n            <mat-option [value]=\"city\" *ngFor=\"let city of cities\">{{ city }}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field>\r\n          <mat-select name=\"minPrice\" id=\"\" placeholder=\"Min Price\" formControlName=\"minPrice\">\r\n            <mat-option [value]=\"price\" *ngFor=\"let price of prices\">{{ price }}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field>\r\n          <mat-select name=\"maxPrice\" id=\"\" placeholder=\"Max Price\" formControlName=\"maxPrice\">\r\n            <mat-option [value]=\"price\" *ngFor=\"let price of prices\">{{ price }}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"bottom-row\">\r\n        <mat-form-field>\r\n          <input matInput\r\n            type=\"text\"\r\n            placeholder=\"Search term...\"\r\n            formControlName=\"keyword\"\r\n            class=\"search-bar\"\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"buttons\">\r\n          <button type=\"button\" class=\"btn btn-light search\" (click)=\"onSearch()\">Search</button>\r\n          <button type=\"button\" class=\"btn btn-light reset\" (click)=\"resetClick()\">Reset</button>\r\n        </div>\r\n      </div>\r\n\r\n  </form>\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SearchComponent } from './search/search.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TruncateTextPipe } from '@app/_helpers/truncate-text.pipe';\nimport { NgMaterialModule } from './ng-material/ng-material.module';\nimport { AdvertCardLargeComponent } from './advert-card-large/advert-card-large.component';\nimport { RouterModule } from '@angular/router';\nimport { ContactFormComponent } from './contact-form/contact-form.component';\nimport { AdvertActionsComponent } from './advert-actions/advert-actions.component';\nimport { MobileNavComponent } from './mobile-nav/mobile-nav.component';\n\n\n\n@NgModule({\n  declarations: [\n    SearchComponent,\n    TruncateTextPipe,\n    AdvertCardLargeComponent,\n    ContactFormComponent,\n    AdvertActionsComponent,\n    MobileNavComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgMaterialModule,\n    RouterModule\n  ],\n  exports: [\n    SearchComponent,\n    TruncateTextPipe,\n    NgMaterialModule,\n    AdvertCardLargeComponent,\n    ContactFormComponent\n  ]\n})\nexport class SharedModule { }\n","import { FormGroup } from \"@angular/forms\";\r\n\r\nexport function invalidInputs(formgroup: FormGroup) {\r\n\r\n    let messages = {};\r\n    for (const input in formgroup.controls) {\r\n      const control = formgroup.controls[input];\r\n\r\n      // If the passwords don't match, assign error message.\r\n      if (control instanceof FormGroup && control.errors) {\r\n        Object.keys(control.errors).map((messageKey) => {\r\n          messages[input] = validationMessages[input][messageKey];\r\n        });\r\n      }\r\n\r\n      // If the password field doesn't meet the requirements, assign error message.\r\n      if (control instanceof FormGroup) {\r\n        const nestedGroupMessages = invalidInputs(control);\r\n        Object.assign(messages, nestedGroupMessages);\r\n      }\r\n\r\n      // If any of the other fields don't meet the requirements, assign error message.\r\n      if (validationMessages[input]) {\r\n        messages[input] = \"\"; \r\n        if (control.errors && (control.dirty || control.touched)) {\r\n\r\n          Object.keys(control.errors).map((messageKey) => {\r\n            messages[input] = validationMessages[input][messageKey];\r\n          });\r\n        }\r\n      }\r\n    }\r\n    return messages;\r\n  }\r\n\r\n  \r\nconst validationMessages: {} = {\r\n  firstName: {\r\n    required: \"A first name is required.\",\r\n    minlength: \"Your first name need to be at least 1 character long.\",\r\n    multipleSpaceValidator: \"Your first name cannot contain multiple spaces.\",\r\n    maxlength: \"Your first name cannot be longer than 100 characters\",\r\n    noNumbers: \"Your first name cannot contain any numbers\",\r\n    noSpecialChar: \"Your first name cannot contain any special characters\",\r\n  },\r\n  lastName: {\r\n    required: \"Your last name is required\",\r\n    minlength: \"Your last name needs to be at least 3 characters long.\",\r\n    multipleSpaceValidator: \"Your last name cannot contain multiple spaces.\",\r\n    maxlength: \"Your last name cannot be longer than 100 characters\",\r\n    noNumbers: \"Your last name cannot contain any numbers\",\r\n    noSpecialChar: \"Your last name cannot contain any special characters\",\r\n  },\r\n  email: {\r\n    required: \"Your email address is required.\",\r\n    minlength: \"Your email address must be at least 6 characters long\",\r\n    noSpaceValidator: \"Your email address cannot contain spaces.\",\r\n    email: \"This must be a valid email address.\",\r\n    maxlength: \"Your email cannot be longer than 100 characters\",\r\n  },\r\n  contactNumber: {\r\n    required: \"Your contact number is required.\",\r\n    onlyNumbers: \"Your contact number can only contain numbers\",\r\n  },\r\n  currentPassword: {\r\n    required: \"Your current password is required\"\r\n  },\r\n  passwords: {\r\n    match: \"Your passwords must match\",\r\n  },\r\n  password: {\r\n    required: \"A password is required\",\r\n    minlength: \"Your password needs to be at least 8 characters long\",\r\n    maxlength: \"Your password cannot be longer than 100 characters\",\r\n    noSpaceValidator: \"Your password cannot contain spaces\",\r\n    passwordNumber: \"Your password must contain at least one number\",\r\n    passwordUpperCase:\r\n      \"Your password must contain at leat one uppercase character\",\r\n  },\r\n  confirmPass: {\r\n    required: \"Please confirm your password\",\r\n  },\r\n  name: {\r\n    required: \"Your name is required.\"\r\n  },\r\n  message: {\r\n    required: \"A message is required\",\r\n  },\r\n  title: {\r\n    required: \"An advert title is required.\",\r\n    minlength: \"Your advert title must be at least 10 characters long.\",\r\n    maxlength: \"Your advert title cannot be longer than 100 characters\",\r\n    multipleSpaceValidator: \"Your advert title cannot have consecutive spaces\"\r\n  },\r\n  province: {\r\n    required: \"Your province is required.\",\r\n  },\r\n  city: {\r\n    required: \"Your city is required.\",\r\n  },\r\n  details: {\r\n    required: \"Advert details are required.\",\r\n    minlength: \"Your advert details need to be at least 10 characters long.\",\r\n    maxlength: \"Your advert details cannot be longer than 1000 characters.\",\r\n    multipleSpaceValidator: \"Your advert details cannot have consecutive spaces\"\r\n  },\r\n  price: {\r\n    required: \"An advert price is required.\",\r\n    min: \"The minimum advert price is R10 000\",\r\n    max: \"The maximum advert price is R100,000,000\",\r\n    noSpaceValidator: \"Your price cannot contain spaces\",\r\n    onlyNumbers: \"Your price can only contain numbers\"\r\n  },\r\n  bedrooms: {\r\n    required: \"Bedrooms are required\",\r\n    min: \"Cannot be less than 0\"\r\n  },\r\n  bathrooms: {\r\n    required: \"Bathrooms are required\",\r\n    min: \"Cannot be less than 0\"\r\n  },\r\n  parkingSpaces: {\r\n    required: \"Parkings are required\",\r\n    min: \"Cannot be less than 0\"\r\n  }\r\n};","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n    production: false,\r\n    apiUrl: 'http://localhost:3000'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n    enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n    .catch(err => console.error(err));\r\n"]}