{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_helpers/customValidators.ts","./src/app/_helpers/error.interceptor.ts","./src/app/_helpers/fake-backend.ts","./src/app/_helpers/index.ts","./src/app/_helpers/jwt.interceptor.ts","./src/app/_helpers/truncate-text.pipe.ts","./src/app/_mockServices/my-in-memory.service.ts","./src/app/_models/advert.ts","./src/app/_models/user.ts","./src/app/_services/advert.service.ts","./src/app/_services/authentication.service.ts","./src/app/_services/index.ts","./src/app/_services/location.service.ts","./src/app/_services/user.service.ts","./src/app/accounts/accounts.module.ts","./src/app/accounts/my-account/my-account.component.ts","./src/app/accounts/my-account/my-account.component.html","./src/app/accounts/password-dialog/password-dialog.component.ts","./src/app/accounts/password-dialog/password-dialog.component.html","./src/app/adverts/advert-detail/advert-detail.component.ts","./src/app/adverts/advert-detail/advert-detail.component.html","./src/app/adverts/adverts.module.ts","./src/app/adverts/all-adverts/all-adverts.component.ts","./src/app/adverts/all-adverts/all-adverts.component.html","./src/app/adverts/dialogs/contact-seller-dialog/contact-seller-dialog.component.ts","./src/app/adverts/dialogs/contact-seller-dialog/contact-seller-dialog.component.html","./src/app/adverts/dialogs/delete-dialog/delete-dialog.component.ts","./src/app/adverts/dialogs/delete-dialog/delete-dialog.component.html","./src/app/adverts/dialogs/search-dialog/search-dialog.component.ts","./src/app/adverts/dialogs/search-dialog/search-dialog.component.html","./src/app/adverts/dialogs/unsaved-changes-dialog/unsaved-changes-dialog.component.ts","./src/app/adverts/dialogs/unsaved-changes-dialog/unsaved-changes-dialog.component.html","./src/app/adverts/edit-advert/edit-advert.component.ts","./src/app/adverts/edit-advert/edit-advert.component.html","./src/app/adverts/favourite-adverts/favourite-adverts.component.ts","./src/app/adverts/favourite-adverts/favourite-adverts.component.html","./src/app/adverts/myadverts/index.ts","./src/app/adverts/myadverts/myadverts.component.ts","./src/app/adverts/myadverts/myadverts.component.html","./src/app/adverts/unsaved.guard.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/authentication/auth.guard.ts","./src/app/authentication/authentication.module.ts","./src/app/authentication/login/index.ts","./src/app/authentication/login/login.component.ts","./src/app/authentication/login/login.component.html","./src/app/authentication/not.auth.guard.ts","./src/app/authentication/registration/registration.component.ts","./src/app/authentication/registration/registration.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/shared/advert-actions/advert-actions.component.ts","./src/app/shared/advert-actions/advert-actions.component.html","./src/app/shared/advert-card-large/advert-card-large.component.ts","./src/app/shared/advert-card-large/advert-card-large.component.html","./src/app/shared/contact-form/contact-form.component.ts","./src/app/shared/contact-form/contact-form.component.html","./src/app/shared/mobile-nav/mobile-nav.component.ts","./src/app/shared/mobile-nav/mobile-nav.component.html","./src/app/shared/ng-material/ng-material.module.ts","./src/app/shared/search/search.component.ts","./src/app/shared/search/search.component.html","./src/app/shared/shared.module.ts","./src/app/shared/utils.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { AbstractControl } from '@angular/forms';\r\n\r\nexport class CustomValidators {\r\n\r\n  static noSpaceValidator(\r\n    control: AbstractControl\r\n    ): { [key: string]: boolean } | null {\r\n      if (/[\\s]/.test(control.value)) {\r\n        return { 'noSpaceValidator': true };\r\n      }\r\n      return null;\r\n    }\r\n\r\n    static multipleSpaceValidator(\r\n      control: AbstractControl\r\n      ): { [key: string]: boolean } | null {\r\n        if (/[\\s][\\s]/.test(control.value)) {\r\n          return { 'multipleSpaceValidator': true };\r\n        }\r\n        return null;\r\n      }\r\n\r\n    static noSpecialChars (control: AbstractControl): { [key: string]: boolean } | null {\r\n      if (/[!@#$%^&*(),.?\":{}|<>±§_+~`=\\/]/g.test(control.value)) {\r\n        return { 'noSpecialChar' : true }\r\n      }\r\n      return null;\r\n    }\r\n\r\n    static noNumbers(control: AbstractControl): { [key: string]: boolean } | null {\r\n      if (/[0-9]/.test(control.value)) {\r\n        return { 'noNumbers' : true }\r\n      }\r\n      return null;\r\n    }\r\n\r\n    static onlyNumbers(control: AbstractControl): { [key: string]: boolean } | null {\r\n      // if (!/[0-9]/.test(control.value)) {\r\n      if (/[A-Za-z!@#$%^&*(),.?\":{}|<>±§_+~`=\\/]/.test(control.value)) {\r\n        return { 'onlyNumbers' : true }\r\n      }\r\n      return null;\r\n    }\r\n\r\n    static passwordNumber(control: AbstractControl): { [key:  string]: boolean } | null {\r\n      if (!/[0-9]/.test(control.value)) {\r\n        return { 'passwordNumber' : true };\r\n      }\r\n      return null;\r\n    }\r\n\r\n    static passwordUpperCase(control: AbstractControl): { [key: string]: boolean } | null {\r\n      if (!/[A-Z]/.test(control.value)) {\r\n        return { 'passwordUpperCase': true }\r\n      }\r\n      return null;\r\n    }\r\n\r\n    static passwordCompare(\r\n      control: AbstractControl\r\n    ): { [key: string]: boolean } | null {\r\n      let password = control.get('password');\r\n      let confirmPass = control.get('confirmPass');\r\n    \r\n      if (password.pristine || confirmPass.pristine) {\r\n        return null;\r\n      }\r\n    \r\n      if (password.value !== confirmPass.value) {\r\n        return { 'match' : true }\r\n      }\r\n      return null;\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '@app/_services';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                // this.authenticationService.logout();\r\n                // location.reload();\r\n            }\r\n\r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  HttpRequest,\r\n  HttpResponse,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HTTP_INTERCEPTORS,\r\n} from \"@angular/common/http\";\r\nimport { Observable, of, throwError } from \"rxjs\";\r\nimport { delay, mergeMap, materialize, dematerialize } from \"rxjs/operators\";\r\n\r\nimport { User } from \"@app/_models\";\r\n\r\nconst users: User[] = [\r\n  {\r\n    id: 1,\r\n    email: \"test@test\",\r\n    password: \"test\",\r\n    firstName: \"Test\",\r\n    lastName: \"User\",\r\n    // password: \"test\",\r\n    contactNumber: \"0765698964\",\r\n    favourites: [1]\r\n  },\r\n  {\r\n    id: 2,\r\n    email: \"test2@test\",\r\n    password: \"test2\",\r\n    firstName: \"Test2\",\r\n    lastName: \"Test2Suranme\",\r\n    // confirmPass: \"test2\",\r\n    contactNumber: \"0824593652\",\r\n    favourites: []\r\n  },\r\n];\r\n\r\n@Injectable()\r\nexport class FakeBackendInterceptor implements HttpInterceptor {\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const { url, method, headers, body } = request;\r\n\r\n    // wrap in delayed observable to simulate server api call\r\n    return of(null)\r\n      .pipe(mergeMap(handleRoute))\r\n      .pipe(materialize()) // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\r\n      .pipe(delay(500))\r\n      .pipe(dematerialize());\r\n\r\n    function handleRoute() {\r\n \r\n      switch (true) {\r\n        case url.endsWith(\"/users/authenticate\") && method === \"POST\":\r\n          return authenticate();\r\n        case url.endsWith(\"/users\") && method === \"GET\":\r\n          return getUsers();\r\n        case url.endsWith(\"/users\") && method === \"PUT\":\r\n          return updateUser();\r\n        case url.includes(\"/users\") && !url.endsWith(\"/users\") && method === \"GET\":\r\n          return getUser(url);\r\n        case url.endsWith(\"/users/password\") && method === \"PUT\":\r\n          return updatePassword();\r\n        case url.endsWith(\"/users\") && method === \"POST\":\r\n          return createUser();\r\n        default:\r\n          // pass through any requests not handled above\r\n          return next.handle(request);\r\n      }\r\n    }\r\n\r\n    // route functions\r\n\r\n    function authenticate() {\r\n      const { email, password } = body;\r\n      const user = users.find(\r\n        (x) => x.email === email && x.password === password\r\n      );\r\n      if (!user) return error(\"Username or password is incorrect\");\r\n\r\n      return ok({\r\n        id: user.id,\r\n        email: user.email,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        contactNumber: user.contactNumber,\r\n        token: \"fake-jwt-token\",\r\n        favourites: user.favourites\r\n      });\r\n    }\r\n\r\n    function getUsers() {\r\n      if (!isLoggedIn()) return unauthorized();\r\n      return ok(users);\r\n    }\r\n\r\n    function getUser(url) {\r\n      if (!isLoggedIn()) return unauthorized();\r\n      const startPoint = url.lastIndexOf(\"/\") + 1;\r\n      const endPoint = url.length;\r\n      const userId = url.slice(startPoint, endPoint);\r\n\r\n      const user = users.find(user => user.id === +userId);\r\n      return ok(user);\r\n    }\r\n\r\n    function updateUser() {\r\n      /** @TODO: Change the value stored in localstorage as well..? */\r\n      const { email, firstName, lastName, contactNumber, id } = body;\r\n      const user = users.find((x) => x.id === id);\r\n\r\n      user.firstName = firstName;\r\n      user.lastName = lastName;\r\n      user.email = email;\r\n      user.contactNumber = contactNumber;\r\n\r\n      return ok({\r\n        id: user.id,\r\n        email: email,\r\n        firstName: firstName,\r\n        lastName: lastName,\r\n        contactNumber: contactNumber,\r\n        token: \"fake-jwt-token\",\r\n      });\r\n    }\r\n\r\n    function updatePassword() {\r\n      const { currentPassword, password, confirmPass } = body;\r\n      /** @ TODO: Change this - we might have two users with the same password */\r\n      const user = users.find((x) => x.password === currentPassword);\r\n      if (!user) return error(\"Current password is incorrect\");\r\n      user.password = password;\r\n      return ok({\r\n        password: password,\r\n        confirmPass: confirmPass,\r\n      });\r\n    }\r\n\r\n    function createUser() {\r\n      let user = body;\r\n\r\n      const numberOfUsers = users.length;\r\n      user.id = numberOfUsers + 1;\r\n\r\n      users.push(user);\r\n\r\n      return ok({\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        email: user.email,\r\n        password: user.password\r\n      })\r\n    }\r\n\r\n    // helper functions\r\n\r\n    function ok(body?) {\r\n      return of(new HttpResponse({ status: 200, body }));\r\n    }\r\n\r\n    function error(message) {\r\n      return throwError({ error: { message } });\r\n    }\r\n\r\n    function unauthorized() {\r\n      return throwError({ status: 401, error: { message: \"Unauthorised\" } });\r\n    }\r\n\r\n    function isLoggedIn() {\r\n      return headers.get(\"Authorization\") === \"Bearer fake-jwt-token\";\r\n    }\r\n  }\r\n}\r\n\r\nexport let fakeBackendProvider = {\r\n  // use fake backend in place of Http service for backend-less development\r\n  provide: HTTP_INTERCEPTORS,\r\n  useClass: FakeBackendInterceptor,\r\n  multi: true,\r\n};\r\n","export * from '../authentication/not.auth.guard';\r\nexport * from './error.interceptor';\r\nexport * from './fake-backend';\r\nexport * from './jwt.interceptor';","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { environment } from '@environments/environment';\r\nimport { AuthenticationService } from '@app/_services';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add auth header with jwt if user is logged in and request is to the api url\r\n        const currentUser = this.authenticationService.currentUserValue;\r\n        const isLoggedIn = currentUser && currentUser.token;\r\n        const isApiUrl = request.url.startsWith(environment.apiUrl);\r\n        if (isLoggedIn && isApiUrl) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${currentUser.token}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'truncateText'\r\n})\r\nexport class TruncateTextPipe implements PipeTransform {\r\n\r\n  transform(value: string, length: number): string {\r\n\r\n    const biggestWord = 50;\r\n    const elipses = \"...\";\r\n\r\n    if(typeof value === \"undefined\") return value;\r\n    if(value.length <= length) return value;\r\n\r\n    //.. truncate to about correct length\r\n    let truncatedText = value.slice(0, length + biggestWord);\r\n\r\n    //.. now nibble ends till correct length\r\n    while (truncatedText.length > length - elipses.length) {\r\n        let lastSpace = truncatedText.lastIndexOf(\" \");\r\n        if(lastSpace === -1) break;\r\n        truncatedText = truncatedText.slice(0, lastSpace).replace(/[!,.?;:]$/, '');\r\n    };\r\n\r\n   return truncatedText + elipses;\r\n  }\r\n\r\n}\r\n","import { InMemoryDbService } from \"angular-in-memory-web-api\";\r\nimport { RequestInfo } from \"angular-in-memory-web-api/interfaces\";\r\n\r\nexport class MyInMemoryService implements InMemoryDbService {\r\n  createDb() {\r\n  \r\n    const adverts = [\r\n      {\r\n        id: 3,\r\n        userId: 2,\r\n        title: \"2 Bedroom Apartment\",\r\n        province: \"Western Cape\",\r\n        city: \"Jeffries Bay\",\r\n        details:\r\n          \"2 bedrooms with the main leading out to garden with french doors, unit has a beautiful full bathroom. Generous sized living area open plan lounge/ dining and kitchen with sliding doors leading out on to the private  garden and covered patio area. Complex offers tennis court 3 pools active club house fiber and 24 hour security, access control, Douglasdale village shopping center a walk away.<br><br> The unit comes with one covered parking with plenty of visitors parking for your guests. Complex has 24 hour security and a beautiful pool area with braai facilities for those hot summer days. <br><br> This is a ground floor apartment, parking is close to the unit one is covered and second one is not. In a well maintained complex, which is close to schools, shops and transport. Apartment has modern finishes. Unit is fibre ready. Kitchen has space for two under counter appliances. Main bathroom has a shower. The second bathroom has a shower and separate bath. Complex has play areas for the kids. Easy access to the highway to get to work.\",\r\n        price: 940000,\r\n        status: \"Live\",\r\n        bedrooms: 2,\r\n        bathrooms: 2,\r\n        parkingSpaces: 1,\r\n        images: [\r\n          '../../../assets/image-1.jpg',\r\n          '../../../assets/image-2.jpg',\r\n          '../../../assets/image-3.jpg',\r\n          '../../../assets/image-4.jpg',\r\n          '../../../assets/image-5.jpg',\r\n          '../../../assets/image-6.jpg',\r\n        ],\r\n        headlineImage: '../../../assets/image-1.jpg'\r\n      \r\n      },\r\n      {\r\n        id: 1,\r\n        userId: 1,\r\n        title: \"3 Bedroom House\",\r\n        province: \"Gauteng\",\r\n        city: \"Johannesburg\",\r\n        details:\r\n          \"Enjoy the warm and inviting viking family lifestyle of this popular complex where mothers meet and enjoy a glass of wine, whilst the children play and ride their bikes in the street. 3/4 sunlit bedrooms with wood laminated floors (main bedroom with air-conditioner), 2 full modern bathrooms with blinds (main with double vanities). Functional modern, open plan kitchen with granite tops, scullery and lots of storage.\",\r\n        price: 2400000,\r\n        status: \"Live\",\r\n        bedrooms: 3,\r\n        bathrooms: 2,\r\n        parkingSpaces: 2,\r\n        images: [\r\n          '../../../assets/image-1.jpg',\r\n          '../../../assets/image-2.jpg',\r\n          '../../../assets/image-3.jpg',\r\n          '../../../assets/image-4.jpg',\r\n          '../../../assets/image-5.jpg',\r\n          '../../../assets/image-6.jpg',\r\n        ],\r\n        headlineImage: '../../../assets/image-2.jpg'\r\n      \r\n      },\r\n      {\r\n        id: 2,\r\n        userId: 1,\r\n        title: \"2 Bedroom House\",\r\n        province: \"Gauteng\",\r\n        city: \"Johannesburg\",\r\n        details:\r\n          \"The property has a generous novik floor space of 91m2, your open plan kitchen with plenty of granite counter top and cupboard space will cater for the aspiring cook. The kitchen is open plan, leading into the generous living area, which flows seamlessly onto the private covered patio. The well sized bedrooms have been lovingly maintained, the main bedroom is en-suite with a shower, and the second bedroom is serviced by the second bathroom with bath and overhead shower. This unit provides 2 carports, one covered and one open, and the added benefits of what the lifestyle estate offers, swimming pool, clubhouse, tennis courts, 24 hour security, manicured communal gardens, ample visitors parking, and so much more. It really is a must view.\",\r\n        price: 1300000,\r\n        status: \"Live\",\r\n        bedrooms: 2,\r\n        bathrooms: 1,\r\n        parkingSpaces: 2,\r\n        images: [\r\n          '../../../assets/image-1.jpg',\r\n          '../../../assets/image-2.jpg',\r\n          '../../../assets/image-3.jpg',\r\n          '../../../assets/image-4.jpg',\r\n          '../../../assets/image-5.jpg',\r\n          '../../../assets/image-6.jpg',\r\n        ],\r\n        headlineImage: '../../../assets/image-5.jpg' \r\n      },\r\n    ];\r\n\r\n\r\n    const cities = [\r\n      { name: \"Johannesburg\", province: \"Gauteng\"},\r\n      { name: \"Pretoria\", province: \"Gauteng\"},\r\n      { name: \"Port Elizabeth\", province: \"Eastern Cape\"},\r\n      { name: \"East London\", province: \"Eastern Cape\"},\r\n      { name: \"Cape Town\", province: \"Western Cape\"},\r\n      { name: \"Jeffries Bay\", province: \"Western Cape\"},\r\n      { name: \"Kimberley\", province: \"Northern Cape\"},\r\n      { name: \"Upington\", province: \"Northern Cape\"},\r\n      { name: \"Bloemfontein\", province: \"Free State\"},\r\n      { name: \"Welkom\", province: \"Free State\"},\r\n      { name: \"Mahikeng\", province: \"North West\"},\r\n      { name: \"Klerksdop\", province: \"North West\"},\r\n      { name: \"Polokwane\", province: \"Limpopo\"},\r\n      { name: \"Mokopane\", province: \"Limpopo\"},\r\n      { name: \"Mbombela\", province: \"Mpumalanga\"},\r\n      { name: \"Hazyview\", province: \"Mpumalanga\"},\r\n      { name: \"Durban\", province: \"Kwazulu-Natal\"},\r\n      { name: \"Pietermaritzburg\", province: \"Kwazulu-Natal\"}\r\n    ];\r\n\r\n    return { adverts, cities };\r\n  }\r\n}\r\n","import { IAdvert } from './IAdvert';\r\n\r\n\r\nexport class Advert implements IAdvert {\r\n\r\n  constructor(\r\n    public title: string,\r\n    public province: string,\r\n    public city: string,\r\n    public price: number,\r\n    public details: string,\r\n    public bedrooms: number,\r\n    public bathrooms: number,\r\n    public parkingSpaces: number,\r\n    public images: string[],\r\n    public headlineImage: string,\r\n    public status?: string,\r\n    /** @Note: shouldnt need this once the userId gets assigned via the API */\r\n    public userId?: number,\r\n    public id?: number\r\n  ) {}\r\n}\r\n","import { IUser } from './IUser';\r\n\r\nexport class User implements IUser {\r\n\r\n    constructor(\r\n        public firstName: string,\r\n        public lastName: string,\r\n        public email: string,\r\n        public contactNumber?: string,\r\n        public password?: string,\r\n        public token?: string,\r\n        public id?: number,\r\n        public favourites?: number[]\r\n    ){}\r\n}","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { IAdvert } from '@app/_models/IAdvert';\r\nimport { environment } from '@environments/environment';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdvertService {\r\n\r\n  apiEndpoint = 'api/adverts';\r\n\r\n  constructor(private _http: HttpClient) {}\r\n\r\n  getAdvert(id: number): Observable<IAdvert> {\r\n    if (id === 0) {\r\n      return of(this.initializeAd());\r\n    }\r\n    \r\n    return this._http.get<IAdvert>(`${environment.apiUrl}/${this.apiEndpoint}/${id}`);\r\n  }\r\n\r\n  getAllAdverts(): Observable<any> {\r\n    return this._http.get<any>(`${environment.apiUrl}/${this.apiEndpoint}`)\r\n    /** @NOTE: Filtering for advert status would be handled by the API */\r\n      .pipe(\r\n        map(adverts => {\r\n          return adverts.filter(ad => ad.status == \"Live\");\r\n        })\r\n      );\r\n  }\r\n\r\n  getSearchedAdverts(): Observable<IAdvert[]> {\r\n    return this._http.get<IAdvert[]>(`${environment.apiUrl}/${this.apiEndpoint}`)\r\n  }\r\n\r\n  getUserAdverts(id: number): Observable<any> {\r\n    return this._http.get<IAdvert[]>(`${environment.apiUrl}/${this.apiEndpoint}`)\r\n    /** @Note: This would be removed and handled by the API when there is one */\r\n      .pipe(\r\n        map(x => {\r\n          return x.filter(advert => advert.userId === id)\r\n        })\r\n      );\r\n  }\r\n\r\n  createAdvert(advert: IAdvert): Observable<IAdvert> {\r\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n    return this._http.post<IAdvert>(`${environment.apiUrl}/${this.apiEndpoint}`, advert, { headers });\r\n  }\r\n\r\n  /** @TODO: Pass the advert ID and request body seperatley here so i'm not using advert.id as the param */\r\n  updateAdvert(advert: IAdvert): Observable<IAdvert> {\r\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n    return this._http.put<IAdvert>(`${environment.apiUrl}/${this.apiEndpoint}/${advert.id}`, advert, { headers });\r\n  }\r\n\r\n  deleteAdvert(id: number): Observable<any> {\r\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json'});\r\n    return this._http.delete<IAdvert>(`${environment.apiUrl}/${this.apiEndpoint}/${id}`, { headers });\r\n  }\r\n\r\n  initializeAd(): IAdvert {\r\n    return {  \r\n      title: '',\r\n      province: '',\r\n      city: '',\r\n      details: '',\r\n      price: null,\r\n      status: '',\r\n      bedrooms: null,\r\n      bathrooms: null,\r\n      parkingSpaces: null,\r\n      images: [],\r\n      headlineImage: ''\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { environment } from '@environments/environment';\r\nimport { User } from '@app/_models';\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n    private currentUserSubject: BehaviorSubject<User>;\r\n    public currentUser: Observable<User>;\r\n\r\n    constructor(private _http: HttpClient) {\r\n        this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\r\n        this.currentUser = this.currentUserSubject.asObservable();\r\n    }\r\n\r\n    public get currentUserValue(): User {\r\n        return this.currentUserSubject.value;\r\n    }\r\n\r\n    public get decodedToken(): any {\r\n        /** @NOTE: Won't work with the in memory API as a fake token is being assigned */\r\n        const token = this.currentUserSubject.value.token;\r\n        return jwt_decode(token);\r\n    }\r\n\r\n    login(email: string, password: string) {\r\n        /** @TODO: The api url that needs to be used when connected to the Node API is: `${environment.apiUrl}/users/login` - need to change this so they are the same */\r\n        return this._http.post<any>(`${environment.apiUrl}/users/authenticate`, { email, password })\r\n            .pipe(map(user => {\r\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                localStorage.setItem('currentUser', JSON.stringify(user));\r\n                this.currentUserSubject.next(user);\r\n                return user;\r\n            }));\r\n    }\r\n\r\n    logout() {\r\n        // remove user from local storage to log user out\r\n        localStorage.removeItem('currentUser');\r\n        this.currentUserSubject.next(null);\r\n    }\r\n}","export * from './authentication.service';\r\nexport * from './user.service';","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ILocation } from '@app/_models/ILocation';\r\nimport { environment } from '@environments/environment';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocationService {\r\n\r\n  apiEndpoint = 'api/cities';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  list(): Observable<any> {\r\n    return this._http.get<any>(`${environment.apiUrl}/${this.apiEndpoint}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { environment } from '@environments/environment';\r\nimport { User } from '@app/_models';\r\nimport { IUser } from '@app/_models/IUser';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserService {\r\n\r\n    apiEndpoint = 'api/users';\r\n\r\n    constructor(private _http: HttpClient) { }\r\n\r\n    getAll(): Observable<IUser[]> {\r\n        return this._http.get<IUser[]>(`${environment.apiUrl}/${this.apiEndpoint}`);\r\n    }\r\n\r\n    getUser(id: number): Observable<any> {\r\n        return this._http.get<any>(`${environment.apiUrl}/${this.apiEndpoint}/${id}`)\r\n    }\r\n\r\n    saveUser(user: User): Observable<User> {\r\n        /** @TODO: This call the save the user isn't saving the user correctly - or, it's maybe saving the user to the users array on the in mem service, not the fake-backend */\r\n        const headers = new HttpHeaders({ 'Content-Type' : 'application/json' })\r\n        return this._http.post<User>(`${environment.apiUrl}/${this.apiEndpoint}`, user, { headers : headers });\r\n      }\r\n\r\n    getAuthUser(): Observable<IUser> {\r\n        /** TODO: Fix - this is returning null at the moment */\r\n        return this._http.get<IUser>(`${environment.apiUrl}/${this.apiEndpoint}/auth`);\r\n    }\r\n\r\n    createUser(body: IUser): Observable<IUser> {\r\n        return this._http.post<IUser>(`${environment.apiUrl}/${this.apiEndpoint}/register`, body);\r\n    }\r\n\r\n    updateUser(body: IUser): Observable<IUser> {\r\n        return this._http.put<IUser>(`${environment.apiUrl}/${this.apiEndpoint}`, body);\r\n    }\r\n\r\n    updateUserPassword(body: {}): Observable<IUser> {\r\n        return this._http.put<IUser>(`${environment.apiUrl}/${this.apiEndpoint}/password`, body);\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MyAccountComponent } from './my-account/my-account.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { PasswordDialogComponent } from './password-dialog/password-dialog.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [ MyAccountComponent, PasswordDialogComponent ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\n\r\nexport class AccountsModule { }\r\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Router } from \"@angular/router\";\r\nimport { CustomValidators } from \"@app/_helpers/customValidators\";\r\nimport { IUser } from '@app/_models/IUser';\r\nimport { AuthenticationService, UserService } from \"@app/_services\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { debounceTime } from \"rxjs/operators\";\r\nimport { PasswordDialogComponent } from \"../password-dialog/password-dialog.component\";\r\nimport { invalidInputs } from \"@app/shared/utils\";\r\n\r\n@Component({\r\n  selector: \"app-my-account\",\r\n  templateUrl: \"./my-account.component.html\",\r\n  styleUrls: [\"./my-account.component.scss\"],\r\n})\r\n\r\nexport class MyAccountComponent implements OnInit, OnDestroy {\r\n  manageAccountForm: FormGroup;\r\n  validationMessage: { [key: string]: string } = {};\r\n  sub: Subscription;\r\n  authUser: IUser;\r\n  error: string = '';\r\n  successMessage: string = '';\r\n\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private _userService: UserService,\r\n    private _router: Router,\r\n    private authService: AuthenticationService,\r\n    private matDialog: MatDialog,\r\n    private matSnackBar: MatSnackBar) {}\r\n\r\n  ngOnInit(): void {\r\n    this.manageAccountForm = this._formBuilder.group({\r\n      firstName: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(1),\r\n          Validators.maxLength(100),\r\n          CustomValidators.multipleSpaceValidator,\r\n          CustomValidators.noSpecialChars,\r\n          CustomValidators.noNumbers,\r\n        ],\r\n      ],\r\n      lastName: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(100),\r\n          CustomValidators.multipleSpaceValidator,\r\n          CustomValidators.noSpecialChars,\r\n          CustomValidators.noNumbers,\r\n        ],\r\n      ],\r\n      email: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.email,\r\n          Validators.minLength(6),\r\n          Validators.maxLength(100),\r\n          CustomValidators.noSpaceValidator,\r\n        ],\r\n      ],\r\n      contactNumber: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          CustomValidators.onlyNumbers\r\n        ]\r\n      ]\r\n    });\r\n\r\n    this.sub = this.manageAccountForm.valueChanges\r\n      .pipe(debounceTime(600))\r\n      .subscribe(\r\n        (value) => (this.validationMessage = invalidInputs(this.manageAccountForm))\r\n      );\r\n\r\n    this.getAuthUser();\r\n  }\r\n\r\n  getAuthUser(): void {\r\n    const userId = this.authService.currentUserValue.id;\r\n\r\n    this._userService.getUser(userId)\r\n      .subscribe((user) => {\r\n        this.authUser = user;\r\n\r\n        this.displayUser();\r\n      })\r\n  }\r\n\r\n  displayUser(): void {\r\n    this.manageAccountForm.patchValue({\r\n      firstName: this.authUser.firstName,\r\n      lastName: this.authUser.lastName,\r\n      email: this.authUser.email,\r\n      contactNumber: this.authUser.contactNumber\r\n    });\r\n  }\r\n\r\n  updateUser(): void {\r\n\r\n    /** TODO: Change the way this updates */\r\n    const userToUpdate: IUser = { \r\n      id: this.authUser.id,\r\n      firstName: this.manageAccountForm.get(\"firstName\").value.trim(),\r\n      lastName: this.manageAccountForm.get(\"lastName\").value.trim(),\r\n      email: this.manageAccountForm.get(\"email\").value.trim(),\r\n      contactNumber: this.manageAccountForm.get(\"contactNumber\").value.trim(),\r\n    };\r\n\r\n    if (this.authUser.firstName === userToUpdate.firstName &&\r\n        this.authUser.lastName === userToUpdate.lastName && \r\n        this.authUser.email === userToUpdate.email && \r\n        this.authUser.contactNumber === userToUpdate.contactNumber ) {\r\n          this.matSnackBar.open(\"No changes were detected\", \"Close\", {\r\n            duration: 2000\r\n          })\r\n          return;\r\n        }\r\n\r\n    this._userService.updateUser(userToUpdate)\r\n      .subscribe((user) => {\r\n        this._router\r\n          .navigateByUrl(\"/RefreshComponent\", { skipLocationChange: true })\r\n          .then(() => {\r\n            this._router.navigate([\"/myaccount\"]);\r\n            this.matSnackBar.open(\"You profile has been updated\", \"Close\", {\r\n              duration: 2000\r\n            })\r\n          });\r\n      });\r\n  }\r\n\r\n  openDialog() {\r\n    this.matDialog.open(PasswordDialogComponent, {\r\n      data: {\r\n        user: this.authUser\r\n      }\r\n    })\r\n  }\r\n\r\n  afterSave(): void {\r\n    this.manageAccountForm.patchValue({\r\n      currentPassword: '',\r\n      passwords: { password: '', confirmPass: ''},\r\n    });\r\n    this.manageAccountForm.markAsPristine();\r\n    this.manageAccountForm.markAsUntouched();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.sub) this.sub.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"container\">\r\n \r\n  <div id=\"login-row\" class=\"row justify-content-center align-items-center\">\r\n    <div id=\"login-column\" class=\"col-md-6\">\r\n      <div id=\"login-box\" class=\"col-md-12\">\r\n        <form\r\n          id=\"login-form\"\r\n          class=\"form\"\r\n          novalidate\r\n          [formGroup]=\"manageAccountForm\"\r\n        >\r\n  \r\n          <h1 class=\"text-center my-4 h3\">Manage my account</h1>\r\n          <div class=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              id=\"firstName\"\r\n              class=\"form-control\"\r\n              formControlName=\"firstName\"\r\n              placeholder=\"First Name\"\r\n              autocomplete=\"off\"\r\n              [ngClass]=\"{\r\n                'is-invalid': validationMessage && validationMessage.firstName\r\n              }\"\r\n            />\r\n            <span class=\"invalid-feedback\">\r\n              <span>\r\n                {{ validationMessage.firstName }}\r\n              </span>\r\n            </span>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              id=\"lastName\"\r\n              class=\"form-control\"\r\n              formControlName=\"lastName\"\r\n              placeholder=\"Last Name\"\r\n              autocomplete=\"off\"\r\n              [ngClass]=\"{\r\n                'is-invalid': validationMessage && validationMessage.lastName\r\n              }\"\r\n            />\r\n            <span class=\"invalid-feedback\">\r\n              {{ validationMessage.lastName }}\r\n            </span>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              class=\"form-control\"\r\n              formControlName=\"email\"\r\n              placeholder=\"Email\"\r\n              autocomplete=\"off\"\r\n              [ngClass]=\"{\r\n                'is-invalid': validationMessage && validationMessage.email\r\n              }\"\r\n            />\r\n            <span class=\"invalid-feedback\">\r\n              <span>\r\n                {{ validationMessage.email }}\r\n              </span>\r\n            </span>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"contactNumber\"\r\n              id=\"contactNumber\"\r\n              class=\"form-control\"\r\n              formControlName=\"contactNumber\"\r\n              placeholder=\"Contact Number\"\r\n              autocomplete=\"off\"\r\n              [ngClass]=\"{\r\n                'is-invalid': validationMessage && validationMessage.contactNumber\r\n              }\"\r\n            />\r\n            <span class=\"invalid-feedback\">\r\n              <span>\r\n                {{ validationMessage.contactNumber }}\r\n              </span>\r\n            </span>\r\n          </div>\r\n\r\n          <a\r\n          class=\"btn btn-outline-secondary btn-lg btn-block\"\r\n          (click)=\"openDialog()\"\r\n        >\r\n          Change password\r\n        </a>\r\n          <button\r\n            type=\"submit\"\r\n            name=\"submit\"\r\n            class=\"btn btn-outline-success btn-lg btn-block\"\r\n            (click)=\"updateUser()\"\r\n            [disabled]=\"!manageAccountForm.touched\"\r\n          >\r\n            Save changes\r\n          </button>\r\n          <a\r\n            class=\"btn btn-outline-danger btn-lg btn-block\"\r\n            routerLink=\"/myadverts\"\r\n          >\r\n            Cancel\r\n          </a>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CustomValidators } from '@app/_helpers/customValidators';\nimport { UserService } from '@app/_services';\nimport { debounceTime, delay } from 'rxjs/operators';\nimport { invalidInputs } from '@app/shared/utils';\n\n@Component({\n  selector: 'app-password-dialog',\n  templateUrl: './password-dialog.component.html',\n  styleUrls: ['./password-dialog.component.scss']\n})\nexport class PasswordDialogComponent implements OnInit {\n\n  editPasswordForm: FormGroup;\n  fieldTextType: boolean = false;\n  validationMessage: { [key: string]: string } = {};\n\n  constructor(private _formBuilder: FormBuilder,\n              @Inject(MAT_DIALOG_DATA) public data: any,\n              public dialogRef: MatDialogRef<PasswordDialogComponent>,\n              private _userService: UserService,\n              private matSnackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.buildForm();\n  }\n\n  buildForm() {\n    this.editPasswordForm = this._formBuilder.group({\n      currentPassword: [\"\", Validators.required],\n      passwords: this._formBuilder.group({\n        password: [\"\", [  Validators.required, \n                          Validators.minLength(8), \n                          Validators.maxLength(100),\n                          CustomValidators.noSpaceValidator,\n                          CustomValidators.passwordNumber,\n                          CustomValidators.passwordUpperCase ]],\n        confirmPass: [\"\", Validators.required]\n      }, { validator: CustomValidators.passwordCompare } )\n    })\n\n    this.editPasswordForm.valueChanges\n      .pipe(debounceTime(800))\n      .subscribe(() => {\n        this.validationMessage = invalidInputs(this.editPasswordForm);\n      })\n  }\n\n  updatePassword() {\n    const currentPassword = this.editPasswordForm.get(\"currentPassword\").value;\n\n    this.editPasswordForm.get(\"currentPassword\").setErrors(null);\n    this.validationMessage = {};\n\n    if (currentPassword !== this.data.user.password) {\n      this.editPasswordForm.get(\"currentPassword\").setErrors({ currentPassword: true });\n      this.validationMessage = { currentPassword: \"Password is not right, it is so not right\"}\n      return;\n    } \n\n    if (!this.editPasswordForm.valid) {\n      this.editPasswordForm.markAllAsTouched();\n      this.validationMessage = invalidInputs(this.editPasswordForm);\n      return;\n    }\n\n    const passwordToUpdate: {} = { \n        id: this.data.user.id,\n        currentPassword: this.editPasswordForm.get(\"currentPassword\").value,\n        password: this.editPasswordForm.get(\"passwords.password\").value,\n        confirmPass: this.editPasswordForm.get(\"passwords.confirmPass\").value\n    };\n      \n    this._userService.updateUserPassword(passwordToUpdate)\n      .subscribe((user) => {\n        this.dialogRef.close();\n        this.matSnackBar.open(\"Your password has been updated\", 'Close', { \n          duration: 2000\n         });\n      });\n  }\n\n  toggleFieldTextType(): void {\n    this.fieldTextType = !this.fieldTextType;\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n}\n","<div class=\"container\">\n  <form action=\"\" [formGroup]=\"editPasswordForm\">\n    <h2>Change your password</h2>\n      <div class=\"form-group\">\n          <div class=\"input-group\">\n              <input\n              [type]=\"fieldTextType ? 'text' : 'password'\"\n              name=\"currentPassword\"\n              id=\"currentPassword\"\n              class=\"form-control\"\n              formControlName=\"currentPassword\"\n              placeholder=\"Current Password\"\n              autocomplete=\"off\"\n              [ngClass]=\"{\n              'is-invalid': validationMessage && validationMessage.currentPassword\n              }\"\n              />\n              <div class=\"input-group-append\">\n                  <span class=\"input-group-text\">\n                    <a\n                      ><i\n                        (click)=\"toggleFieldTextType()\"\n                        class=\"fa\"\n                        [ngClass]=\"{\n                          'fa-eye-slash': !fieldTextType,\n                          'fa-eye': fieldTextType\n                        }\"\n                      ></i\n                    ></a>\n                  </span>\n              </div>\n              <span class=\"invalid-feedback\">\n                <span>\n                {{ validationMessage.currentPassword }}\n                </span>\n            </span>\n          </div>\n          \n          </div>\n          \n          <div formGroupName=\"passwords\">\n          <div class=\"form-group\">\n              <div class=\"input-group\">\n              <input\n              [type]=\"fieldTextType ? 'text' : 'password'\"\n              name=\"password\"\n              id=\"password\"\n              class=\"form-control\"\n              formControlName=\"password\"\n              placeholder=\"Password\"\n              autocomplete=\"off\"\n              [ngClass]=\"{\n                  'is-invalid': validationMessage && validationMessage.password\n              }\"\n              />\n                  <div class=\"input-group-append\">\n                      <span class=\"input-group-text\">\n                        <a\n                          ><i\n                            (click)=\"toggleFieldTextType()\"\n                            class=\"fa\"\n                            [ngClass]=\"{\n                              'fa-eye-slash': !fieldTextType,\n                              'fa-eye': fieldTextType\n                            }\"\n                          ></i\n                        ></a>\n                      </span>\n                  </div>\n                  <span class=\"invalid-feedback\">\n                    <span>\n                        {{ validationMessage.password }}\n                    </span>\n                  </span>\n              </div>\n          </div>\n      \n          <div class=\"form-group\">\n              <div class=\"input-group\">\n                  <input\n                  [type]=\"fieldTextType ? 'text' : 'password'\"\n                  name=\"confirmPass\"\n                  id=\"confirmPass\"\n                  class=\"form-control\"\n                  formControlName=\"confirmPass\"\n                  placeholder=\"Confirm Password\"\n                  autocomplete=\"off\"\n                  [ngClass]=\"{\n                      'is-invalid': validationMessage && validationMessage.confirmPass || validationMessage.passwords\n                  }\"\n                  />\n                  <div class=\"input-group-append\">\n                      <span class=\"input-group-text\">\n                        <a\n                          ><i\n                            (click)=\"toggleFieldTextType()\"\n                            class=\"fa\"\n                            [ngClass]=\"{\n                              'fa-eye-slash': !fieldTextType,\n                              'fa-eye': fieldTextType\n                            }\"\n                          ></i\n                        ></a>\n                      </span>\n                  </div>\n                  <span class=\"invalid-feedback\">\n                    <span>\n                        {{ validationMessage.confirmPass }}\n                    </span>\n                    <span>\n                      {{ validationMessage.passwords }}\n                  </span>\n                  </span>\n              </div>\n              \n          </div>\n      </div>\n  \n      <div class=\"action-container\">\n        <button\n        type=\"submit\"\n        name=\"submit\"\n        class=\"btn btn-outline-success btn-md btn-block\"\n        (click)=\"updatePassword()\"\n        >\n          Save changes\n        </button>\n        <a\n          class=\"btn btn-outline-danger btn-md btn-block\"\n          (click)=\"closeDialog()\"\n        >\n          Cancel\n        </a>\n      </div>\n      \n  </form>\n</div>    ","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { IAdvert } from '@app/_models/IAdvert';\r\nimport { IUser } from '@app/_models/IUser';\r\nimport { AuthenticationService, UserService } from '@app/_services';\r\nimport { AdvertService } from '@app/_services/advert.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { ContactSellerDialogComponent } from '../dialogs/contact-seller-dialog/contact-seller-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-advert-detail',\r\n  templateUrl: './advert-detail.component.html',\r\n  styleUrls: ['./advert-detail.component.scss']\r\n})\r\nexport class AdvertDetailComponent implements OnInit, OnDestroy {\r\n\r\n  headlineImage;\r\n  headlineImgIndex = 0;\r\n\r\n  sub: Subscription = new Subscription();\r\n  id: number;\r\n  advert: IAdvert;\r\n  authUser: IUser;\r\n  isFavourite: boolean;\r\n  imagesLoaded: boolean;\r\n  isLoading: boolean = true;\r\n\r\n  constructor(private _route: ActivatedRoute,\r\n              private _advertService: AdvertService,\r\n              private matSnackBar: MatSnackBar,\r\n              private authService: AuthenticationService,\r\n              private userService: UserService,\r\n              private matDialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    this.sub.add(\r\n      this._route.paramMap.subscribe((params) => {\r\n        this.id = +params.get(\"id\");\r\n        this.getAdvert(this.id);\r\n      })\r\n    );\r\n}\r\n\r\n  cycleForward(): void {\r\n    this.headlineImgIndex++;\r\n    if (this.headlineImgIndex < this.advert.images.length) {\r\n      this.advert.headlineImage = this.advert.images[this.headlineImgIndex];\r\n    } else {\r\n      this.advert.headlineImage = this.advert.images[0];\r\n      this.headlineImgIndex = 0;\r\n    }\r\n  }\r\n\r\n  cycleBackward(): void {\r\n    this.headlineImgIndex--;\r\n    if (this.headlineImgIndex < this.advert.images.length && this.headlineImgIndex >= 0) {\r\n      this.advert.headlineImage = this.advert.images[this.headlineImgIndex];\r\n    } else {\r\n      this.advert.headlineImage = this.advert.images[this.advert.images.length - 1];\r\n      this.headlineImgIndex = this.advert.images.length - 1;\r\n    }\r\n  }\r\n\r\n  getClass(img): string {\r\n    if (this.advert.headlineImage == img) {\r\n      return;\r\n    } else {\r\n      return 'overlay';\r\n    }\r\n  }\r\n\r\n  selectImage(img): void {\r\n    const newIndex = this.advert.images.findIndex(image => image === img );\r\n    this.headlineImgIndex = newIndex;\r\n    this.advert.headlineImage = img;\r\n  }\r\n\r\n  getAdvert(id: number): void {\r\n    this._advertService  \r\n    .getAdvert(id)\r\n    .pipe(\r\n      tap(advert => {\r\n        const headlineImgIndex = advert.images.findIndex(image => image == advert.headlineImage);\r\n        advert.images.splice(headlineImgIndex, 1);\r\n        advert.images.unshift(advert.headlineImage);\r\n      })\r\n    )\r\n    .subscribe((advert => {\r\n        this.advert = advert;\r\n        this.determineFavourite();\r\n        this.imagesLoaded = true;\r\n      }))\r\n  }\r\n\r\n  determineFavourite(): void {\r\n    const authUserId = this.authService.currentUserValue?.id;\r\n\r\n    if (!authUserId) {\r\n      this.isLoading = false;\r\n      return;\r\n    } \r\n\r\n    this.userService.getUser(authUserId)\r\n      .subscribe(user => {\r\n        this.authUser = user;\r\n        if (this.authUser.favourites.includes(this.advert.id)) this.isFavourite = true;\r\n        this.isLoading = false;\r\n      });\r\n  }\r\n\r\n  \r\n  openContactDialog() {\r\n    this.matDialog.open(ContactSellerDialogComponent);\r\n  }\r\n\r\n  toggleFavourite(): void {\r\n    const authUserId = this.authService.currentUserValue.id;\r\n\r\n    this.userService.getUser(authUserId).subscribe(user => {\r\n\r\n      if (!this.isFavourite) {\r\n        user.favourites.push(this.advert.id);\r\n        this.isFavourite = true;\r\n      } else {\r\n        const newFavourites = user.favourites.filter(element => element !== this.advert.id);\r\n        this.isFavourite = false;\r\n        user.favourites = newFavourites;\r\n      }\r\n\r\n      this.userService.updateUser(user).subscribe();\r\n      this.matSnackBar.open(`${this.isFavourite ? \"Added to\" : \"Removed from\"} your favourites`, \"Close\", {\r\n        duration: 2000\r\n      })\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.sub) this.sub.unsubscribe();\r\n  }\r\n}","<div class=\"container grid-container mt-4\" *ngIf=\"advert\">\r\n\r\n  <div *ngIf=\"imagesLoaded\">\r\n    <div class=\"img-container\">\r\n      <a><i class=\"fas fa-chevron-left mr-5\" (click)=\"cycleBackward()\"></i></a>\r\n      <img [src]='advert.headlineImage' alt=\"\" />\r\n      <a><i class=\"fas fa-chevron-right ml-5\" (click)=\"cycleForward()\"></i></a>\r\n    </div>\r\n  \r\n    <div class=\"img-preview-container\">\r\n      <div *ngFor=\"let img of advert.images\" class=\"img-preview\" (click)=\"selectImage(img)\"><div [ngClass]=\"getClass(img)\"></div><img [src]=\"img\"/></div>\r\n    </div>\r\n  </div>\r\n  \r\n\r\n  <div *ngIf=\"!isLoading\" class=\"content-container\">\r\n    <div class=\"detail-container\">\r\n      <div class=\"top-part\">\r\n        <div>\r\n          <h2>{{ advert.title }}</h2>\r\n          <h1>{{ advert.price | currency: \"ZAR\":\"symbol-narrow\" }}</h1>\r\n          <p class=\"\">{{ advert.province }}, {{ advert.city }}</p>\r\n  \r\n          <div class=\"icons\">\r\n            <div class=\"icon-container\">\r\n              <i class=\"fa fa-solid fa-bed\"></i>\r\n              <span>{{ advert.bedrooms }}</span>\r\n            </div>\r\n            <div class=\"icon-container\">\r\n              <i class=\"fa fa-solid fa-toilet\"></i>\r\n              <span>{{ advert.bathrooms }}</span>\r\n            </div>\r\n            <div class=\"icon-container\">\r\n              <i class=\"fa fa-solid fa-car\"></i>\r\n              <span>{{ advert.parkingSpaces }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button *ngIf=\"authUser\" class=\"btn btn-outline-info btn-sm\" (click)=\"toggleFavourite()\">{{ isFavourite ? \"Remove from favourites\" : \"Add to favourites\" }}\r\n          <mat-icon>{{ isFavourite ? \"favorite\" : \"favorite_border\"}}</mat-icon>\r\n        </button>\r\n        <button class=\"btn btn-outline-info btn-sm contact-btn\" (click)=\"openContactDialog()\">Contact seller</button>\r\n      </div>\r\n      \r\n      <mat-divider></mat-divider>\r\n\r\n      <div class=\"advert-details\">\r\n          <p style=\"white-space: pre-line\" [innerHtml]=\"advert.details\"></p>\r\n      </div>\r\n    </div>\r\n\r\n    <app-contact-form></app-contact-form>\r\n\r\n  </div>\r\n</div>","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { MyAdvertsComponent } from \"./myadverts\";\r\nimport { EditAdvertComponent } from \"./edit-advert/edit-advert.component\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { AllAdvertsComponent } from \"./all-adverts/all-adverts.component\";\r\nimport { AdvertDetailComponent } from \"./advert-detail/advert-detail.component\";\r\nimport { SharedModule } from \"@app/shared/shared.module\";\r\nimport { FavouriteAdvertsComponent } from './favourite-adverts/favourite-adverts.component';\r\nimport { DeleteDialogComponent } from './dialogs/delete-dialog/delete-dialog.component';\r\nimport { UnsavedChangesDialogComponent } from './dialogs/unsaved-changes-dialog/unsaved-changes-dialog.component';\nimport { SearchDialogComponent } from './dialogs/search-dialog/search-dialog.component';\nimport { ContactSellerDialogComponent } from './dialogs/contact-seller-dialog/contact-seller-dialog.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MyAdvertsComponent,\r\n    EditAdvertComponent,\r\n    AllAdvertsComponent,\r\n    AdvertDetailComponent,\r\n    FavouriteAdvertsComponent,\r\n    DeleteDialogComponent,\r\n    UnsavedChangesDialogComponent,\r\n    SearchDialogComponent,\r\n    ContactSellerDialogComponent\r\n  ],\r\n  imports: [\r\n    CommonModule, \r\n    RouterModule, \r\n    ReactiveFormsModule, \r\n    FormsModule,\r\n    SharedModule\r\n  ],\r\n})\r\nexport class AdvertsModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { SearchComponent } from '@app/shared/search/search.component';\r\nimport { IAdvert } from '@app/_models/IAdvert';\r\nimport { AdvertService } from '@app/_services/advert.service';\r\nimport { SearchDialogComponent } from '../dialogs/search-dialog/search-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './all-adverts.component.html',\r\n  styleUrls: ['./all-adverts.component.scss']\r\n})\r\nexport class AllAdvertsComponent implements OnInit {\r\n\r\n  adverts: IAdvert[] = [];\r\n  isAscending: boolean;\r\n  orderBy: string = 'None';\r\n  preFilledTerms: any;\r\n  advertsToSend: IAdvert[] = [];\r\n  loading: boolean = true;\r\n\r\n  constructor(private _advertService: AdvertService,\r\n              private route: ActivatedRoute,\r\n              private matDialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n  \r\n    this.route.queryParamMap\r\n      .subscribe((params) => {\r\n        this.preFilledTerms = params;\r\n\r\n        const hasParams = Object.keys(this.preFilledTerms.params).length > 0;\r\n        const advertSubscription = hasParams ? this._advertService.getSearchedAdverts() : this._advertService.getAllAdverts();\r\n\r\n        advertSubscription.subscribe(adverts => {\r\n          if (hasParams) {\r\n            this.adverts = this.filterAdverts(adverts, this.preFilledTerms.params);\r\n            this.loading = false;\r\n          } else {\r\n            this.adverts = adverts;\r\n            this.loading = false;\r\n          }\r\n        })\r\n      })\r\n\r\n  }\r\n\r\n  orderChoice(choice: string): void {\r\n    if (choice === 'Ascending') {\r\n      this.isAscending = true;\r\n      this.orderBy = 'Price | Low-to-High'\r\n      this.adverts.sort(this.compare('asc'));\r\n    }\r\n \r\n    if (choice === 'Descending') {\r\n      this.isAscending = false;\r\n      this.orderBy = 'Price | High-to-Low'\r\n      this.adverts.sort(this.compare('desc'));\r\n    }\r\n  }\r\n\r\n  compare(order: string): (a: IAdvert, b: IAdvert) => number {\r\n\r\n    return function innerSort(a: IAdvert, b: IAdvert): number {\r\n\r\n      const advertA: number = a.price;\r\n      const advertB: number = b.price;\r\n\r\n      let comparison: number = 0;\r\n      if (advertA > advertB) {\r\n        comparison = 1;\r\n      } else if (advertA < advertB) {\r\n        comparison = -1;\r\n      }\r\n      \r\n      return (order === 'desc') ? (comparison * -1) : comparison;\r\n    }\r\n  }\r\n\r\n  openSearchModal() {\r\n    this.matDialog.open(SearchDialogComponent);\r\n  }\r\n\r\n  filterAdverts(adverts, searchTerms): IAdvert[] {\r\n    /** @Note: If there was an API, this would be done there.  */\r\n\r\n    const hasKeyword = searchTerms.hasOwnProperty(\"keyword\");\r\n    const hasProvince = searchTerms.hasOwnProperty(\"province\");\r\n    const hasCity = searchTerms.hasOwnProperty(\"city\");\r\n    const hasMinPrice = searchTerms.hasOwnProperty(\"minPrice\");\r\n    const hasMaxPrice = searchTerms.hasOwnProperty(\"maxPrice\");\r\n    const { keyword } = searchTerms;\r\n\r\n    this.advertsToSend = [];\r\n\r\n    adverts.forEach(advert => {\r\n      \r\n      if (hasKeyword && ( !hasCity && !hasProvince && !hasMinPrice && !hasMaxPrice)) {\r\n       if (advert.details.includes(keyword)) this.advertsToSend.push(advert);\r\n      } else if (hasKeyword && ( hasCity || hasProvince || hasMinPrice || hasMaxPrice) ) {\r\n        if (advert.details.includes(keyword)) {\r\n          this.filterSomeMore(advert, searchTerms);\r\n        } else {\r\n          return;\r\n        }\r\n      } else {\r\n        this.filterSomeMore(advert, searchTerms);\r\n      }\r\n    });\r\n\r\n    return this.advertsToSend;\r\n  }\r\n\r\n  filterSomeMore(advert, searchTerms) {\r\n\r\n    const hasProvince = searchTerms.hasOwnProperty(\"province\");\r\n    const hasCity = searchTerms.hasOwnProperty(\"city\");\r\n    const hasMinPrice = searchTerms.hasOwnProperty(\"minPrice\");\r\n    const hasMaxPrice = searchTerms.hasOwnProperty(\"maxPrice\");\r\n\r\n    if (hasProvince && hasCity && hasMinPrice && hasMaxPrice) {\r\n\r\n      const { province, city, minPrice, maxPrice, keyword } = searchTerms;   \r\n\r\n      if (advert.province == province &&\r\n          advert.city == city && \r\n          advert.price >= minPrice &&\r\n          advert.price <= maxPrice) \r\n          {\r\n            this.advertsToSend.push(advert);\r\n          }\r\n      return;\r\n    }\r\n\r\n    if (hasProvince && hasCity && hasMinPrice) {\r\n      const { province, city, minPrice, keyword } = searchTerms;   \r\n\r\n      if (advert.province == province &&\r\n          advert.city == city && \r\n          advert.price >= minPrice) \r\n          {\r\n            this.advertsToSend.push(advert);\r\n          }\r\n      return;\r\n    }\r\n\r\n    if (hasProvince && hasCity) {\r\n      const { province, city, keyword } = searchTerms;   \r\n\r\n      if (advert.province == province &&\r\n          advert.city == city) \r\n          {\r\n            this.advertsToSend.push(advert);\r\n          }\r\n      return;\r\n    }\r\n\r\n    if (hasProvince && hasMaxPrice && !hasCity && !hasMinPrice) {\r\n      const { province, maxPrice } = searchTerms;   \r\n\r\n      if (advert.province == province &&\r\n          advert.price <= maxPrice) \r\n          {\r\n            this.advertsToSend.push(advert);\r\n          }\r\n      return;\r\n    }\r\n\r\n    if (hasProvince && hasMinPrice) {\r\n      const { province, minPrice, keyword } = searchTerms;   \r\n\r\n      if (advert.province == province &&\r\n          advert.price >= minPrice) \r\n          {\r\n            this.advertsToSend.push(advert);\r\n          }\r\n      return;\r\n    }\r\n\r\n    if (hasCity && hasMinPrice) {\r\n      const { city, minPrice, keyword } = searchTerms;   \r\n\r\n      if (advert.city == city &&\r\n          advert.price >= minPrice) \r\n          {\r\n            this.advertsToSend.push(advert);\r\n          }\r\n      return;\r\n    }\r\n\r\n    if (hasCity && hasMaxPrice) {\r\n      const { city, maxPrice, keyword } = searchTerms;   \r\n\r\n      if (advert.city == city &&\r\n          advert.price <= maxPrice) \r\n          {\r\n            this.advertsToSend.push(advert);\r\n          }\r\n      return;\r\n    }\r\n\r\n    if (hasCity && hasMaxPrice && hasMinPrice) {\r\n      const { city, maxPrice, minPrice, keyword } = searchTerms;   \r\n\r\n      if (advert.city == city &&\r\n          advert.price <= maxPrice &&\r\n          advert.price >= minPrice) \r\n          {\r\n            this.advertsToSend.push(advert);\r\n          }\r\n      return;\r\n    }\r\n\r\n    if (hasProvince && hasMaxPrice && hasMinPrice) {\r\n      const { province, maxPrice, minPrice, keyword } = searchTerms;   \r\n\r\n      if (advert.province == province &&\r\n          advert.price <= maxPrice &&\r\n          advert.price >= minPrice) \r\n          {\r\n            this.advertsToSend.push(advert);\r\n          }\r\n      return;\r\n    }\r\n\r\n    if (hasMaxPrice && hasMinPrice) {\r\n      const { maxPrice, minPrice, keyword } = searchTerms;   \r\n\r\n      if (advert.price <= maxPrice &&\r\n          advert.price >= minPrice) \r\n          {\r\n            this.advertsToSend.push(advert);\r\n          }\r\n      return;\r\n    }\r\n\r\n    if (hasProvince) {\r\n      const { province, keyword } = searchTerms;   \r\n\r\n      if (advert.province == province) \r\n          {\r\n            this.advertsToSend.push(advert);\r\n          }\r\n      return;\r\n    }\r\n\r\n    if (hasCity) {\r\n      const { city, keyword } = searchTerms;   \r\n\r\n      if (advert.city == city) \r\n          {\r\n            this.advertsToSend.push(advert);\r\n          }\r\n      return;\r\n    }\r\n\r\n    if (hasMaxPrice) {\r\n      const { maxPrice, keyword } = searchTerms;   \r\n\r\n      if (advert.price <= maxPrice) \r\n          {\r\n            this.advertsToSend.push(advert);\r\n          }\r\n      return;\r\n    }\r\n\r\n    if (hasMinPrice) {\r\n      const { minPrice, keyword } = searchTerms;   \r\n\r\n      if (advert.price >= minPrice) \r\n          {\r\n            this.advertsToSend.push(advert);\r\n          }\r\n      return;\r\n    }\r\n  }\r\n\r\n}","<div class=\"container\">\r\n  <div class=\"mt-4\">\r\n    <h1>All Adverts</h1>\r\n    \r\n    <app-search class=\"search-bar\"></app-search>\r\n\r\n    <div class=\"d-flex flex-column align-items-end\">\r\n      <div class=\"btn-group\">\r\n        <button class=\"btn btn-info search-button\" (click)=\"openSearchModal()\">Search</button>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-info dropdown-toggle sort-button\"\r\n          data-toggle=\"dropdown\"\r\n          aria-haspopup=\"true\"\r\n          aria-expanded=\"false\"\r\n        >\r\n          Order-by : {{ orderBy }}\r\n        </button>\r\n        <div class=\"dropdown-menu\">\r\n          <a\r\n            class=\"dropdown-item\"\r\n            (click)=\"orderChoice('Descending')\"\r\n            [ngClass]=\"{ active: isAscending === false }\"\r\n            >Price: High-to-Low</a\r\n          >\r\n          <a\r\n            class=\"dropdown-item\"\r\n            (click)=\"orderChoice('Ascending')\"\r\n            [ngClass]=\"{ active: isAscending === true }\"\r\n            >Price: Low-to-High</a\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    \r\n    <div class=\"no-adverts\" *ngIf=\"adverts.length == 0\">\r\n      <h2 *ngIf=\"loading\">Finding adverts...</h2>\r\n      <h2 *ngIf=\"!loading\">There aren't any adverts that meet your search criteria.</h2>\r\n    </div>\r\n\r\n    <div class=\"mb-3\" *ngIf=\"adverts && adverts.length > 0\">\r\n      <app-advert-card-large *ngFor=\"let advert of adverts\" [advert]=\"advert\"></app-advert-card-large>\r\n    </div>\r\n    \r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-contact-seller-dialog',\n  templateUrl: './contact-seller-dialog.component.html',\n  styleUrls: ['./contact-seller-dialog.component.scss']\n})\nexport class ContactSellerDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<ContactSellerDialogComponent>) { }\n\n  ngOnInit(): void {\n  }\n\n  closeDialog(event) {\n    if (event) this.dialogRef.close();\n  }\n\n}\n","<app-contact-form (closeDialogEvent)=\"closeDialog($event)\"></app-contact-form>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { AdvertService } from '@app/_services/advert.service';\n\n@Component({\n  selector: 'app-delete-dialog',\n  templateUrl: './delete-dialog.component.html',\n  styleUrls: ['./delete-dialog.component.scss']\n})\nexport class DeleteDialogComponent implements OnInit {\n\n  constructor(private advertService: AdvertService,\n              private router: Router,\n              public dialogRef: MatDialogRef<DeleteDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public advert: any) { }\n\n  ngOnInit(): void {\n  }\n\n  deleteAdvert(): void {\n    this.advertService\n    .deleteAdvert(this.advert.id)\n    .subscribe(() => {\n      this.router\n        .navigateByUrl(\"/RefreshComponent\", { skipLocationChange: true })\n        .then(() => {\n          this.router.navigate([\"/myadverts\"]);\n        });\n\n        this.dialogRef.close();\n    });\n  }\n\n}\n\n\n","<div class=\"container\">\n    <div class=\"titles\">\n        <h2>Are you sure you want to delete this advert?</h2>\n        <p>(This is permanent and not even Odin can bring it back!)</p>\n    </div>\n    \n    <div class=\"actions\">\n        <button class=\"btn btn-success btn-sm\" (click)=\"deleteAdvert()\">Yes, delete!</button>\n        <button class=\"btn btn-danger btn-sm\" mat-dialog-close >Actually, no!</button>\n    </div>\n</div>","import { Component, OnInit, Output } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-search-dialog',\n  templateUrl: './search-dialog.component.html',\n  styleUrls: ['./search-dialog.component.scss']\n})\nexport class SearchDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<SearchDialogComponent>) { }\n\n  ngOnInit(): void {\n  }\n\n  closeDialog(event) {\n    if (event) this.dialogRef.close();\n  }\n\n}\n","<app-search (closeDialogEvent)=\"closeDialog($event)\"></app-search>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-unsaved-changes-dialog',\n  templateUrl: './unsaved-changes-dialog.component.html',\n  styleUrls: ['./unsaved-changes-dialog.component.scss']\n})\nexport class UnsavedChangesDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<UnsavedChangesDialogComponent>) { }\n\n  ngOnInit(): void {\n    \n  }\n\n  choose(choice: boolean) {\n    this.dialogRef.close(choice);\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"headings\">\n        <h2>Are you sure you want to exit, you're going to lose your changes!</h2>\n        <p>(Think of how much effort you put into this, don't throw it away now!)</p>\n    </div>\n    \n    <div class=\"actions\">\n        <button class=\"btn btn-primary btn-sm\" mat-dialog-close (click)=\"choose(true)\">Yeah, I'm over it!</button>\n        <button class=\"btn btn-danger btn-sm\" mat-dialog-close (click)=\"choose(false)\">Actually no, I'll keep it!</button>\n    </div>\n</div>","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { IAdvert } from \"@app/_models/IAdvert\";\r\nimport { Subject, Subscription } from \"rxjs\";\r\nimport { Advert } from \"@app/_models/advert\";\r\nimport { debounceTime } from \"rxjs/operators\";\r\nimport { AdvertService } from \"@app/_services/advert.service\";\r\nimport { LocationService } from \"@app/_services/location.service\";\r\nimport { CustomValidators } from '@app/_helpers/customValidators';\r\nimport { AuthenticationService } from \"@app/_services\";\r\nimport { invalidInputs } from \"@app/shared/utils\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { UnsavedChangesDialogComponent } from \"../dialogs/unsaved-changes-dialog/unsaved-changes-dialog.component\";\r\n\r\n@Component({\r\n  selector: \"app-edit-advert\",\r\n  templateUrl: \"./edit-advert.component.html\",\r\n  styleUrls: [\"./edit-advert.component.scss\"],\r\n})\r\nexport class EditAdvertComponent implements OnInit, OnDestroy {\r\n  locations = ['Gauteng', 'North West', 'Northern Cape', 'Western Cape', 'Eastern Cape', 'Limpopo', 'Free State', 'Mpumalanga', 'KwaZulu-Natal'];\r\n  editAdvertForm: FormGroup;\r\n  sub: Subscription = new Subscription();\r\n  province: string;\r\n  cities: String[] = [];\r\n  id: number;\r\n  advert: IAdvert;\r\n  isConfirm: boolean = false;\r\n  validationMessage: {\r\n    [key: string]: string;\r\n  } = {};\r\n  alertMessage: string = \"\";\r\n  canExit$: Subject<boolean> = new Subject<boolean>(); \r\n\r\n  images = [\r\n    '../../../assets/image-1.jpg',\r\n    '../../../assets/image-2.jpg',\r\n    '../../../assets/image-3.jpg',\r\n    '../../../assets/image-4.jpg',\r\n    '../../../assets/image-5.jpg',\r\n    '../../../assets/image-6.jpg'\r\n  ];\r\n\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private _route: ActivatedRoute,\r\n    private _router: Router,\r\n    private _advertService: AdvertService,\r\n    private _locationService: LocationService,\r\n    private authenticationService: AuthenticationService,\r\n    private matDialog: MatDialog\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.editAdvertForm = this._formBuilder.group({\r\n      title: [\r\n        this.advert?.title,\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(10),\r\n          Validators.maxLength(100),\r\n          CustomValidators.multipleSpaceValidator\r\n        ],\r\n      ],\r\n      province: [this.advert?.province, [Validators.required]],\r\n      city: [this.advert?.city, [Validators.required]],\r\n      details: [\r\n        this.advert?.details,\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(10),\r\n          Validators.maxLength(1000),\r\n          CustomValidators.multipleSpaceValidator\r\n        ],\r\n      ],\r\n      price: [\r\n        this.advert?.price,\r\n        [Validators.required, Validators.min(10000), Validators.max(100000000), CustomValidators.noSpaceValidator, CustomValidators.onlyNumbers],\r\n      ],\r\n      bedrooms: [\r\n        this.advert?.bedrooms,\r\n        [Validators.required, Validators.min(0)]\r\n      ],\r\n      bathrooms: [\r\n        this.advert?.bathrooms,\r\n        [Validators.required, Validators.min(0)]\r\n      ],\r\n      parkingSpaces: [\r\n        this.advert?.parkingSpaces,\r\n        [Validators.required, Validators.min(0)]\r\n      ]\r\n    });\r\n\r\n    this.sub.add(\r\n      this.editAdvertForm.get(\"province\").valueChanges.subscribe((value) => {\r\n        this.province = value;\r\n        this.getCities();\r\n      })\r\n    );\r\n\r\n    // Get the advert ID from the route parameter\r\n    this.sub.add(\r\n      this._route.paramMap.subscribe((params) => {\r\n        this.id = +params.get('id');\r\n        this.getAdvert(this.id);\r\n      })\r\n    );\r\n\r\n    this.sub.add(\r\n      this.editAdvertForm.valueChanges\r\n        .pipe(debounceTime(600))\r\n        .subscribe(\r\n          (value) =>\r\n            (this.validationMessage = invalidInputs(this.editAdvertForm))\r\n        )\r\n    );\r\n  }\r\n\r\n  unsavedChanges(){\r\n   const dialogRef = this.matDialog.open(UnsavedChangesDialogComponent, {});\r\n\r\n   dialogRef.afterClosed()\r\n    .subscribe(choice => {\r\n      this.canExit$.next(choice);\r\n   })\r\n  }\r\n\r\n  getCities(): void {\r\n    this.cities = [];\r\n    this._locationService.list().subscribe(cities => {\r\n      /** @Note: Can replace this at some stage with a query param sent to the API */\r\n      cities.forEach(city => {\r\n        if (this.province === city.province) {\r\n          this.cities?.push(city.name);\r\n        }\r\n      })\r\n    });\r\n  }\r\n\r\n  getAdvert(id: number): void {\r\n    this._advertService\r\n    .getAdvert(id).subscribe((advert) => {\r\n      this.advert = advert;\r\n      this.displayAdvert();\r\n    });\r\n  }\r\n\r\n  displayAdvert(): void {\r\n\r\n    this.editAdvertForm.patchValue({\r\n      title: this.advert.title,\r\n      province: this.advert.province,\r\n      city: this.advert.city,\r\n      details: this.advert.details,\r\n      price: this.advert.price,\r\n      bedrooms: this.advert.bedrooms,\r\n      bathrooms: this.advert.bathrooms,\r\n      parkingSpaces: this.advert.parkingSpaces\r\n    });\r\n  }\r\n\r\n  createAdvert(): void {\r\n    /** @TODO: Hack for now - need to move this userId to the API at some stage */\r\n    const currentUser = this.authenticationService.currentUserValue;\r\n    const advertDetails = this.addBreaksToAdvertDetails(this.editAdvertForm.get(\"details\").value.trim());\r\n\r\n    const advert = new Advert(\r\n      this.editAdvertForm.get(\"title\").value.trim(),\r\n      this.editAdvertForm.get(\"province\").value.trim(),\r\n      this.editAdvertForm.get(\"city\").value.trim(),\r\n      this.editAdvertForm.get(\"price\").value.trim(),\r\n      advertDetails,\r\n      this.editAdvertForm.get(\"bedrooms\").value,\r\n      this.editAdvertForm.get(\"bathrooms\").value,\r\n      this.editAdvertForm.get(\"parkingSpaces\").value,\r\n      this.images,    \r\n      this.randomHeadlineImage(),\r\n      'Live',\r\n      currentUser.id,\r\n    );\r\n\r\n    this._advertService\r\n    .createAdvert(advert).subscribe({\r\n      next: () => this.afterSave(),\r\n    });\r\n  }\r\n\r\n  randomHeadlineImage(): string {\r\n    const randomNum = Math.floor(Math.random() * 5);\r\n    return this.images[randomNum];\r\n  }\r\n\r\n  updateAdvert(): void {\r\n    const updatedAdvert = {\r\n      ...this.advert,\r\n      ...this.editAdvertForm.value,\r\n    };\r\n\r\n    this._advertService\r\n    .updateAdvert(updatedAdvert).subscribe({\r\n      next: () => this.afterSave(),\r\n    });\r\n  }\r\n\r\n  onSave(): void {\r\n    if (this.editAdvertForm.valid) {\r\n      if (this.id == 0) {\r\n        this.createAdvert();\r\n        return;\r\n      }\r\n\r\n      if (this.id > 0) {\r\n        this.updateAdvert();\r\n        return;\r\n      }\r\n    } else {\r\n      this.alertMessage = \"Please ensure the form is valid.\";\r\n      this.editAdvertForm.markAllAsTouched();\r\n      this.validationMessage = invalidInputs(this.editAdvertForm);\r\n      setTimeout(() => {\r\n        this.alertMessage = \"\";\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  afterSave(): void {\r\n    this.editAdvertForm.markAsPristine();\r\n    this.editAdvertForm.markAsUntouched();\r\n    this._router.navigate([\"/myadverts\"]);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.sub) this.sub.unsubscribe();\r\n  }\r\n\r\n  addBreaksToAdvertDetails(advertDetails: string): string {\r\n    const arr = advertDetails.split(/[\\s][\\s]/);\r\n\r\n    for (let i = 1; i < arr.length; i+=2) {\r\n      arr.splice(i, 0, '<br><br>')\r\n    }\r\n\r\n    const str = arr.join(' ');\r\n\r\n    return str;\r\n  }\r\n}","<div class=\"container\">\r\n \r\n  <div id=\"login-row\" class=\"row justify-content-center align-items-center\">\r\n    <div id=\"login-column\" class=\"col-md-6\">\r\n      <div id=\"login-box\" class=\"col-md-12\">\r\n        <form\r\n          id=\"login-form\"\r\n          class=\"form\"\r\n          novalidate\r\n          [formGroup]=\"editAdvertForm\"\r\n        >\r\n  \r\n          <h1 class=\"text-center my-4 h3\">{{ id > 0 ? 'Edit Advert' : 'Create New Advert' }}</h1>\r\n          <div class=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              id=\"title\"\r\n              class=\"form-control\"\r\n              formControlName=\"title\"\r\n              placeholder=\"Title\"\r\n              autocomplete=\"off\"\r\n              [ngClass]=\"{\r\n                'is-invalid': validationMessage && validationMessage.title\r\n              }\"\r\n            />\r\n            <span class=\"invalid-feedback\">\r\n              <span>\r\n                {{ validationMessage.title }}\r\n              </span>\r\n            </span>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <select\r\n              class=\"custom-select\"\r\n              formControlName=\"province\"\r\n              [ngClass]=\"{\r\n                'is-invalid': validationMessage && validationMessage.province\r\n              }\"\r\n            >\r\n              <option value=\"\" disabled>Choose your province</option>\r\n              <option *ngFor=\"let location of locations\"> {{ location }}</option>\r\n            </select>\r\n            <span class=\"invalid-feedback\">\r\n              {{ validationMessage.province }}\r\n            </span>\r\n          </div>\r\n\r\n    \r\n          <div class=\"form-group\">\r\n            <select\r\n              class=\"custom-select\"\r\n              formControlName=\"city\"\r\n              [ngClass]=\"{\r\n                'is-invalid': validationMessage && validationMessage.city\r\n              }\"\r\n              *ngIf=\"cities.length > 0\"\r\n            >\r\n              <option value=\"\" disabled>Choose your city</option>\r\n              <option *ngFor=\"let city of cities\"> {{ city }}</option>\r\n            </select>\r\n            <span class=\"invalid-feedback\">\r\n              <span> {{ validationMessage.city }} </span>\r\n            </span>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <textarea\r\n              class=\"form-control\"\r\n              id=\"exampleFormControlTextarea1\"\r\n              placeholder=\"Advert Details\"\r\n              rows=\"3\"\r\n              formControlName=\"details\"\r\n              [ngClass]=\"{\r\n                'is-invalid':\r\n                  validationMessage && validationMessage.details\r\n              }\"\r\n            ></textarea>\r\n            <span class=\"invalid-feedback\">\r\n              <span> {{ validationMessage.details }} </span>\r\n            </span>\r\n          </div>\r\n\r\n          <div class=\"form-group-container\">\r\n            <div class=\"form-group\">\r\n              <input type=\"number\" \r\n                     name=\"bedrooms\"    \r\n                     formControlName=\"bedrooms\" \r\n                     class=\"form-control\" \r\n                     autocomplete=\"off\" \r\n                     id=\"bedrooms\" \r\n                     placeholder=\"Bedrooms\"\r\n                     min=\"0\"\r\n                     [ngClass]=\"{\r\n                      'is-invalid': validationMessage && validationMessage.bedrooms\r\n                    }\" />\r\n              <span class=\"invalid-feedback\">\r\n                <span>{{ validationMessage.bedrooms }}</span>\r\n              </span>\r\n            </div>\r\n          \r\n            <div class=\"form-group\">\r\n              <input type=\"number\" \r\n                     name=\"bathrooms\" \r\n                     formControlName=\"bathrooms\" \r\n                     class=\"form-control\" \r\n                     autocomplete=\"off\" \r\n                     id=\"bathrooms\" \r\n                     min=\"0\"\r\n                     placeholder=\"Bathrooms\"\r\n                     [ngClass]=\"{\r\n                      'is-invalid': validationMessage && validationMessage.bathrooms\r\n                    }\"/>\r\n              <span class=\"invalid-feedback\">\r\n                <span>{{ validationMessage.bathrooms }}</span>\r\n              </span>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <input type=\"number\" \r\n                     name=\"parkingSpaces\" \r\n                     formControlName=\"parkingSpaces\" \r\n                     class=\"form-control\" \r\n                     autocomplete=\"off\" \r\n                     id=\"parkingSpaces\" \r\n                     min=\"0\"\r\n                     placeholder=\"Parkings\"\r\n                     [ngClass]=\"{\r\n                      'is-invalid': validationMessage && validationMessage.parkingSpaces\r\n                    }\"/>\r\n              <span class=\"invalid-feedback\">\r\n                <span>{{ validationMessage.parkingSpaces }}</span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"price\"\r\n              id=\"price\"\r\n              formControlName=\"price\"\r\n              class=\"form-control\"\r\n              placeholder=\"Price\"\r\n              autocomplete=\"off\"\r\n              [ngClass]=\"{\r\n                'is-invalid': validationMessage && validationMessage.price\r\n              }\"\r\n            />\r\n            <span class=\"invalid-feedback\">\r\n              <span>{{ validationMessage.price }}</span>\r\n            </span>\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            name=\"submit\"\r\n            class=\"btn btn-outline-success btn-lg btn-block\"\r\n            (click)=\"onSave()\"\r\n          >\r\n            Publish {{ id > 0 ? 'Changes' : 'Advert' }}\r\n          </button>\r\n          <a\r\n            class=\"btn btn-outline-danger btn-lg btn-block\"\r\n            routerLink=\"/myadverts\"\r\n          >\r\n            Cancel\r\n          </a>\r\n\r\n          <div\r\n            class=\"alert alert-warning text-center mt-3\"\r\n            *ngIf=\"alertMessage && alertMessage.length > 0\"\r\n          >\r\n            <div>{{ alertMessage }}</div>\r\n            <div class=\"mt-2\">\r\n            </div>\r\n          </div>\r\n\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { IAdvert } from '@app/_models/IAdvert';\nimport { AuthenticationService, UserService } from '@app/_services';\nimport { AdvertService } from '@app/_services/advert.service';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-favourite-adverts',\n  templateUrl: './favourite-adverts.component.html',\n  styleUrls: ['./favourite-adverts.component.scss']\n})\nexport class FavouriteAdvertsComponent implements OnInit {\n\n  adverts: IAdvert[] = [];\n  isLoading = true;\n\n  constructor(private authService: AuthenticationService,\n              private advertService: AdvertService,\n              private userService: UserService) { }\n\n  ngOnInit(): void {\n\n    const authUserId = this.authService.currentUserValue.id;\n\n    this.userService.getUser(authUserId)\n      .subscribe(user => {\n\n        this.advertService.getAllAdverts()\n          .pipe(\n            map(adverts => {\n              const filtered = adverts.filter(ad => {\n                if (user.favourites.includes(ad.id)) {\n                  return ad;\n                }\n              })\n\n              return filtered;\n            })\n          )\n          .subscribe(ads => {\n            this.adverts = ads;\n            this.isLoading = false;\n          });\n      })\n  }\n\n  removeUnfavouritedAd(id) {\n    const adToRemove = this.adverts.findIndex(advert => advert.id === id);\n    this.adverts.splice(adToRemove, 1);\n  }\n\n}\n","<div  *ngIf=\"adverts\" class=\"container\">\n    <h1>Your favourite adverts</h1>\n\n    <div class=\"no-adverts\" *ngIf=\"adverts.length == 0\">\n      <h2 *ngIf=\"isLoading\">Finding your favourtites...</h2> \n      <h2 *ngIf=\"!isLoading\">You currently have no favourites.</h2>\n      <button *ngIf=\"!isLoading\" class=\"btn btn-info\" [routerLink]=\"['/alladverts']\">Browse adverts</button>\n    </div>\n\n    <div class=\"adverts-container\">\n        <div class=\"mb-3\" *ngIf=\"adverts && adverts.length > 0\">\n            <div *ngFor=\"let advert of adverts\">\n              <app-advert-card-large [advert]=\"advert\" (advertIdEvent)=\"removeUnfavouritedAd($event)\"></app-advert-card-large>\n            </div>\n          </div>\n    </div>\n</div>\n","export * from './myadverts.component';","import { Component, OnInit } from \"@angular/core\";\r\n\r\nimport { AuthenticationService } from \"@app/_services\";\r\n\r\nimport { IAdvert } from \"@app/_models/IAdvert\";\r\nimport { AdvertService } from \"@app/_services/advert.service\";\r\nimport { IUser } from \"@app/_models/IUser\";\r\n\r\n@Component({\r\n  templateUrl: \"myadverts.component.html\",\r\n  styleUrls: [\"./myadverts.component.scss\"],\r\n})\r\nexport class MyAdvertsComponent implements OnInit {\r\n  loading: boolean = false;\r\n  adverts: IAdvert[] = [];\r\n  currentUser: IUser;\r\n\r\n  constructor(private _advertService: AdvertService,\r\n              private _authService: AuthenticationService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.loading = true;\r\n    this.currentUser = this._authService.currentUserValue;\r\n    this._advertService.getUserAdverts(this.currentUser.id)\r\n    .subscribe((adverts) => {\r\n      this.loading = false;\r\n      this.adverts = adverts\r\n    });\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"mt-4\">\r\n    <h1>My Adverts</h1>\r\n\r\n    <div class=\"no-adverts\" *ngIf=\"adverts.length == 0\">\r\n      <h2 *ngIf=\"loading\">Finding your adverts...</h2>\r\n      <h2 *ngIf=\"!loading\">You currently have no adverts listed.</h2>\r\n      <button *ngIf=\"adverts.length == 0\" class=\"btn btn-info\" [routerLink]=\"['/editadvert', 0]\">Create New Advert</button>\r\n    </div>\r\n    \r\n    <div class=\"mb-3\" *ngIf=\"adverts\">\r\n      <app-advert-card-large *ngFor=\"let advert of adverts\" [advert]=\"advert\"></app-advert-card-large>\r\n      <button *ngIf=\"adverts.length > 0\" class=\"btn btn-info\" [routerLink]=\"['/editadvert', 0]\">Create New Advert</button>\r\n    </div>\r\n    \r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { EditAdvertComponent } from './edit-advert/edit-advert.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UnsavedGuard implements CanActivate, CanDeactivate<unknown> {\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    return true;\r\n  }\r\n  canDeactivate(\r\n    component: EditAdvertComponent,\r\n    currentRoute: ActivatedRouteSnapshot,\r\n    currentState: RouterStateSnapshot,\r\n    nextState?: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n      if (component.editAdvertForm.dirty) {\r\n        component.unsavedChanges();\r\n        return component.canExit$;\r\n      }\r\n      return true;\r\n  }\r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MyAdvertsComponent } from './adverts/myadverts/myadverts.component';\r\nimport { LoginComponent } from './authentication/login/login.component';\r\nimport { NotAuthGuard } from './_helpers';\r\nimport { AllAdvertsComponent } from './adverts/all-adverts/all-adverts.component';\r\nimport { RegistrationComponent } from './authentication/registration/registration.component';\r\nimport { AuthGuard } from './authentication/auth.guard';\r\nimport { EditAdvertComponent } from './adverts/edit-advert/edit-advert.component';\r\nimport { UnsavedGuard } from './adverts/unsaved.guard';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AdvertDetailComponent } from './adverts/advert-detail/advert-detail.component';\r\nimport { MyAccountComponent } from './accounts/my-account/my-account.component';\r\nimport { FavouriteAdvertsComponent } from './adverts/favourite-adverts/favourite-adverts.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: HomeComponent },\r\n    { path: 'login', component: LoginComponent, canActivate: [AuthGuard] },\r\n    { path: 'home',  component: HomeComponent },\r\n    { path: 'registration', component: RegistrationComponent, canActivate: [AuthGuard] },\r\n    { path: 'myadverts', component: MyAdvertsComponent, canActivate: [NotAuthGuard] },\r\n    { path: 'editadvert/:id', component: EditAdvertComponent, canActivate: [NotAuthGuard], canDeactivate: [UnsavedGuard] },\r\n    { path: 'alladverts', component: AllAdvertsComponent },\r\n    { path: 'advertdetail/:id', component: AdvertDetailComponent },\r\n    { path: 'myaccount', component: MyAccountComponent, canActivate: [ NotAuthGuard ] },\r\n    { path: 'favourites', component: FavouriteAdvertsComponent, canActivate: [ NotAuthGuard ] },\r\n\r\n    // otherwise redirect to home\r\n    { path: '**', redirectTo: '' }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n\r\n\r\n","import { AfterContentChecked, Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({ selector: 'app', templateUrl: 'app.component.html' })\r\nexport class AppComponent implements AfterContentChecked {\r\n\r\n    class: string;\r\n\r\n    constructor(private router: Router) {}\r\n\r\n    ngAfterContentChecked(): void {\r\n        const url = this.router.url;\r\n\r\n        if (url === \"/\" || url === \"/home\") {\r\n            return;\r\n        } else {\r\n            this.class = \"mt-auto\"\r\n            return;\r\n        }\r\n    }\r\n}","<!-- nav -->\r\n<app-header></app-header>\r\n\r\n<!-- main app container -->\r\n<router-outlet></router-outlet>\r\n\r\n\r\n<!-- credits -->\r\n<app-footer [ngClass]=\"class\"></app-footer>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\n// used to create fake backend\r\nimport { fakeBackendProvider } from './_helpers';\r\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\r\nimport { MyInMemoryService } from './_mockServices/my-in-memory.service';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { JwtInterceptor, ErrorInterceptor } from './_helpers';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { AuthenticationModule } from './authentication/authentication.module';\r\nimport { AdvertsModule } from './adverts/adverts.module';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AccountsModule } from './accounts/accounts.module';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { NgMaterialModule } from './shared/ng-material/ng-material.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n@NgModule({\r\n    imports: [\r\n        AppRoutingModule,\r\n        BrowserModule,\r\n        ReactiveFormsModule,\r\n        AuthenticationModule,\r\n        AdvertsModule,\r\n        AccountsModule,\r\n        HttpClientModule,\r\n        HttpClientInMemoryWebApiModule.forRoot(MyInMemoryService),\r\n        SharedModule,\r\n        NgMaterialModule,\r\n        BrowserAnimationsModule\r\n    ],\r\n    declarations: [\r\n        AppComponent,\r\n        FooterComponent,\r\n        HeaderComponent,\r\n        HomeComponent\r\n    ],\r\n    providers: [\r\n        { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n        { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n\r\n        // // provider used to create fake backend\r\n        fakeBackendProvider\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { AuthenticationService } from \"@app/_services\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private _authService: AuthenticationService,\r\n              private _router: Router) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot) {\r\n    \r\n      const currentUser = this._authService.currentUserValue;\r\n      if (currentUser) {\r\n        this._router.navigate([\"/myadverts\"]);\r\n        return false;\r\n      }\r\n      return true;\r\n  }\r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AppRoutingModule } from '@app/app-routing.module';\r\nimport { LoginComponent } from './login';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent, RegistrationComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    AppRoutingModule\r\n  ]\r\n})\r\nexport class AuthenticationModule { }\r\n","export * from './login.component';","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { debounceTime, first } from \"rxjs/operators\";\r\nimport { AuthenticationService } from \"@app/_services\";\r\nimport { CustomValidators } from \"@app/_helpers/customValidators\";\r\nimport { invalidInputs } from \"@app/shared/utils\";\r\n\r\n@Component({\r\n  templateUrl: \"login.component.html\",\r\n  styleUrls: [\"./login.component.scss\"],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  error: string = \"\";\r\n  message: { [key: string]: string } = {};\r\n  fieldTextType: boolean = false;\r\n\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private _route: ActivatedRoute,\r\n    private _router: Router,\r\n    private _authenticationService: AuthenticationService\r\n  ) {\r\n    // redirect to home if already logged in\r\n    if (this._authenticationService.currentUserValue) {\r\n      this._router.navigate([\"/\"]);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this._formBuilder.group({\r\n      email: [\r\n        \"\",\r\n        [Validators.required,\r\n        Validators.email,\r\n        Validators.minLength(6),\r\n        Validators.maxLength(100),\r\n        CustomValidators.noSpaceValidator\r\n    ],\r\n      ],\r\n      password: [\"\", Validators.required],\r\n    });\r\n\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this._route.snapshot.queryParams[\"returnUrl\"] || \"/\";\r\n\r\n    this.loginForm.valueChanges\r\n      .pipe(debounceTime(600))\r\n      .subscribe(value => {\r\n        this.message = invalidInputs(this.loginForm)\r\n      }\r\n      );\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this._authenticationService\r\n      .login(this.f.email.value, this.f.password.value)\r\n      .pipe(first())\r\n      .subscribe(\r\n        (data) => {\r\n          this._router.navigate([\"myadverts\"]);\r\n        },\r\n        (error) => {\r\n          this.error = error;\r\n          setTimeout (() => {\r\n            this.error = '';\r\n         }, 1800);\r\n          this.loading = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  toggleFieldTextType(): void {\r\n    this.fieldTextType = !this.fieldTextType;\r\n  }\r\n}\r\n","<div class=\"col-md-6 offset-md-3 mt-5\">\r\n  <h4 class=\"text-center\">Login</h4>\r\n\r\n  <div>\r\n    <div class=\"card-body\">\r\n      \r\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"form-group\">\r\n          <input\r\n            type=\"email\"\r\n            formControlName=\"email\"\r\n            class=\"form-control\"\r\n            [ngClass]=\"{ 'is-invalid': message && message.email }\"\r\n            placeholder=\"Email\"\r\n          />\r\n          <div class=\"invalid-feedback\">\r\n            <div>{{ message.email }}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <div class=\"input-group\">\r\n            <input\r\n              [type]=\"fieldTextType ? 'text' : 'password'\"\r\n              formControlName=\"password\"\r\n              class=\"form-control\"\r\n              [ngClass]=\"{ 'is-invalid': message && message.password }\"\r\n              placeholder=\"Password\"\r\n            />\r\n            <div class=\"input-group-append\">\r\n              <span class=\"input-group-text\">\r\n                <a\r\n                  ><i\r\n                    (click)=\"toggleFieldTextType()\"\r\n                    class=\"fa\"\r\n                    [ngClass]=\"{\r\n                      'fa-eye-slash': !fieldTextType,\r\n                      'fa-eye': fieldTextType\r\n                    }\"\r\n                  ></i\r\n                ></a>\r\n              </span>\r\n            </div>\r\n            <div class=\"invalid-feedback\">\r\n              <div>{{ message.password }}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <button [disabled]=\"loading\" class=\"btn btn-secondary\">\r\n          <span\r\n            *ngIf=\"loading\"\r\n            class=\"spinner-border spinner-border-sm mr-1\"\r\n          ></span>\r\n          Login\r\n        </button>\r\n\r\n        <div *ngIf=\"error\" class=\"alert alert-danger mt-3\">\r\n          {{ error }}\r\n        </div>\r\n      </form>\r\n\r\n      <div class=\"mt-3\">\r\n        <a class=\"text-dark\" routerLink=\"/registration\">Register Instead</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  Router,\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n} from \"@angular/router\";\r\n\r\nimport { AuthenticationService } from \"@app/_services\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class NotAuthGuard implements CanActivate {\r\n  constructor(\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService\r\n  ) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    const currentUser = this.authenticationService.currentUserValue;\r\n    if (currentUser) {\r\n      // logged in so return true\r\n      return true;\r\n    }\r\n    \r\n    if (route.routeConfig.path === 'editadvert/:id' || route.routeConfig.path === 'editadvert') {\r\n      this.router.navigate([\"/registration\"]);\r\n      return false;\r\n    }\r\n\r\n    // not logged in so redirect to login page with the return url\r\n    this.router.navigate([\"/login\"]);\r\n    return false;\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { CustomValidators } from \"@app/_helpers/customValidators\";\r\nimport { User } from \"@app/_models/user\";\r\nimport { AuthenticationService, UserService } from \"@app/_services\";\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime } from \"rxjs/operators\";\r\nimport { invalidInputs } from \"@app/shared/utils\";\r\n\r\n@Component({\r\n  templateUrl: \"./registration.component.html\",\r\n  styleUrls: [\"./registration.component.scss\"],\r\n})\r\nexport class RegistrationComponent implements OnInit, OnDestroy {\r\n  registrationForm: FormGroup;\r\n  message: { [key: string]: string } = {};\r\n  invalidSubmit: boolean = false;\r\n  loading: boolean = false;\r\n  error: string = \"\";\r\n  passRequirements: boolean = false;\r\n  fieldTextType: boolean = false;\r\n  sub: Subscription;\r\n\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private _userService: UserService,\r\n    private _router: Router,\r\n    private _authenticationService: AuthenticationService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.registrationForm = this._formBuilder.group({\r\n      firstName: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(1),\r\n          Validators.maxLength(100),\r\n          CustomValidators.multipleSpaceValidator,\r\n          CustomValidators.noSpecialChars,\r\n          CustomValidators.noNumbers,\r\n        ],\r\n      ],\r\n      lastName: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(100),\r\n          CustomValidators.multipleSpaceValidator,\r\n          CustomValidators.noSpecialChars,\r\n          CustomValidators.noNumbers,\r\n        ],\r\n      ],\r\n      email: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.email,\r\n          Validators.minLength(6),\r\n          Validators.maxLength(100),\r\n          CustomValidators.noSpaceValidator,\r\n        ],\r\n      ],\r\n      contactNumber: [\r\n        \"\", \r\n        [\r\n          Validators.required,\r\n          CustomValidators.onlyNumbers,\r\n        ]\r\n      ],\r\n      passwords: this._formBuilder.group(\r\n        {\r\n          password: [\r\n            \"\",\r\n            [\r\n              Validators.required,\r\n              Validators.minLength(8),\r\n              Validators.maxLength(100),\r\n              CustomValidators.noSpaceValidator,\r\n              CustomValidators.passwordNumber,\r\n              CustomValidators.passwordUpperCase,\r\n            ],\r\n          ],\r\n          confirmPass: [\"\", Validators.required],\r\n        },\r\n        { validator: CustomValidators.passwordCompare }\r\n      ),\r\n    });\r\n\r\n    this.sub = this.registrationForm.valueChanges\r\n      .pipe(debounceTime(600))\r\n      .subscribe(\r\n        (value) => (this.message = invalidInputs(this.registrationForm))\r\n      );\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.loading = true;\r\n\r\n    if (!this.registrationForm.valid) {\r\n      this.invalidSubmit = true;\r\n      setTimeout (() => {\r\n        this.invalidSubmit = false;\r\n     }, 1800);\r\n      this.loading = false;\r\n      return;\r\n    }\r\n\r\n    const user = new User(\r\n      this.registrationForm.get(\"firstName\").value.trim(),\r\n      this.registrationForm.get(\"lastName\").value.trim(),\r\n      this.registrationForm.get(\"email\").value.trim(),\r\n      this.registrationForm.get(\"contactNumber\").value.trim(),\r\n      this.registrationForm.get(\"passwords.password\").value.trim(),\r\n      this.registrationForm.get(\"passwords.confirmPass\").value.trim(),\r\n    );\r\n\r\n    user.favourites = [];\r\n\r\n    this._userService\r\n      .saveUser(user)\r\n      .subscribe();\r\n\r\n    setTimeout (() => {\r\n      this._authenticationService\r\n      .login(user.email, user.password) \r\n      .subscribe(\r\n        (data) => {\r\n          this._router.navigate([\"myadverts\"]);\r\n          this.loading = false;\r\n        },\r\n        (error) => {\r\n          this.error = error;\r\n          this.loading = false;\r\n        }\r\n      );\r\n   }, 3000);\r\n  }\r\n\r\n  showPassRequirements(): void {\r\n      this.passRequirements = !this.passRequirements;\r\n  }\r\n\r\n  toggleFieldTextType(): void {\r\n    this.fieldTextType = !this.fieldTextType;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.sub) this.sub.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"col-md-6 offset-md-3 mt-5\">\r\n  <h4 class=\"text-center\">Register</h4>\r\n\r\n  <div>\r\n    <div class=\"card-body\">\r\n      <form [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"firstName\"\r\n            formControlName=\"firstName\"\r\n            class=\"form-control\"\r\n            placeholder=\"First Name\"\r\n            autocomplete=\"off\"\r\n            [ngClass]=\"{ 'is-invalid': message && message.firstName }\"\r\n          />\r\n          <span class=\"invalid-feedback\">\r\n            <span>\r\n              {{ message.firstName }}\r\n            </span>\r\n          </span>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"lastName\"\r\n            formControlName=\"lastName\"\r\n            class=\"form-control\"\r\n            placeholder=\"Last Name\"\r\n            autocomplete=\"off\"\r\n            [ngClass]=\"{ 'is-invalid': message && message.lastName }\"\r\n          />\r\n          <span class=\"invalid-feedback\">\r\n            <span>\r\n              {{ message.lastName }}\r\n            </span>\r\n          </span>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            formControlName=\"email\"\r\n            class=\"form-control\"\r\n            placeholder=\"Email\"\r\n            autocomplete=\"off\"\r\n            [ngClass]=\"{ 'is-invalid': message && message.email }\"\r\n          />\r\n          <span class=\"invalid-feedback\">\r\n            <span>\r\n              {{ message.email }}\r\n            </span>\r\n          </span>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"contactNumber\"\r\n            formControlName=\"contactNumber\"\r\n            class=\"form-control\"\r\n            placeholder=\"Contact Number\"\r\n            autocomplete=\"off\"\r\n            [ngClass]=\"{ 'is-invalid': message && message.contactNumber }\"\r\n          />\r\n          <span class=\"invalid-feedback\">\r\n            <span>\r\n              {{ message.contactNumber }}\r\n            </span>\r\n          </span>\r\n        </div>\r\n\r\n        <div formGroupName=\"passwords\">\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <input\r\n                [type]=\"fieldTextType ? 'text' : 'password'\"\r\n                name=\"password\"\r\n                formControlName=\"password\"\r\n                class=\"form-control\"\r\n                placeholder=\"Password\"\r\n                autocomplete=\"off\"\r\n                [ngClass]=\"{ 'is-invalid': message && message.password }\"\r\n              />\r\n              <div class=\"input-group-append\">\r\n                <span class=\"input-group-text\">\r\n                  <a\r\n                    ><i\r\n                      (click)=\"toggleFieldTextType()\"\r\n                      class=\"fa\"\r\n                      [ngClass]=\"{\r\n                        'fa-eye-slash': !fieldTextType,\r\n                        'fa-eye': fieldTextType\r\n                      }\"\r\n                    ></i\r\n                  ></a>\r\n                </span>\r\n              </div>\r\n              <span class=\"invalid-feedback\">\r\n                <span>\r\n                  {{ message.password }}\r\n                </span>\r\n              </span>\r\n            </div>\r\n\r\n            <a class=\"form-text text-muted\" (click)=\"showPassRequirements()\"\r\n              ><small>\r\n                {{ passRequirements ? \"Hide\" : \"View\" }} password requirements.\r\n              </small></a\r\n            >\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n              <input\r\n                [type]=\"fieldTextType ? 'text' : 'password'\"\r\n                name=\"confirmPass\"\r\n                formControlName=\"confirmPass\"\r\n                class=\"form-control\"\r\n                placeholder=\"Confirm Password\"\r\n                autocomplete=\"off\"\r\n                [ngClass]=\"{ 'is-invalid': message && message.passwords }\"\r\n              />\r\n              <div class=\"input-group-append\">\r\n                <span class=\"input-group-text\">\r\n                  <a\r\n                    ><i\r\n                      (click)=\"toggleFieldTextType()\"\r\n                      class=\"fa\"\r\n                      [ngClass]=\"{\r\n                        'fa-eye-slash': !fieldTextType,\r\n                        'fa-eye': fieldTextType\r\n                      }\"\r\n                    ></i\r\n                  ></a>\r\n                </span>\r\n              </div>\r\n              <span class=\"invalid-feedback\">\r\n                <span>\r\n                  {{ message.passwords }}\r\n                </span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" name=\"submit\" class=\"btn btn-secondary\">\r\n          <span\r\n            *ngIf=\"loading\"\r\n            class=\"spinner-border spinner-border-sm mr-1\"\r\n          ></span>\r\n          {{ loading ? \"Registering\" : \"Register\" }}\r\n        </button>\r\n\r\n        <div class=\"alert alert-danger mt-3\" *ngIf=\"invalidSubmit\">\r\n          Please ensure all fields are completed correctly.\r\n        </div>\r\n      </form>\r\n\r\n      <div class=\"mt-3\">\r\n        <a class=\"mt-3 text-dark\" routerLink=\"/login\">Login Instead</a>\r\n      </div>\r\n\r\n      <div class=\"alert alert-info mt-4\" *ngIf=\"passRequirements\">\r\n        <ul>\r\n          <li>\r\n            <small\r\n              >Your password needs to be between 8 and 100 characters in\r\n              length.</small\r\n            >\r\n          </li>\r\n          <li><small>Your password cannot contain spaces.</small></li>\r\n          <li>\r\n            <small>Your password must contain at least one number.</small>\r\n          </li>\r\n          <li>\r\n            <small\r\n              >Your password must contain at leat one uppercase\r\n              character.</small\r\n            >\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<footer class=\"bg-dark text-white py-2 text-center\"><small>\r\n  All Rights Reserved. Copyright. 2020. \r\n</small>\r\n</footer>","import { AfterContentChecked, Component } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { Router } from \"@angular/router\";\r\nimport { MobileNavComponent } from \"@app/shared/mobile-nav/mobile-nav.component\";\r\nimport { User } from \"@app/_models/user\";\r\nimport { AuthenticationService } from \"@app/_services\";\r\n\r\n@Component({\r\n  selector: \"app-header\",\r\n  templateUrl: \"./header.component.html\",\r\n  styleUrls: [\"./header.component.scss\"],\r\n})\r\nexport class HeaderComponent implements AfterContentChecked {\r\n  currentUser: User;  \r\n\r\n  home: boolean;\r\n\r\n  constructor(\r\n    private _router: Router,\r\n    private _authenticationService: AuthenticationService,\r\n    private router: Router,\r\n    private matDialog: MatDialog\r\n  ) {\r\n    this._authenticationService.currentUser.subscribe(\r\n      (x) => (this.currentUser = x)\r\n    );\r\n\r\n\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    if (this.router.url == \"/\" || this.router.url == \"/home\") {\r\n      this.home = true;\r\n    } else {\r\n      this.home = false;\r\n    }\r\n  }\r\n\r\n  openMobileNavModal() {\r\n    this.matDialog.open(MobileNavComponent, {\r\n      data: this.currentUser\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    this._authenticationService.logout();\r\n    this._router.navigate([\"/login\"]);\r\n  }\r\n\r\n}\r\n","<nav *ngIf=\"!home\" class=\"navbar navbar-expand navbar-light bg-light text-primary\">\r\n  <img src=\"../../assets/logo-small.png\" routerLink=\"/home\" alt=\"\">\r\n  <mat-icon class=\"hamburger\" (click)=\"openMobileNavModal()\">view_headline</mat-icon>\r\n  <div class=\"navbar-nav\">\r\n      <a class=\"nav-item nav-link text-dark\" routerLink=\"/home\">Home</a>\r\n      <a class=\"nav-item nav-link text-dark\" routerLink=\"/alladverts\">Homes for sale</a>\r\n      <a class=\"nav-item nav-link text-dark\" routerLink=\"/myadverts\" *ngIf=\"currentUser\">My Ads</a>\r\n      <a class=\"nav-item nav-link text-dark\" routerLink=\"/myaccount\" *ngIf=\"currentUser\">My Profile</a>\r\n      <a class=\"nav-item nav-link text-dark\" [routerLink]=\"['/editadvert', 0]\" *ngIf=\"currentUser\">Create Ad</a>\r\n      <a class=\"nav-item nav-link text-dark\" routerLink=\"/favourites\" *ngIf=\"currentUser\">Favourites</a>\r\n      <a class=\"nav-item nav-link text-dark\" routerLink=\"/login\" *ngIf=\"!currentUser\">Login</a>\r\n      <a class=\"nav-item nav-link text-dark\" routerLink=\"/registration\" *ngIf=\"!currentUser\">Register</a>\r\n      <a class=\"nav-item nav-link text-dark\" (click)=\"logout()\" *ngIf=\"currentUser\">Logout</a>\r\n  </div>\r\n</nav>\r\n\r\n<!-- @TODO: Implement this when admin code is done -->\r\n<!-- <nav class=\"navbar navbar-expand navbar-light bg-light\" *ngIf=\"currentUser\">\r\n  <div class=\"navbar-nav\">\r\n      <a class=\"nav-item nav-link text-dark\" routerLink=\"/home\">User Management</a>\r\n      <a class=\"nav-item nav-link text-dark\" routerLink=\"/\">Advert Management</a>\r\n  </div>\r\n</nav> -->","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { MobileNavComponent } from '@app/shared/mobile-nav/mobile-nav.component';\r\nimport { IUser } from '@app/_models/IUser';\r\nimport { AuthenticationService } from '@app/_services';\r\nimport { AdvertService } from '@app/_services/advert.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  currentUser: IUser;\r\n\r\n  constructor(private authService: AuthenticationService,\r\n              private router: Router,\r\n              private matDialog: MatDialog) {\r\n    this.authService.currentUser.subscribe(\r\n      (x) => (this.currentUser = x)\r\n    );\r\n   }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n    this.router.navigate([\"/login\"]);\r\n  }\r\n\r\n  openMobileNavModal() {\r\n    this.matDialog.open(MobileNavComponent, {\r\n      data: this.currentUser\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"hero-container\">\r\n  <div class=\"overlay\">\r\n    <nav class=\"navbar navbar-expand navbar-light\">\r\n      <img src=\"../../assets/logo-small.png\" routerLink=\"/home\" alt=\"\">\r\n      <mat-icon class=\"hamburger\" (click)=\"openMobileNavModal()\">view_headline</mat-icon>\r\n      <div class=\"navbar-nav\">\r\n          <a class=\"nav-item nav-link\" routerLink=\"/home\">Home</a>\r\n          <a class=\"nav-item nav-link\" routerLink=\"/alladverts\">Homes for sale</a>\r\n          <a class=\"nav-item nav-link\" routerLink=\"/myadverts\" *ngIf=\"currentUser\">My Ads</a>\r\n          <a class=\"nav-item nav-link\" routerLink=\"/myaccount\" *ngIf=\"currentUser\">My Profile</a>\r\n          <a class=\"nav-item nav-link\" [routerLink]=\"['/editadvert', 0]\" *ngIf=\"currentUser\">Create Ad</a>\r\n          <a class=\"nav-item nav-link\" routerLink=\"/favourites\" *ngIf=\"currentUser\">Favourites</a>\r\n          <a class=\"nav-item nav-link\" routerLink=\"/login\" *ngIf=\"!currentUser\">Login</a>\r\n          <a class=\"nav-item nav-link\" routerLink=\"/registration\" *ngIf=\"!currentUser\">Register</a>\r\n          <a class=\"nav-item nav-link\" (click)=\"logout()\" *ngIf=\"currentUser\">Logout</a>\r\n      </div>\r\n    </nav>\r\n    <h1>Find your dream mountain home</h1>\r\n    <div class=\"search\">\r\n      <app-search></app-search>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DeleteDialogComponent } from '@app/adverts/dialogs/delete-dialog/delete-dialog.component';\nimport { IAdvert } from '@app/_models/IAdvert';\nimport { IUser } from '@app/_models/IUser';\nimport { AuthenticationService } from '@app/_services';\nimport { AdvertService } from '@app/_services/advert.service';\n\n@Component({\n  selector: 'app-advert-actions',\n  templateUrl: './advert-actions.component.html',\n  styleUrls: ['./advert-actions.component.scss']\n})\nexport class AdvertActionsComponent implements OnInit {\n\n  loading: boolean;\n  @Input() advert: IAdvert;\n\n  adverts: IAdvert[];\n  currentUser: IUser;\n\n  constructor(private advertService: AdvertService,\n              private authService: AuthenticationService,\n              private matDialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.currentUser = this.authService.currentUserValue;\n  }\n\n  changeStatus(): void {\n      this.advert.status = this.advert.status == \"Live\" ? \"Hidden\" : \"Live\";\n\n      const updatedAdvert = { ...this.advert };\n\n      this.advertService\n        .updateAdvert(updatedAdvert)\n        .subscribe();\n  }\n\n  openDeleteDialog(): void {\n    this.matDialog.open(DeleteDialogComponent, {\n      data: this.advert\n    })\n  }\n}\n","<div class=\"container\">\n    <span\n      class=\"badge py-2 px-3\"\n      [ngClass]=\"{\n        'badge-success': advert.status == 'Live',\n        'badge-warning': advert.status == 'Hidden'\n      }\"\n      >{{ advert.status }}</span>\n    <div class=\"dropdown\">\n      <button\n        class=\"btn btn-info btn-sm dropdown-toggle\"\n        type=\"button\"\n        id=\"dropdownMenuButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n      >\n        Actions\n      </button>\n\n      <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n        <a\n          *ngIf=\"advert.status == 'Live'\"\n          class=\"dropdown-item small\"\n          (click)=\"changeStatus()\"\n          >Hide Advert</a\n        >\n        <a\n          *ngIf=\"advert.status == 'Hidden'\"\n          class=\"dropdown-item small\"\n          (click)=\"changeStatus()\"\n          >Unhide Advert</a\n        >\n        <div class=\"dropdown-divider\"></div>\n        <a\n          class=\"dropdown-item small\"\n          [routerLink]=\"['/editadvert', advert.id]\"\n          >Edit Advert</a\n        >\n        <a class=\"dropdown-item small\" (click)=\"openDeleteDialog()\">Delete Advert</a>\n      </div>\n    </div>\n  </div> ","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { IUser } from '@app/_models/IUser';\nimport { AuthenticationService, UserService } from '@app/_services';\n\n@Component({\n  selector: 'app-advert-card-large',\n  templateUrl: './advert-card-large.component.html',\n  styleUrls: ['./advert-card-large.component.scss']\n})\nexport class AdvertCardLargeComponent implements OnInit {\n\n  @Input() advert;\n  @Output() advertIdEvent = new EventEmitter<number>();\n\n  authUser: IUser;\n  isFavourite: boolean;\n  displayActions: boolean;\n  isLoading: boolean = true;\n\n  constructor(private authService: AuthenticationService,\n              private userService: UserService,\n              private matSnackBar: MatSnackBar,\n              private router: Router) { }\n\n  ngOnInit(): void {\n\n    const authUserId = this.authService.currentUserValue?.id;\n\n    if (!authUserId) {\n      return;\n    }\n\n    this.userService.getUser(authUserId)\n      .subscribe(user => {\n        this.authUser = user;\n        this.authUser.favourites.includes(this.advert.id) ? this.isFavourite = true : this.isFavourite = false;\n        this.router.url === '/myadverts' ? this.displayActions = true : this.displayActions = false;\n        this.isLoading  = false;\n      });\n  }\n\n  toggleFavourite(id: number): void {\n    const authUserId = this.authService.currentUserValue.id;\n\n    this.userService.getUser(authUserId).subscribe(user => {\n\n      if (!this.isFavourite) {\n        user.favourites.push(this.advert.id);\n        this.isFavourite = true;\n      } else {\n        const newFavourites = user.favourites.filter(element => element !== this.advert.id);\n        this.isFavourite = false;\n        user.favourites = newFavourites;\n        this.advertIdEvent.emit(id);\n      }\n\n      this.userService.updateUser(user).subscribe();\n      this.matSnackBar.open(`${this.isFavourite ? \"Added to\" : \"Removed from\"} your favourites`, \"Close\", {\n        duration: 2000\n      })\n    })\n  }\n}\n","<div class=\"mb-3\">\n    <div class=\"card my-4 box-link\">\n        <div class=\"row no-gutters\">\n            <div class=\"col-md-4\">\n                <div class=\"bd-placeholder-img\">\n                    <a [routerLink]=\"['/advertdetail', advert.id]\"><img [src]=\"advert.headlineImage\" alt=\"\" /></a>\n                </div>\n            </div>\n            <div [ngClass]=\"displayActions ? 'col-md-6' : 'col-md-8'\">\n                <div class=\"card-body\">\n                <h1 class=\"card-title h4\">{{ advert.price | currency: \"ZAR\":\"symbol-narrow\" }}</h1>\n                <a class=\"card-text h5\" [routerLink]=\"['/advertdetail', advert.id]\">{{ advert.title }}</a>\n                <p class=\"card-text\" [innerHtml]=\"advert.details | truncateText: 275\" ></p>\n                <p>{{ advert.province }}, {{ advert.city}}</p>\n                <div class=\"icon-cont-max\">\n                    <div class=\"icons\">\n                        <div class=\"icon-container\">\n                            <i class=\"fa fa-solid fa-bed\"></i>\n                            <span>{{ advert.bedrooms }}</span>\n                        </div>\n                        <div class=\"icon-container\">\n                            <i class=\"fa fa-solid fa-toilet\"></i>\n                            <span>{{ advert.bathrooms }}</span>\n                        </div>\n                        <div class=\"icon-container\">\n                            <i class=\"fa fa-solid fa-car\"></i>\n                            <span>{{ advert.parkingSpaces }}</span>\n                        </div>\n                    </div>\n                    <mat-icon *ngIf=\"!isLoading\" (click)=\"toggleFavourite(advert.id)\">{{ isFavourite ? \"favorite\" : \"favorite_border\"}}</mat-icon>\n                </div>\n                </div>\n            </div>  \n\n            <div *ngIf=\"displayActions\" class=\"col-md-2\">\n                <app-advert-actions [advert]=\"advert\"></app-advert-actions>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { CustomValidators } from '@app/_helpers/customValidators';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { invalidInputs } from '@app/shared/utils';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-contact-form',\r\n  templateUrl: './contact-form.component.html',\r\n  styleUrls: ['./contact-form.component.scss']\r\n})\r\nexport class ContactFormComponent implements OnInit {\r\n\r\n  @Output() closeDialogEvent = new EventEmitter<boolean>();\r\n\r\n  contactSellerForm: FormGroup; \r\n  validationMessage: { [key: string]: string } = {};\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private matSnackBar: MatSnackBar) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.contactSellerForm = this.formBuilder.group({\r\n      name: [\"\", Validators.required],\r\n      email: [\"\", [Validators.required, Validators.email]],\r\n      contactNumber: [\"\", [Validators.required, CustomValidators.onlyNumbers]],\r\n      message: [\"\", [Validators.required]]\r\n    })\r\n\r\n    this.contactSellerForm.valueChanges\r\n    .pipe(debounceTime(500))\r\n    .subscribe(x => {\r\n      this.validationMessage = invalidInputs(this.contactSellerForm);\r\n    })\r\n\r\n  }\r\n  \r\n  contactClick(): void {\r\n    if (!this.contactSellerForm.valid) {\r\n      this.contactSellerForm.markAllAsTouched();\r\n      this.validationMessage = invalidInputs(this.contactSellerForm);\r\n      return;\r\n    }\r\n\r\n    if (this.contactSellerForm.valid) {\r\n      this.matSnackBar.open(\"Your message has been sent\", 'Close', {\r\n        duration: 2000\r\n      });\r\n      \r\n      this.closeDialogEvent.emit(true);\r\n      this.contactSellerForm.reset();\r\n      return;\r\n    }\r\n    \r\n  }\r\n\r\n}\r\n","<div class=\"contact-card\">\n    <h5 class=\"\">Contact Seller</h5>\n    <form action=\"\" [formGroup]=\"contactSellerForm\">\n      <div class=\"form-group\">\n        <input formControlName=\"name\" \n             placeholder=\"Your name\" \n             class=\"form-control\" \n             type=\"text\" \n             [ngClass]=\"{ 'is-invalid': validationMessage && validationMessage.name }\">\n        <span class=\"invalid-feedback\">\n          {{ validationMessage.name }}\n        </span>\n      </div>\n      <div class=\"form-group\">\n        <input formControlName=\"email\" \n                placeholder=\"Your email\" \n                class=\"form-control\" \n                type=\"text\" \n                [ngClass]=\"{ 'is-invalid': validationMessage && validationMessage.email }\">\n        <span class=\"invalid-feedback\">\n          {{ validationMessage.email }}\n        </span>\n      </div>\n      <div class=\"form-group\">\n        <input formControlName=\"contactNumber\" \n                placeholder=\"Your cell number\" \n                class=\"form-control\" \n                type=\"text\"\n                [ngClass]=\"{ 'is-invalid': validationMessage && validationMessage.contactNumber }\">\n        <span class=\"invalid-feedback\">\n          {{ validationMessage.contactNumber }}\n        </span>\n      </div>\n      <div class=\"form-group\">\n        <textarea formControlName=\"message\" \n                  placeholder=\"Your message\" \n                  class=\"form-control\"\n                  [ngClass]=\"{ 'is-invalid': validationMessage && validationMessage.message }\">\n        </textarea>\n        <span class=\"invalid-feedback\">\n          {{ validationMessage.message }}\n        </span>\n      </div>\n      \n      \n      <button class=\"btn btn-outline-dark btn-sm btn-block\" (click)=\"contactClick()\">Send</button>\n    </form>\n  </div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { IUser } from '@app/_models/IUser';\nimport { AuthenticationService } from '@app/_services';\n\n@Component({\n  selector: 'app-mobile-nav',\n  templateUrl: './mobile-nav.component.html',\n  styleUrls: ['./mobile-nav.component.scss']\n})\nexport class MobileNavComponent implements OnInit {\n\n  currentUser: IUser;\n  \n  constructor(@Inject(MAT_DIALOG_DATA) private data: any,\n              private authService: AuthenticationService,\n              private router: Router\n              ) { }\n\n  ngOnInit(): void {\n    this.currentUser = this.data;\n  }\n\n  logout() {\n    this.authService.logout();\n    this.router.navigate([\"/login\"]);\n  }\n\n}\n","<nav class=\"navbar-container\">\n    <mat-icon mat-dialog-close class=\"close\">close</mat-icon>\n    <div class=\"navbar-items\">\n        <a mat-dialog-close class=\"nav-item nav-link\" routerLink=\"/home\">Home</a>\n        <a mat-dialog-close class=\"nav-item nav-link\" routerLink=\"/alladverts\">Homes for sale</a>\n        <a mat-dialog-close class=\"nav-item nav-link\" routerLink=\"/myadverts\" *ngIf=\"currentUser\">My Ads</a>\n        <a mat-dialog-close class=\"nav-item nav-link\" routerLink=\"/myaccount\" *ngIf=\"currentUser\">My Profile</a>\n        <a mat-dialog-close class=\"nav-item nav-link\" [routerLink]=\"['/editadvert', 0]\" *ngIf=\"currentUser\">Create Ad</a>\n        <a mat-dialog-close class=\"nav-item nav-link\" routerLink=\"/favourites\" *ngIf=\"currentUser\">Favourites</a>\n        <a mat-dialog-close class=\"nav-item nav-link\" routerLink=\"/login\" *ngIf=\"!currentUser\">Login</a>\n        <a mat-dialog-close class=\"nav-item nav-link\" routerLink=\"/registration\" *ngIf=\"!currentUser\">Register</a>\n        <a mat-dialog-close class=\"nav-item nav-link\" (click)=\"logout()\" *ngIf=\"currentUser\">Logout</a>\n    </div>\n  </nav>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatCardModule} from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDividerModule } from '@angular/material/divider';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatSortModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatInputModule,\n    MatIconModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatCardModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatDividerModule\n  ],\n  exports: [\n    CommonModule,\n    MatTableModule,\n    MatSortModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatInputModule,\n    MatIconModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatCardModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatDividerModule\n  ]\n})\nexport class NgMaterialModule { }\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LocationService } from '@app/_services/location.service';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.scss']\r\n})\r\nexport class SearchComponent implements OnInit {\r\n\r\n  @Output() closeDialogEvent = new EventEmitter<boolean>();\r\n\r\n  provinces = ['Gauteng', 'North West', 'Northern Cape', 'Western Cape', 'Eastern Cape', 'Limpopo', 'Free State', 'Mpumalanga', 'KwaZulu-Natal'];\r\n  searchForm: FormGroup;\r\n  cities: string[] = [];\r\n  prices = [];\r\n\r\n\r\n  constructor(private _formBuilder: FormBuilder,\r\n              private _locationService: LocationService,\r\n              private router: Router,\r\n              private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void { \r\n\r\n    this.searchForm = this._formBuilder.group({\r\n      province: [\"\", []],\r\n      city: [\"\", []],\r\n      minPrice: [\"\", []],\r\n      maxPrice: [\"\", []],\r\n      keyword: [\"\", []]\r\n    })\r\n\r\n    this.route.queryParamMap\r\n      .subscribe((params: any) => {\r\n        const queryParams = params.params;\r\n        \r\n        this.searchForm.setValue({\r\n          province: queryParams.province ? queryParams.province : \"\",\r\n          city: queryParams.city ? queryParams.city : \"\",\r\n          minPrice: +queryParams.minPrice ? +queryParams.minPrice : null,\r\n          maxPrice: +queryParams.maxPrice ? +queryParams.maxPrice : null,\r\n          keyword: queryParams.keyword ? queryParams.keyword : \"\"\r\n        })\r\n\r\n        if (queryParams.city) {\r\n          this._locationService.list()\r\n            .pipe(\r\n              map(x => {\r\n                const cities = x.filter(x => x.name === queryParams.city);\r\n                return cities.map(city => city.name);\r\n              })\r\n            )\r\n            .subscribe(cities => {\r\n              this.cities = cities;\r\n              this.searchForm.get(\"city\").patchValue(cities[0]);\r\n            })\r\n        }\r\n      })\r\n\r\n    this.searchForm.get(\"province\").valueChanges\r\n      .subscribe(value => {\r\n        this._locationService.list()\r\n        .pipe(\r\n          map(x => {\r\n            const cities = x.filter(x => x.province === value);\r\n            return cities.map(city => city.name);\r\n          })\r\n        )\r\n        .subscribe(cities => {\r\n          this.cities = cities;\r\n        })\r\n      })\r\n\r\n      this.assignClass();\r\n      this.generatePrices();\r\n  }\r\n\r\n  onSearch(): void {\r\n\r\n    let queryParams: any = {};\r\n  \r\n    if (this.searchForm.get(\"province\").value) queryParams.province = this.searchForm.get(\"province\").value;\r\n    if (this.searchForm.get(\"city\").value) queryParams.city = this.searchForm.get(\"city\").value;\r\n    if (this.searchForm.get(\"minPrice\").value) queryParams.minPrice = this.searchForm.get(\"minPrice\").value;\r\n    if (this.searchForm.get(\"maxPrice\").value) queryParams.maxPrice = this.searchForm.get(\"maxPrice\").value;\r\n    if (this.searchForm.get(\"keyword\").value) queryParams.keyword = this.searchForm.get(\"keyword\").value;\r\n    \r\n    this.closeDialogEvent.emit(true);\r\n        this.router.navigate(\r\n          ['/alladverts'],\r\n          { queryParams }\r\n        )\r\n  }\r\n\r\n  resetClick(): void {\r\n    if (this.router.url == '/home') {\r\n      this.searchForm.reset();\r\n      this.searchForm.patchValue({\r\n        province: \"\",\r\n        city: \"\",\r\n        minPrice: \"\",\r\n        maxPrice: \"\"\r\n      })\r\n\r\n      return;\r\n    }\r\n\r\n    this.searchForm.reset();\r\n    this.router.navigate(\r\n      ['/alladverts']\r\n    )\r\n  }\r\n\r\n  assignClass() {\r\n    const url = this.router.url;\r\n    if (url == \"/home\") {\r\n      return 'class1';\r\n    } else {\r\n      return 'class2';\r\n    }\r\n  }\r\n\r\n  generatePrices() {\r\n    let price = 500000;\r\n    let count = 0;\r\n\r\n    for (let i = 0; count < 16; i++) {\r\n      this.prices.push(price);\r\n      price += 500000;\r\n      count++;\r\n    }\r\n  }\r\n\r\n}\r\n","<div [ngClass]=\"assignClass()\">\r\n\r\n    <form action=\"\" class=\"form\" (ngSubmit)=\"onSearch()\" [formGroup]=\"searchForm\">\r\n      <div class=\"filters\">\r\n        <mat-form-field>\r\n          <mat-select name=\"province\" id=\"\" placeholder=\"Province\" formControlName=\"province\">\r\n            <mat-option [value]=\"prov\" *ngFor=\"let prov of provinces\">{{ prov }}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field>\r\n          <mat-select placeholder=\"City\" name=\"city\" id=\"\" formControlName=\"city\" >\r\n            <mat-option [value]=\"city\" *ngFor=\"let city of cities\">{{ city }}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field>\r\n          <mat-select name=\"minPrice\" id=\"\" placeholder=\"Min Price\" formControlName=\"minPrice\">\r\n            <mat-option [value]=\"price\" *ngFor=\"let price of prices\">{{ price }}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field>\r\n          <mat-select name=\"maxPrice\" id=\"\" placeholder=\"Max Price\" formControlName=\"maxPrice\">\r\n            <mat-option [value]=\"price\" *ngFor=\"let price of prices\">{{ price }}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"bottom-row\">\r\n        <mat-form-field>\r\n          <input matInput\r\n            type=\"text\"\r\n            placeholder=\"Search term...\"\r\n            formControlName=\"keyword\"\r\n            class=\"search-bar\"\r\n          />\r\n        </mat-form-field>\r\n\r\n        <div class=\"buttons\">\r\n          <button type=\"button\" class=\"btn btn-light search\" (click)=\"onSearch()\">Search</button>\r\n          <button type=\"button\" class=\"btn btn-light reset\" (click)=\"resetClick()\">Reset</button>\r\n        </div>\r\n      </div>\r\n\r\n  </form>\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SearchComponent } from './search/search.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TruncateTextPipe } from '@app/_helpers/truncate-text.pipe';\nimport { NgMaterialModule } from './ng-material/ng-material.module';\nimport { AdvertCardLargeComponent } from './advert-card-large/advert-card-large.component';\nimport { RouterModule } from '@angular/router';\nimport { ContactFormComponent } from './contact-form/contact-form.component';\nimport { AdvertActionsComponent } from './advert-actions/advert-actions.component';\nimport { MobileNavComponent } from './mobile-nav/mobile-nav.component';\n\n\n\n@NgModule({\n  declarations: [\n    SearchComponent,\n    TruncateTextPipe,\n    AdvertCardLargeComponent,\n    ContactFormComponent,\n    AdvertActionsComponent,\n    MobileNavComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgMaterialModule,\n    RouterModule\n  ],\n  exports: [\n    SearchComponent,\n    TruncateTextPipe,\n    NgMaterialModule,\n    AdvertCardLargeComponent,\n    ContactFormComponent\n  ]\n})\nexport class SharedModule { }\n","import { FormGroup } from \"@angular/forms\";\r\n\r\nexport function invalidInputs(formgroup: FormGroup) {\r\n\r\n    let messages = {};\r\n    for (const input in formgroup.controls) {\r\n      const control = formgroup.controls[input];\r\n\r\n      // If the passwords don't match, assign error message.\r\n      if (control instanceof FormGroup && control.errors) {\r\n        Object.keys(control.errors).map((messageKey) => {\r\n          messages[input] = validationMessages[input][messageKey];\r\n        });\r\n      }\r\n\r\n      // If the password field doesn't meet the requirements, assign error message.\r\n      if (control instanceof FormGroup) {\r\n        const nestedGroupMessages = invalidInputs(control);\r\n        Object.assign(messages, nestedGroupMessages);\r\n      }\r\n\r\n      // If any of the other fields don't meet the requirements, assign error message.\r\n      if (validationMessages[input]) {\r\n        messages[input] = \"\"; \r\n        if (control.errors && (control.dirty || control.touched)) {\r\n\r\n          Object.keys(control.errors).map((messageKey) => {\r\n            messages[input] = validationMessages[input][messageKey];\r\n          });\r\n        }\r\n      }\r\n    }\r\n    return messages;\r\n  }\r\n\r\n  \r\nconst validationMessages: {} = {\r\n  firstName: {\r\n    required: \"A first name is required.\",\r\n    minlength: \"Your first name need to be at least 1 character long.\",\r\n    multipleSpaceValidator: \"Your first name cannot contain multiple spaces.\",\r\n    maxlength: \"Your first name cannot be longer than 100 characters\",\r\n    noNumbers: \"Your first name cannot contain any numbers\",\r\n    noSpecialChar: \"Your first name cannot contain any special characters\",\r\n  },\r\n  lastName: {\r\n    required: \"Your last name is required\",\r\n    minlength: \"Your last name needs to be at least 3 characters long.\",\r\n    multipleSpaceValidator: \"Your last name cannot contain multiple spaces.\",\r\n    maxlength: \"Your last name cannot be longer than 100 characters\",\r\n    noNumbers: \"Your last name cannot contain any numbers\",\r\n    noSpecialChar: \"Your last name cannot contain any special characters\",\r\n  },\r\n  email: {\r\n    required: \"Your email address is required.\",\r\n    minlength: \"Your email address must be at least 6 characters long\",\r\n    noSpaceValidator: \"Your email address cannot contain spaces.\",\r\n    email: \"This must be a valid email address.\",\r\n    maxlength: \"Your email cannot be longer than 100 characters\",\r\n  },\r\n  contactNumber: {\r\n    required: \"Your contact number is required.\",\r\n    onlyNumbers: \"Your contact number can only contain numbers\",\r\n  },\r\n  currentPassword: {\r\n    required: \"Your current password is required\"\r\n  },\r\n  passwords: {\r\n    match: \"Your passwords must match\",\r\n  },\r\n  password: {\r\n    required: \"A password is required\",\r\n    minlength: \"Your password needs to be at least 8 characters long\",\r\n    maxlength: \"Your password cannot be longer than 100 characters\",\r\n    noSpaceValidator: \"Your password cannot contain spaces\",\r\n    passwordNumber: \"Your password must contain at least one number\",\r\n    passwordUpperCase:\r\n      \"Your password must contain at leat one uppercase character\",\r\n  },\r\n  confirmPass: {\r\n    required: \"Please confirm your password\",\r\n  },\r\n  name: {\r\n    required: \"Your name is required.\"\r\n  },\r\n  message: {\r\n    required: \"A message is required\",\r\n  },\r\n  title: {\r\n    required: \"An advert title is required.\",\r\n    minlength: \"Your advert title must be at least 10 characters long.\",\r\n    maxlength: \"Your advert title cannot be longer than 100 characters\",\r\n    multipleSpaceValidator: \"Your advert title cannot have consecutive spaces\"\r\n  },\r\n  province: {\r\n    required: \"Your province is required.\",\r\n  },\r\n  city: {\r\n    required: \"Your city is required.\",\r\n  },\r\n  details: {\r\n    required: \"Advert details are required.\",\r\n    minlength: \"Your advert details need to be at least 10 characters long.\",\r\n    maxlength: \"Your advert details cannot be longer than 1000 characters.\",\r\n    multipleSpaceValidator: \"Your advert details cannot have consecutive spaces\"\r\n  },\r\n  price: {\r\n    required: \"An advert price is required.\",\r\n    min: \"The minimum advert price is R10 000\",\r\n    max: \"The maximum advert price is R100,000,000\",\r\n    noSpaceValidator: \"Your price cannot contain spaces\",\r\n    onlyNumbers: \"Your price can only contain numbers\"\r\n  },\r\n  bedrooms: {\r\n    required: \"Bedrooms are required\",\r\n    min: \"Cannot be less than 0\"\r\n  },\r\n  bathrooms: {\r\n    required: \"Bathrooms are required\",\r\n    min: \"Cannot be less than 0\"\r\n  },\r\n  parkingSpaces: {\r\n    required: \"Parkings are required\",\r\n    min: \"Cannot be less than 0\"\r\n  }\r\n};","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n    production: false,\r\n    apiUrl: 'http://localhost:3000'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n    enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n    .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}